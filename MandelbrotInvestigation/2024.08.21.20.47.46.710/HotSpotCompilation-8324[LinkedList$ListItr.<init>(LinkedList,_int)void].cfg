begin_compilation
  name " HotSpotCompilation-8324[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  method "HotSpotCompilation-8324[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  date 1724269758345
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.LinkedList$ListItr
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v122 v126 v127 v124 ?10 v112 v115 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a24 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v38 ?10 v12 v51 v48 v76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
localsSize: 3
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 888
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a16 i3 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a16 i3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.LinkedList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 a57 v125 ?10 v112 v129 v128 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-15627|0xffffffffffffc2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 14]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v123 
lastLocationAccess: - 
=== Succesors ===
next: i117 
=== Usages ===
v68 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v123 lastLocationAccess: - #next: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v125 
lastLocationAccess: - 
=== Succesors ===
next: a118 
=== Usages ===
v12 i37 i47 
=== Predecessor ===
i116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v125 lastLocationAccess: - #next: a118  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a118 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v128 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
a81 
=== Predecessor ===
i117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v128 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v60 v110 v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v122 
value: - 
stateBefore: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
a118 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v122 value: - stateBefore: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
op: Compress
stamp: n# java.util.LinkedList
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.this$0
location: LinkedList$ListItr.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v122 
lastLocationAccess: - 
value: a57 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v122 lastLocationAccess: - value: a57 stateAfter: - #next: v112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v122 
value: a2 
object: a1 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v122 value: a2 object: a1 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.expectedModCount
location: LinkedList$ListItr.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v124 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v124 lastLocationAccess: - value: i116 stateAfter: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i117 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.33983003788766053
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v14 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 v51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i117 
y: i36 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i117 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i37 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.9327427617175151
stamp: void
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v40 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:582) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i36 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:582) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:584) [bci: 33]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a118 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a118  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:582) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: -23827
stableDimension: 0
stamp: i32 [-23827]
stampKind: i32
value: int[-23827|0xffffffffffffa2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i32
=== Inputs ===
x: i117 
y: i46 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i117 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i47 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid j104 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851]
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i32 [-24851 - -23827] bits:1...10xxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v101 
values: i103 i109 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: i103 i109  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v101 
values: j104 j78 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: j104 j78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v102 v108 
=== Succesors ===
next: v107 
=== Usages ===
i105 j106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v102 v108 #next: v107  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: aload_0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 17]
sourceFile: LinkedList.java
sourceLine: 890
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
stateBefore: ?10 
actionAndReason: i105 
speculation: j106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?10 actionAndReason: i105 speculation: j106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:589) [bci: 63]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a119  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
a84 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a119 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a119  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
a119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: a# java.util.LinkedList$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v22 
values: a16 a81 a84 
=== Succesors ===
=== Usages ===
a71 v115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v22 values: a16 a81 a84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 v56 
=== Succesors ===
next: v113 
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 v56 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v74 v113 v115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
precise: true
stamp: void
=== Inputs ===
address: v126 
value: - 
stateBefore: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v126 value: - stateBefore: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
op: Compress
stamp: n# java.util.LinkedList$Node
=== Inputs ===
value: a24 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.next
location: LinkedList$ListItr.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v126 
lastLocationAccess: - 
value: a71 
stateAfter: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v126 lastLocationAccess: - value: a71 stateAfter: - #next: v115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
precise: false
stamp: void
=== Inputs ===
address: v126 
value: a24 
object: a1 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v126 value: a24 object: a1 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.nextIndex
location: LinkedList$ListItr.nextIndex
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:891) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v127 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v127 lastLocationAccess: - value: i3 stateAfter: - #next: v77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:892) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:892) [bci: 46]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i116 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i116  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.LinkedList$ListItr
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v122 v126 v127 v124 ?10 v112 v115 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a24 ?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v38 ?10 v12 v51 v48 v76 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
localsSize: 3
locksSize: 0
sourceFile: LinkedList.java
sourceLine: 888
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a16 i3 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a16 i3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.LinkedList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 a57 v125 ?10 v112 v129 v128 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v123 <|@
result [v1|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i116 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i116 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-15627|0xffffffffffffc2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 14]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v123 
lastLocationAccess: - 
=== Succesors ===
next: i117 
=== Usages ===
v68 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v123 lastLocationAccess: - #next: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i117 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 23]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v125 
lastLocationAccess: - 
=== Succesors ===
next: a118 
=== Usages ===
v12 i37 i47 
=== Predecessor ===
i116 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v125 lastLocationAccess: - #next: a118  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a118 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a118 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v128 
lastLocationAccess: - 
=== Succesors ===
next: v110 
=== Usages ===
a81 
=== Predecessor ===
i117 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v128 lastLocationAccess: - #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v60 v110 v112 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v122 
value: - 
stateBefore: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
a118 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v122 value: - stateBefore: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
op: Compress
stamp: n# java.util.LinkedList
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.this$0
location: LinkedList$ListItr.this$0
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v122 
lastLocationAccess: - 
value: a57 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v122 lastLocationAccess: - value: a57 stateAfter: - #next: v112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v122 
value: a2 
object: a1 
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v122 value: a2 object: a1 #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v124 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.expectedModCount
location: LinkedList$ListItr.expectedModCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v124 
lastLocationAccess: - 
value: i116 
stateAfter: - 
=== Succesors ===
next: v15 
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v124 lastLocationAccess: - value: i116 stateAfter: - #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i117 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i3 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 26]
profileData: PROFILED designatedSuccessorProbability: 0.33983003788766053
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v14 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v14 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 33]
stamp: void
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid i36 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 5]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i37 v51 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 6]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i32 [-1073741824 - 1073741823]
=== Inputs ===
x: i117 
y: i36 
=== Succesors ===
=== Usages ===
v38 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i117 y: i36  <|@  <|@
f <@~|@floating>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i37 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i37  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:580) [bci: 7]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
profileData: PROFILED designatedSuccessorProbability: 0.9327427617175151
stamp: void
=== Inputs ===
condition: v38 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v38 #trueSuccessor: v40 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 10]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:582) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i36 
=== Succesors ===
=== Usages ===
v96 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i36  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:582) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v95 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v94 #falseSuccessor: v95  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:584) [bci: 33]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v23  <|@  <|@
f <@~|@floating>@ <|@
tid a81 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a118 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a118  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v94 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:582) [bci: 19]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:581) [bci: 11]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i109 <|@
result int[-23827|0xffffffffffffa2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: -23827
stableDimension: 0
stamp: i32 [-23827]
stampKind: i32
value: int[-23827|0xffffffffffffa2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v95 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 35]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid i46 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i47 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i47 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 45]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i32
=== Inputs ===
x: i117 
y: i46 
=== Succesors ===
=== Usages ===
v48 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i117 y: i46  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i47 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i47  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v99 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v98 #falseSuccessor: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid j104 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j106 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result int[-24851|0xffffffffffff9eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
rawvalue: -24851
stableDimension: 0
stamp: i32 [-24851]
stampKind: i32
value: int[-24851|0xffffffffffff9eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
v98 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i105 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i32 [-24851 - -23827] bits:1...10xxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v101 
values: i103 i109 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: i103 i109  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v101 
values: j104 j78 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v101 values: j104 j78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v102 v108 
=== Succesors ===
next: v107 
=== Usages ===
i105 j106 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v102 v108 #next: v107  <|@  <|@
tid ?10 <|@
d <@d|@=== Debug Properties ===
bci: 20
bytecode: aload_0
code: ResolvedJavaMethodBytecode<LinkedList$ListItr.<init>(LinkedList, int)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:886) [bci: 17]
sourceFile: LinkedList.java
sourceLine: 890
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 
=== Succesors ===
=== Usages ===
v107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:587) [bci: 49]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
stateBefore: ?10 
actionAndReason: i105 
speculation: j106 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?10 actionAndReason: i105 speculation: j106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:589) [bci: 63]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: void
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a119  <|@  <|@
f <@~|@floating>@ <|@
tid v129 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
result v16|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.LinkedList$Node
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
stamp: n# java.util.LinkedList$Node
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v129 
lastLocationAccess: - 
=== Succesors ===
next: v56 
=== Usages ===
a84 
=== Predecessor ===
v99 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v129 lastLocationAccess: - #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid a84 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList.node(LinkedList.java:586) [bci: 36]
at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 35]
op: Uncompress
stamp: a# java.util.LinkedList$Node
=== Inputs ===
value: a119 
=== Succesors ===
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a119  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
a119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a24 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: a# java.util.LinkedList$Node
valueDescription: a java.lang.Object
=== Inputs ===
merge: v22 
values: a16 a81 a84 
=== Succesors ===
=== Usages ===
a71 v115 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v22 values: a16 a81 a84  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 v56 
=== Succesors ===
next: v113 
=== Usages ===
a24 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 v56 #next: v113  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v74 v113 v115 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
precise: true
stamp: void
=== Inputs ===
address: v126 
value: - 
stateBefore: - 
=== Succesors ===
next: v74 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v126 value: - stateBefore: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid a71 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
op: Compress
stamp: n# java.util.LinkedList$Node
=== Inputs ===
value: a24 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a24  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.next
location: LinkedList$ListItr.next
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v126 
lastLocationAccess: - 
value: a71 
stateAfter: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v126 lastLocationAccess: - value: a71 stateAfter: - #next: v115  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 38]
precise: false
stamp: void
=== Inputs ===
address: v126 
value: a24 
object: a1 
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v126 value: a24 object: a1 #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid v127 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: LinkedList$ListItr.nextIndex
location: LinkedList$ListItr.nextIndex
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:891) [bci: 43]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v127 
lastLocationAccess: - 
value: i3 
stateAfter: - 
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v127 lastLocationAccess: - value: i3 stateAfter: - #next: v77  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: ANY_LOCATION
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:892) [bci: 46]
stamp: void
=== Inputs ===
=== Succesors ===
next: v31 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: v31  <|@  <|@
f <@*|@fixed>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.LinkedList$ListItr.<init>(LinkedList.java:892) [bci: 46]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  138  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  138  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 142[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 140[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 134[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 138[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [138, 384[[388, 429[138 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|q [140, 190[[216, 246[[388, 429[140 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|d [142, 384[[388, 429[142 MustHaveRegister 160 ShouldHaveRegister 176 ShouldHaveRegister 188 ShouldHaveRegister 230 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [144, 158[144 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [146, 178[[216, 228[146 MustHaveRegister 160 MustHaveRegister 174 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [148, 202[148 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[v7|q]" v7|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[v8|d]" v8|d v1|q [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[v10|q]" v10|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[v11|d]" v11|d v4|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q v5|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v4|d [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v16|d [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v12|q [252, 383[378 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[v20|q]" v20|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[v21|d]" v21|d v18|q [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[v23|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 142[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 140[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 134[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 138[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [138, 384[[388, 429[138 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [140, 190[[216, 246[[388, 429[140 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [142, 384[[388, 429[142 MustHaveRegister 160 ShouldHaveRegister 176 ShouldHaveRegister 188 ShouldHaveRegister 230 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [144, 158[144 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [146, 178[[216, 228[146 MustHaveRegister 160 MustHaveRegister 174 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [148, 202[148 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbx|q]" v7|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r9|d]" v8|d v1|q [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rbx|q]" v10|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r10|d]" v11|d v4|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q v5|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v4|d [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q v16|d [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r8|q]" v18|q v12|q [252, 383[378 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[r10|d]" v21|d v18|q [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[r11|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  138  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 142[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 140[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 134[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 138[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [138, 384[[388, 429[138 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [140, 190[[216, 246[[388, 429[140 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [142, 384[[388, 429[142 MustHaveRegister 160 ShouldHaveRegister 176 ShouldHaveRegister 188 ShouldHaveRegister 230 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [144, 158[144 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [146, 178[[216, 228[146 MustHaveRegister 160 MustHaveRegister 174 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [148, 202[148 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbx|q]" v7|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r9|d]" v8|d v1|q [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rbx|q]" v10|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r10|d]" v11|d v4|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q v5|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v4|d [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q v16|d [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r8|q]" v18|q v12|q [252, 383[378 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[r10|d]" v21|d v18|q [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[r11|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  138  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [int[-23827|0xffffffffffffa2ed], long[20|0x14]] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [int[-24851|0xffffffffffff9eed], long[660|0x294]] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rcx|d fixed "[rcx|d]" rcx|d -1 [0, 142[ "NoSpillStore"
  rdx|q fixed "[rdx|q]" rdx|q -1 [0, 140[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 134[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 138[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [138, 384[[388, 429[138 MustHaveRegister 150 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 376 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|q [140, 190[[216, 246[[388, 429[140 MustHaveRegister 144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 152 MustHaveRegister 156 MustHaveRegister 246 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|d [142, 384[[388, 429[142 MustHaveRegister 160 ShouldHaveRegister 176 ShouldHaveRegister 188 ShouldHaveRegister 230 ShouldHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [144, 158[144 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [146, 178[[216, 228[146 MustHaveRegister 160 MustHaveRegister 174 ShouldHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [148, 202[148 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[r9|q]" v6|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rbx|q]" v7|q -1 [150, 151[150 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[r9|d]" v8|d v1|q [152, 154[152 MustHaveRegister 154 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[r9|q]" v9|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rbx|q]" v10|q -1 [156, 157[156 MustHaveRegister  "NoDefinitionFound"
  v11|d DWORD "[r10|d]" v11|d v4|d [174, 176[174 MustHaveRegister 176 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[r8|q]" v12|q v5|d [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[r11|d]" v13|d v4|d [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[r10|d]" v14|d -1 [408, 424[424 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[r11|q]" v15|q -1 [408, 426[426 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [246, 248[246 MustHaveRegister 248 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r10|q]" v17|q v16|d [248, 251[248 MustHaveRegister 250 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[r8|q]" v18|q v12|q [252, 383[378 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[r10|q]" v19|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [376, 377[376 MustHaveRegister  "NoDefinitionFound"
  v21|d DWORD "[r10|d]" v21|d v18|q [378, 380[378 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[r10|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[r11|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  138  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [v18|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [v14|DWORD, v15|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  138  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction v5|DWORD[_] = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 28], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [v0|QWORD[.] + 28], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v3|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v2|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction v11|DWORD = SAR value: v4|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: v11|DWORD, y: v2|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction v12|QWORD[.] = UNCOMPRESSPOINTER (input: v5|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction v13|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction v16|DWORD[_] = MOV input: [v1|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction v17|QWORD[.] = UNCOMPRESSPOINTER (input: v16|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE input: v17|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 24], ~expectedObject: -) {temp: v19|QWORD, temp2: v20|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction v21|DWORD[_] = COMPRESSPOINTER (input: v18|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v21|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v18|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v2|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v14|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v15|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD <|@ <|@
      nr  144  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0]
locals: rsi|QWORD[.] Object[null] rcx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0] <|@ <|@
      nr  146  <|@ instruction r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  148  <|@ instruction r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  150  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  152  <|@ instruction r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  158  <|@ instruction MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B6" 
    xhandlers
    flags 
    probability 4604121501936017069
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction r10|DWORD = SAR value: r11|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B10" 
    xhandlers
    flags 
    probability 4603721571404368081
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B1" "B4" "B9" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  378  <|@ instruction r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2 <|@ <|@
      nr  384  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  386  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599793453645906598
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B7" "B9" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction r11|DWORD = DEC value: r11|DWORD size: DWORD <|@ <|@
      nr  230  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4586559709542178238
    begin_IR
      LIR
      nr  232  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  248  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  250  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed] // MoveResolver resolve mapping <|@ <|@
      nr  396  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B5" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD 
>@ <|@ instruction DEOPT info [bci:20] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed] // MoveResolver resolve mapping <|@ <|@
      nr  406  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: putfield      #0          // this$0:java.util.LinkedList
     5: aload_0       
     6: invokespecial #1          // java.lang.Object.<init>:()void
     9: aload_0       
    10: aload_0       
    11: getfield      #0          // this$0:java.util.LinkedList
    14: getfield      #2          // java.util.AbstractList.modCount:int
    17: putfield      #3          // expectedModCount:int
    20: aload_0       
    21: iload_2       
    22: aload_1       
    23: getfield      #4          // java.util.LinkedList.size:int
    26: if_icmpne     33
    29: aconst_null   
    30: goto          38
    33: aload_1       
    34: iload_2       
    35: invokevirtual #5          // java.util.LinkedList.node:(int)java.util.LinkedList$Node
    38: putfield      #6          // next:java.util.LinkedList$Node
    41: aload_0       
    42: iload_2       
    43: putfield      #7          // nextIndex:int
    46: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f859e02000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048896c2410448b520c448b5a10448b421441807f40000f842d0000008b5e1c48c1e3034885db0f841d0000004d8b4f284983f9000f84320200004983e9084d894f284d034f384989194c8bca49c1e90344894e1c4c8bce4c33ca49c1e9160f844e0000004885d20f84450000004c8bce49c1e90948bb00e0368d787f00004c03cb41803902742bf08304240041803900742041c60100498b5f484885db0f84d80100004883eb0849895f4849035f584c890b44895610443bd90f84230100009090909090458bd341d1fa443bd10f8e1e0100009090909083f9010f8d38010000909090909049c1e0039090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b5e1849c1e3034d85db0f841d0000004d8b57284983fa000f843a0100004983ea084d8957284d0357384d891a4d8bd049c1ea03448956184c8bd64d33d049c1ea160f844e0000004d85c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84e00000004983eb084d895f484d035f584d8913894e0c488b6c24104883c418493ba7500400000f87c7000000c390909049c7c000000000e9f8feffff909090909041ffcb443bd90f8f48000000909090909090448b521849c1e2034d8bc2e9d1feffff90909049c7c31400000041baeda2ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c39402000041baed9effffebcc48896c2410e800000000e953fdfffff448891c24e800000000e9cffdfffff44c890c24e800000000e929fefffff44c891c24e800000000e9c7fefffff44c891424e800000000e921fffffff4488d0d25ffffff49898f68040000e9c9fcfffff441c78784040000f5c2ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 NOP  <||@
  Comment 111 108 NOP  <||@
  Comment 112 110 NOP  <||@
  Comment 113 112 NOP  <||@
  Comment 114 114 NOP  <||@
  Comment 115 116 NOP  <||@
  Comment 116 118 NOP  <||@
  Comment 117 120 NOP  <||@
  Comment 118 122 NOP  <||@
  Comment 119 124 NOP  <||@
  Comment 120 126 NOP  <||@
  Comment 121 128 NOP  <||@
  Comment 122 130 NOP  <||@
  Comment 123 132 NOP  <||@
  Comment 124 134 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 129 136 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD  <||@
  Comment 129 144 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 129 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD   <||@
  Comment 129 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 133 146 r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 137 148 r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 141 150 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 197 152 r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 204 154 MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 208 156 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 302 158 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 306 160 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 315 block B2 null  <||@
  Comment 315 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 315 164 NOP  <||@
  Comment 316 166 NOP  <||@
  Comment 317 168 NOP  <||@
  Comment 318 170 NOP  <||@
  Comment 319 172 NOP  <||@
  Comment 320 174 r10|DWORD = SAR value: r11|DWORD size: DWORD  <||@
  Comment 326 176 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD  <||@
  Comment 335 block B3 null  <||@
  Comment 335 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 335 180 NOP  <||@
  Comment 336 182 NOP  <||@
  Comment 337 184 NOP  <||@
  Comment 338 186 NOP  <||@
  Comment 339 188 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null  <||@
  Comment 348 block B4 null  <||@
  Comment 348 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 192 NOP  <||@
  Comment 349 194 NOP  <||@
  Comment 350 196 NOP  <||@
  Comment 351 198 NOP  <||@
  Comment 352 200 NOP  <||@
  Comment 353 202 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 357 204 JUMP ~outgoingValues: [] destination: B4 -> B10  <||@
  Comment 357 block B10 null  <||@
  Comment 357 252 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 357 254 NOP  <||@
  Comment 358 256 NOP  <||@
  Comment 359 258 NOP  <||@
  Comment 360 260 NOP  <||@
  Comment 361 262 NOP  <||@
  Comment 362 264 NOP  <||@
  Comment 363 266 NOP  <||@
  Comment 364 268 NOP  <||@
  Comment 365 270 NOP  <||@
  Comment 366 272 NOP  <||@
  Comment 367 274 NOP  <||@
  Comment 368 276 NOP  <||@
  Comment 369 278 NOP  <||@
  Comment 370 280 NOP  <||@
  Comment 371 282 NOP  <||@
  Comment 372 284 NOP  <||@
  Comment 373 286 NOP  <||@
  Comment 374 288 NOP  <||@
  Comment 375 290 NOP  <||@
  Comment 376 292 NOP  <||@
  Comment 377 294 NOP  <||@
  Comment 378 296 NOP  <||@
  Comment 379 298 NOP  <||@
  Comment 380 300 NOP  <||@
  Comment 381 302 NOP  <||@
  Comment 382 304 NOP  <||@
  Comment 383 306 NOP  <||@
  Comment 384 308 NOP  <||@
  Comment 385 310 NOP  <||@
  Comment 386 312 NOP  <||@
  Comment 387 314 NOP  <||@
  Comment 388 316 NOP  <||@
  Comment 389 318 NOP  <||@
  Comment 390 320 NOP  <||@
  Comment 391 322 NOP  <||@
  Comment 392 324 NOP  <||@
  Comment 393 326 NOP  <||@
  Comment 394 328 NOP  <||@
  Comment 395 330 NOP  <||@
  Comment 396 332 NOP  <||@
  Comment 397 334 NOP  <||@
  Comment 398 336 NOP  <||@
  Comment 399 338 NOP  <||@
  Comment 400 340 NOP  <||@
  Comment 401 342 NOP  <||@
  Comment 402 344 NOP  <||@
  Comment 403 346 NOP  <||@
  Comment 404 348 NOP  <||@
  Comment 405 350 NOP  <||@
  Comment 406 352 NOP  <||@
  Comment 407 354 NOP  <||@
  Comment 408 356 NOP  <||@
  Comment 409 358 NOP  <||@
  Comment 410 360 NOP  <||@
  Comment 411 362 NOP  <||@
  Comment 412 364 NOP  <||@
  Comment 413 366 NOP  <||@
  Comment 414 368 NOP  <||@
  Comment 415 370 NOP  <||@
  Comment 416 372 NOP  <||@
  Comment 417 374 NOP  <||@
  Comment 418 376 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 475 378 r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 482 380 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 486 382 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 580 384 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 583 386 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 592 POLL_RETURN_FAR  <||@
  Comment 606 block B1 null  <||@
  Comment 606 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 606 208 NOP  <||@
  Comment 607 210 NOP  <||@
  Comment 608 212 NOP  <||@
  Comment 609 -1 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 616 214 JUMP ~outgoingValues: [] destination: B1 -> B10  <||@
  Comment 621 block B6 null  <||@
  Comment 621 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 621 218 NOP  <||@
  Comment 622 220 NOP  <||@
  Comment 623 222 NOP  <||@
  Comment 624 224 NOP  <||@
  Comment 625 226 NOP  <||@
  Comment 626 228 r11|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 629 230 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD  <||@
  Comment 638 block B9 null  <||@
  Comment 638 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 638 234 NOP  <||@
  Comment 639 236 NOP  <||@
  Comment 640 238 NOP  <||@
  Comment 641 240 NOP  <||@
  Comment 642 242 NOP  <||@
  Comment 643 244 NOP  <||@
  Comment 644 246 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 648 248 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 652 -1 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 655 250 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 660 block B5 null  <||@
  Comment 660 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 390 NOP  <||@
  Comment 661 392 NOP  <||@
  Comment 662 394 NOP  <||@
  Comment 663 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 670 -1 r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed]  <||@
  Comment 676 396 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 676 block B8 null  <||@
  Comment 676 408 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 676 410 NOP  <||@
  Comment 677 412 NOP  <||@
  Comment 678 414 NOP  <||@
  Comment 679 416 NOP  <||@
  Comment 680 418 NOP  <||@
  Comment 681 420 NOP  <||@
  Comment 682 422 NOP  <||@
  Comment 683 424 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 690 426 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 697 428 DEOPT info [bci:20]  <||@
  Comment 697 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 702 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 710 block B7 null  <||@
  Comment 710 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 710 400 NOP  <||@
  Comment 711 402 NOP  <||@
  Comment 712 404 NOP  <||@
  Comment 713 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 720 -1 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 726 406 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 733 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 748 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 763 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 778 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 793 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 818 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 846 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 851 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD   <||@
  Comment 859 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 859 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 865 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 865 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8324[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  method "HotSpotCompilation-8324[java.util.LinkedList$ListItr.<init>(LinkedList, int)]"
  date 1724269758475
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af25fa0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85c3f085fe66669089842400c0feff4883ec189041817f20000000000f859e02000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048896c2410448b520c448b5a10448b421441807f40000f842d0000008b5e1c48c1e3034885db0f841d0000004d8b4f284983f9000f84320200004983e9084d894f284d034f384989194c8bca49c1e90344894e1c4c8bce4c33ca49c1e9160f844e0000004885d20f84450000004c8bce49c1e90948bb00e0368d787f00004c03cb41803902742bf08304240041803900742041c60100498b5f484885db0f84d80100004883eb0849895f4849035f584c890b44895610443bd90f84230100009090909090458bd341d1fa443bd10f8e1e0100009090909083f9010f8d38010000909090909049c1e0039090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000448b5e1849c1e3034d85db0f841d0000004d8b57284983fa000f843a0100004983ea084d8957284d0357384d891a4d8bd049c1ea03448956184c8bd64d33d049c1ea160f844e0000004d85c00f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f84e00000004983eb084d895f484d035f584d8913894e0c488b6c24104883c418493ba7500400000f87c7000000c390909049c7c000000000e9f8feffff909090909041ffcb443bd90f8f48000000909090909090448b521849c1e2034d8bc2e9d1feffff90909049c7c31400000041baeda2ffff90909090909090458997840400004d899f90040000e81c4f86fe0f1f84000000000090909049c7c39402000041baed9effffebcc48896c2410e89e4f84fee953fdfffff448891c24e86f1f9afee9cffdfffff44c890c24e8e0409afee929fefffff44c891c24e8511f9afee9c7fefffff44c891424e8c2409afee921fffffff4488d0d25ffffff49898f68040000e9295d86fef441c78784040000f5c2ffff49c7879004000000000000e8874e86fe0f1f840000000000e800f099fef4e81a4c86fef4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 NOP  <||@
  Comment 111 108 NOP  <||@
  Comment 112 110 NOP  <||@
  Comment 113 112 NOP  <||@
  Comment 114 114 NOP  <||@
  Comment 115 116 NOP  <||@
  Comment 116 118 NOP  <||@
  Comment 117 120 NOP  <||@
  Comment 118 122 NOP  <||@
  Comment 119 124 NOP  <||@
  Comment 120 126 NOP  <||@
  Comment 121 128 NOP  <||@
  Comment 122 130 NOP  <||@
  Comment 123 132 NOP  <||@
  Comment 124 134 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 129 136 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@663f2b1c slotKind: QWORD  <||@
  Comment 129 144 r10|DWORD = MOV input: [rdx|QWORD[.] + 12] size: DWORD state [bci:0]  <||@
  Comment 129 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD   <||@
  Comment 129 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 133 146 r11|DWORD = MOV input: [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 137 148 r8|DWORD[_] = MOV input: [rdx|QWORD[.] + 20] size: DWORD  <||@
  Comment 141 150 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 28], ~expectedObject: -) {temp: r9|QWORD, temp2: rbx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 197 152 r9|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 204 154 MOV (x: [rsi|QWORD[.] + 28], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 208 156 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: r9|QWORD, temp2: rbx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 302 158 MOV (x: [rsi|QWORD[.] + 16], y: r10|DWORD) size: DWORD  <||@
  Comment 306 160 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.33983003788766053 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 315 block B2 null  <||@
  Comment 315 162 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 315 164 NOP  <||@
  Comment 316 166 NOP  <||@
  Comment 317 168 NOP  <||@
  Comment 318 170 NOP  <||@
  Comment 319 172 NOP  <||@
  Comment 320 174 r10|DWORD = SAR value: r11|DWORD size: DWORD  <||@
  Comment 326 176 CMPBRANCH (x: r10|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.9327427617175151 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B6 size: DWORD  <||@
  Comment 335 block B3 null  <||@
  Comment 335 178 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 335 180 NOP  <||@
  Comment 336 182 NOP  <||@
  Comment 337 184 NOP  <||@
  Comment 338 186 NOP  <||@
  Comment 339 188 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 y: 1 size: DWORD inlinedY: null  <||@
  Comment 348 block B4 null  <||@
  Comment 348 190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 348 192 NOP  <||@
  Comment 349 194 NOP  <||@
  Comment 350 196 NOP  <||@
  Comment 351 198 NOP  <||@
  Comment 352 200 NOP  <||@
  Comment 353 202 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 357 204 JUMP ~outgoingValues: [] destination: B4 -> B10  <||@
  Comment 357 block B10 null  <||@
  Comment 357 252 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 357 254 NOP  <||@
  Comment 358 256 NOP  <||@
  Comment 359 258 NOP  <||@
  Comment 360 260 NOP  <||@
  Comment 361 262 NOP  <||@
  Comment 362 264 NOP  <||@
  Comment 363 266 NOP  <||@
  Comment 364 268 NOP  <||@
  Comment 365 270 NOP  <||@
  Comment 366 272 NOP  <||@
  Comment 367 274 NOP  <||@
  Comment 368 276 NOP  <||@
  Comment 369 278 NOP  <||@
  Comment 370 280 NOP  <||@
  Comment 371 282 NOP  <||@
  Comment 372 284 NOP  <||@
  Comment 373 286 NOP  <||@
  Comment 374 288 NOP  <||@
  Comment 375 290 NOP  <||@
  Comment 376 292 NOP  <||@
  Comment 377 294 NOP  <||@
  Comment 378 296 NOP  <||@
  Comment 379 298 NOP  <||@
  Comment 380 300 NOP  <||@
  Comment 381 302 NOP  <||@
  Comment 382 304 NOP  <||@
  Comment 383 306 NOP  <||@
  Comment 384 308 NOP  <||@
  Comment 385 310 NOP  <||@
  Comment 386 312 NOP  <||@
  Comment 387 314 NOP  <||@
  Comment 388 316 NOP  <||@
  Comment 389 318 NOP  <||@
  Comment 390 320 NOP  <||@
  Comment 391 322 NOP  <||@
  Comment 392 324 NOP  <||@
  Comment 393 326 NOP  <||@
  Comment 394 328 NOP  <||@
  Comment 395 330 NOP  <||@
  Comment 396 332 NOP  <||@
  Comment 397 334 NOP  <||@
  Comment 398 336 NOP  <||@
  Comment 399 338 NOP  <||@
  Comment 400 340 NOP  <||@
  Comment 401 342 NOP  <||@
  Comment 402 344 NOP  <||@
  Comment 403 346 NOP  <||@
  Comment 404 348 NOP  <||@
  Comment 405 350 NOP  <||@
  Comment 406 352 NOP  <||@
  Comment 407 354 NOP  <||@
  Comment 408 356 NOP  <||@
  Comment 409 358 NOP  <||@
  Comment 410 360 NOP  <||@
  Comment 411 362 NOP  <||@
  Comment 412 364 NOP  <||@
  Comment 413 366 NOP  <||@
  Comment 414 368 NOP  <||@
  Comment 415 370 NOP  <||@
  Comment 416 372 NOP  <||@
  Comment 417 374 NOP  <||@
  Comment 418 376 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 24], ~expectedObject: -) {temp: r10|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 475 378 r10|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 482 380 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD[_]) size: DWORD  <||@
  Comment 486 382 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r8|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@2b35e0b2  <||@
  Comment 580 384 MOV (x: [rsi|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 583 386 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 592 POLL_RETURN_FAR  <||@
  Comment 606 block B1 null  <||@
  Comment 606 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 606 208 NOP  <||@
  Comment 607 210 NOP  <||@
  Comment 608 212 NOP  <||@
  Comment 609 -1 r8|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 616 214 JUMP ~outgoingValues: [] destination: B1 -> B10  <||@
  Comment 621 block B6 null  <||@
  Comment 621 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 621 218 NOP  <||@
  Comment 622 220 NOP  <||@
  Comment 623 222 NOP  <||@
  Comment 624 224 NOP  <||@
  Comment 625 226 NOP  <||@
  Comment 626 228 r11|DWORD = DEC value: r11|DWORD size: DWORD  <||@
  Comment 629 230 CMPBRANCH (x: r11|DWORD, y: rcx|DWORD) trueDestinationProbability: 0.0 condition: > trueDestination: B6 -> B7 falseDestination: B6 -> B9 size: DWORD  <||@
  Comment 638 block B9 null  <||@
  Comment 638 232 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 638 234 NOP  <||@
  Comment 639 236 NOP  <||@
  Comment 640 238 NOP  <||@
  Comment 641 240 NOP  <||@
  Comment 642 242 NOP  <||@
  Comment 643 244 NOP  <||@
  Comment 644 246 r10|DWORD[_] = MOV input: [rdx|QWORD[.] + 24] size: DWORD  <||@
  Comment 648 248 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@51123574 encoding: base: 0 shift: 3  <||@
  Comment 652 -1 r8|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 655 250 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 660 block B5 null  <||@
  Comment 660 388 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 660 390 NOP  <||@
  Comment 661 392 NOP  <||@
  Comment 662 394 NOP  <||@
  Comment 663 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 670 -1 r10|DWORD = MOVE input: int[-23827|0xffffffffffffa2ed]  <||@
  Comment 676 396 JUMP ~outgoingValues: [] destination: B5 -> B8  <||@
  Comment 676 block B8 null  <||@
  Comment 676 408 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 676 410 NOP  <||@
  Comment 677 412 NOP  <||@
  Comment 678 414 NOP  <||@
  Comment 679 416 NOP  <||@
  Comment 680 418 NOP  <||@
  Comment 681 420 NOP  <||@
  Comment 682 422 NOP  <||@
  Comment 683 424 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 690 426 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 697 428 DEOPT info [bci:20]  <||@
  Comment 697 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 702 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:890) [bci: 20, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD   <||@
  Comment 710 block B7 null  <||@
  Comment 710 398 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 710 400 NOP  <||@
  Comment 711 402 NOP  <||@
  Comment 712 404 NOP  <||@
  Comment 713 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 720 -1 r10|DWORD = MOVE input: int[-24851|0xffffffffffff9eed]  <||@
  Comment 726 406 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 733 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 748 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 763 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 778 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 793 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 818 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 846 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 851 [rdx:0, rsi:0]at java.util.LinkedList$ListItr.<init>(LinkedList.java:888) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2         
     locals:  |rsi|QWORD[.]  |Object[null]  |rcx|DWORD   <||@
  Comment 859 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 859 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 865 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 865 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
