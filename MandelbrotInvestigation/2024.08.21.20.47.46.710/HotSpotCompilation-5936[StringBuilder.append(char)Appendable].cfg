begin_compilation
  name " HotSpotCompilation-5936[java.lang.StringBuilder.append(char)]"
  method "HotSpotCompilation-5936[java.lang.StringBuilder.append(char)]"
  date 1724269761006
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a448 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a448  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.StringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 ?128 v214 ?7 v460 ?121 v462 v461 ?282 ?281 v301 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a448 v190 a454 v299 v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: i449 
=== Usages ===
a138 v463 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?7 v125 v213 i28 ?121 ?281 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v289 v457 v459 a319 a401 i449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a448 
=== Succesors ===
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-35851|0xffffffffffff73f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v463 
lastLocationAccess: - 
=== Succesors ===
next: i450 
=== Usages ===
v224 v349 j367 i59 i78 i81 i87 v96 v113 i114 a319 
=== Predecessor ===
a448 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v463 lastLocationAccess: - #next: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i450 v212 v194 i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i450 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: i451 
=== Usages ===
v200 i25 j223 
=== Predecessor ===
i449 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
i147 v222 
=== Predecessor ===
i450 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 5]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 i25 i45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i450 
y: i11 
=== Succesors ===
=== Usages ===
v194 i60 i77 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i450 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i451 
=== Succesors ===
=== Usages ===
i59 i77 i80 i86 i66 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i449 
y: i147 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i449 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i25 
y: i59 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i25 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i11 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a448 
=== Succesors ===
=== Usages ===
j441 a246 j361 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a448  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i451 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v63 #falseSuccessor: v62  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i25 
y: i147 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i25 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i77 
y: i449 
=== Succesors ===
=== Usages ===
v93 i94 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i77 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i79 
y: i147 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i79 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i80 
y: i449 
=== Succesors ===
=== Usages ===
v93 i94 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i80 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i81 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i81  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v93 
trueValue: i81 
falseValue: i78 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v93 trueValue: i81 falseValue: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i94 
y: i449 
=== Succesors ===
=== Usages ===
i278 i86 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i94 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i87 
y: i277 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i279 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i278 y: i279  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v262 #falseSuccessor: v263  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i87 
y: i147 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i87 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i86 
y: i147 
=== Succesors ===
=== Usages ===
v96 v428 v113 i114 v225 j372 a401 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i86 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i449 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a319 a401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j329 j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j308 j373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v98 #falseSuccessor: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j303 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j303 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j341 
=== Usages ===
v466 v467 
=== Predecessor ===
v359 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j303 
index: - 
=== Succesors ===
=== Usages ===
j341 v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
=== Succesors ===
next: j342 
=== Usages ===
j309 v468 v469 a318 v473 v470 v471 v472 
=== Predecessor ===
j303 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - #next: j342  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j303 
index: - 
=== Succesors ===
=== Usages ===
j342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
v310 
=== Predecessor ===
j341 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i449 
=== Succesors ===
=== Usages ===
v368 j329 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j367 
y: j328 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j367 y: j328  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j329 
y: j307 
=== Succesors ===
=== Usages ===
j309 v470 v471 v472 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j329 y: j307  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j308 
y: j341 
=== Succesors ===
=== Usages ===
v310 v343 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j308 y: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j342 
y: j309 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j342 y: j309  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
j342 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v312 #falseSuccessor: v311  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a319 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a319 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v302 i449 
=== Succesors ===
next: v457 
=== Usages ===
v457 a339 
=== Predecessor ===
v312 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v302 i449 #next: v457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-90993|0xfffffffffffe9c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a319 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
a319 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a319 #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
value: j309 
stateAfter: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - value: j309 stateAfter: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j308 
index: j341 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v470 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v470 #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j308 
index: j341 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v471 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v471 #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j308 
index: j341 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v472 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v472 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
lastLocationAccess: - 
value: j314 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v468 lastLocationAccess: - value: j314 stateAfter: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
value: v447 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - value: v447 stateAfter: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
lastLocationAccess: - 
value: i449 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v469 lastLocationAccess: - value: i449 stateAfter: - #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a318 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j341 
=== Succesors ===
next: v321 
=== Usages ===
a339 
=== Predecessor ===
v317 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j341 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
a318 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v322 
values: a318 a319 
=== Succesors ===
=== Usages ===
j365 a155 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v322 values: a318 a319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v321 v323 
=== Succesors ===
next: j361 
=== Usages ===
a339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v321 v323 #next: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a138 
=== Succesors ===
next: j365 
=== Usages ===
v474 
=== Predecessor ===
v322 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a138 #next: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a339 
=== Succesors ===
next: v368 
=== Usages ===
v475 
=== Predecessor ===
j361 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a339 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v474 v475 j367 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
j365 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v474 v475 j367 #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a!# byte[]
=== Inputs ===
object: a339 
=== Succesors ===
next: v118 
=== Usages ===
a119 
=== Predecessor ===
v154 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a339 #next: v118  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
a155 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j369 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j369 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j421 
=== Usages ===
v476 v477 
=== Predecessor ===
v439 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
j421 v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j421 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
=== Succesors ===
next: j422 
=== Usages ===
j374 v478 v479 v480 a400 v481 v485 v482 v483 v484 
=== Predecessor ===
j369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - #next: j422  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
j422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
v375 
=== Predecessor ===
j421 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v477 lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i66 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i66  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j372 
y: j328 
=== Succesors ===
=== Usages ===
j373 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j372 y: j328  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j408 
y: j307 
=== Succesors ===
=== Usages ===
j374 v389 j410 v482 v483 v484 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j408 y: j307  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j373 
y: j421 
=== Succesors ===
=== Usages ===
v375 v423 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j373 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j422 
y: j374 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j422 y: j374  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 j288 j288 j288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
j422 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a401 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a401 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v302 i66 
=== Succesors ===
next: v459 
=== Usages ===
v459 a419 
=== Predecessor ===
v377 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v302 i66 #next: v459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-111473|0xfffffffffffe4c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a401 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
a401 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a401 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
value: j374 
stateAfter: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - value: j374 stateAfter: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: j421 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v482 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v482 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: j421 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v483 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v483 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: j421 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v484 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v484 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
lastLocationAccess: - 
value: j314 
stateAfter: - 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 lastLocationAccess: - value: j314 stateAfter: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
lastLocationAccess: - 
value: v447 
stateAfter: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v485 lastLocationAccess: - value: v447 stateAfter: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
lastLocationAccess: - 
value: i66 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 lastLocationAccess: - value: i66 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j373 
y: j409 
=== Succesors ===
=== Usages ===
v381 v385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j373 y: j409  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j410 
y: j411 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j410 y: j411  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v387 
values: j144 j397 
=== Succesors ===
=== Usages ===
v389 v480 j397 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v387 values: j144 j397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v386 
=== Succesors ===
next: v395 
=== Usages ===
j388 v394 v398 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v386 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j388 
y: j373 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j388 y: j373  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v390 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: j388 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v480 
lastLocationAccess: - 
value: j286 
stateAfter: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v480 lastLocationAccess: - value: j286 stateAfter: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j388 
y: j346 
=== Succesors ===
=== Usages ===
j388 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j388 y: j346  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v387 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v387  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v387 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v387 #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
lastLocationAccess: - 
length: j410 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v481 lastLocationAccess: - length: j410 #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v391 v393 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v391 v393 #next: v399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a400 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j421 
=== Succesors ===
next: v403 
=== Usages ===
a419 
=== Predecessor ===
v399 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j421 #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
a400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v404 
values: a400 a401 
=== Succesors ===
=== Usages ===
j443 a119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v404 values: a400 a401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v403 v405 
=== Succesors ===
next: v268 
=== Usages ===
a419 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v403 v405 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i449 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i66 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v113 
trueValue: i66 
falseValue: i449 
=== Succesors ===
=== Usages ===
j445 v168 v224 v225 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v113 trueValue: i66 falseValue: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 14]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i13 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v266 #falseSuccessor: v267  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -67865
stableDimension: 0
stamp: i32 [-67865]
stampKind: i32
value: int[-67865|0xfffffffffffef6e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i449 
y: i114 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i449 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -68889
stableDimension: 0
stamp: i32 [-68889]
stampKind: i32
value: int[-68889|0xfffffffffffef2e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v270 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i114 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -69913
stableDimension: 0
stamp: i32 [-69913]
stampKind: i32
value: int[-69913|0xfffffffffffeeee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j441 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a138 
=== Succesors ===
next: j443 
=== Usages ===
v486 
=== Predecessor ===
v275 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a138 #next: j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a419 
=== Succesors ===
next: v446 
=== Usages ===
v487 
=== Predecessor ===
j441 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a419 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j441 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v486 v487 j445 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
j443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v486 v487 j445 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v117 
values: a155 a419 
=== Succesors ===
=== Usages ===
a246 a189 v301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v117 values: a155 a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v118 v120 
=== Succesors ===
next: v299 
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v120 #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v461 
value: - 
stateBefore: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v461 value: - stateBefore: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a119 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
value: a189 
stateAfter: - 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - value: a189 stateAfter: - #next: v301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v461 
value: a119 
object: a1 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v461 value: a119 object: a1 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v71 
values: a138 a119 
=== Succesors ===
=== Usages ===
v465 v464 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v71 values: a138 a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v72 
=== Succesors ===
next: v16 
=== Usages ===
a246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v72 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 11]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 11]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i221 
=== Succesors ===
=== Usages ===
v16 v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i451 y: i221  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
?128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 246
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 
=== Succesors ===
=== Usages ===
?281 ?282 ?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 14]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9999518552913257
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 17]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256]
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
x: i2 
y: i124 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i124  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9999962954695609
stamp: void
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v17 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 24]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i452 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i452  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a246 
index: - 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
=== Succesors ===
next: v256 
=== Usages ===
v200 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i450 
y: i452 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i450 y: i452  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
i452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v253 #falseSuccessor: v255  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
v208 
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 36]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - value: i25 stateAfter: - #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a246 
index: j223 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a246 index: j223  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v253 
address: v465 
lastLocationAccess: - 
value: i28 
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v253 address: v465 lastLocationAccess: - value: i28 stateAfter: - #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:815) [bci: 75]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 806
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?128 
values: a1 i2 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a1 i2  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 201
mayConvertToGuard: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v18 v20 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v18 v20 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 49]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.0714285714285714
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?128 
values: a1 i2 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a1 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v214 
stateDuring: ?281 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v214 stateDuring: ?281 #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v39 v41 
=== Succesors ===
next: i453 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v39 v41 #next: i453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 62]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
i45 v213 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 67]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i453 
y: i11 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i453 y: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 68]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - value: i45 stateAfter: - #next: a454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
a210 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a454  <|@  <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)>
=== Inputs ===
arguments: a210 i453 i2 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a210 i453 i2  <|@  <|@
tid ?282 <|@
d <@d|@=== Debug Properties ===
bci: 72
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 813
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?128 
values: a1 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
bci: 72
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#StringUTF16.putCharSB
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v213 
stateDuring: ?282 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
a454 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v213 stateDuring: ?282 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:815) [bci: 75]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:815) [bci: 75]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v51 v53 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v51 v53 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -66835
stableDimension: 0
stamp: i32 [-66835]
stampKind: i32
value: int[-66835|0xfffffffffffefaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-69913 - -66835] bits:1...10111xxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v283 
values: i291 i294 i296 i298 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v283 values: i291 i294 i296 i298  <|@  <|@
f <@~|@floating>@ <|@
tid j288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v283 
values: j292 j286 j286 j286 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v283 values: j292 j286 j286 j286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v290 v293 v295 v297 
=== Succesors ===
next: v289 
=== Usages ===
i287 j288 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v290 v293 v295 v297 #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i287 
speculation: j288 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i287 speculation: j288  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a448 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a448  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.lang.StringBuilder
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v9 ?128 v214 ?7 v460 ?121 v462 v461 ?282 ?281 v301 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v461 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a448 v190 a454 v299 v301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a448 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: i449 
=== Usages ===
a138 v463 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?7 v125 v213 i28 ?121 ?281 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v289 v457 v459 a319 a401 i449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@~|@floating>@ <|@
tid v463 <|@
result [v2|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a448 
=== Succesors ===
=== Usages ===
i449 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i449 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-35851|0xffffffffffff73f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 134]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v463 
lastLocationAccess: - 
=== Succesors ===
next: i450 
=== Usages ===
v224 v349 j367 i59 i78 i81 i87 v96 v113 i114 a319 
=== Predecessor ===
a448 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v463 lastLocationAccess: - #next: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v460 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i450 v212 v194 i453 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i450 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: i451 
=== Usages ===
v200 i25 j223 
=== Predecessor ===
i449 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v462 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i451 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v462 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
i147 v222 
=== Predecessor ===
i450 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v462 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 5]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v61 i25 i45 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i25 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i450 
y: i11 
=== Succesors ===
=== Usages ===
v194 i60 i77 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i450 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid i147 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i451 
=== Succesors ===
=== Usages ===
i59 i77 i80 i86 i66 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i451  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 9]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i449 
y: i147 
=== Succesors ===
=== Usages ===
i60 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i449 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 13]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i25 
y: i59 
=== Succesors ===
=== Usages ===
v61 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i25 y: i59  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i11 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i60 y: i11  <|@  <|@
f <@~|@floating>@ <|@
tid a138 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a448 
=== Succesors ===
=== Usages ===
j441 a246 j361 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a448  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:241) [bci: 14]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9102668972297561
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v63 
falseSuccessor: v62 
=== Usages ===
=== Predecessor ===
i451 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v63 #falseSuccessor: v62  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v264 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v264  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:261) [bci: 11]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i25 
y: i147 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i25 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:262) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i77 
y: i449 
=== Succesors ===
=== Usages ===
v93 i94 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i77 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 22]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 27]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i79 
y: i147 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i79 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i81 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i80 
y: i449 
=== Succesors ===
=== Usages ===
v93 i94 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i80 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i78 
y: i81 
=== Succesors ===
=== Usages ===
i94 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i78 y: i81  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 3]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v93 
trueValue: i81 
falseValue: i78 
=== Succesors ===
=== Usages ===
i87 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v93 trueValue: i81 falseValue: i78  <|@  <|@
f <@~|@floating>@ <|@
tid i87 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:740) [bci: 6]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i94 
y: i449 
=== Succesors ===
=== Usages ===
i278 i86 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i94 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i278 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i87 
y: i277 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i87 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid i279 <|@
result int[2147483639|0x7ffffff7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2147483639
stableDimension: 0
stamp: i32 [2147483639]
stampKind: i32
value: int[2147483639|0x7ffffff7]
=== Inputs ===
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 10]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i278 
y: i279 
=== Succesors ===
=== Usages ===
v264 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i278 y: i279  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v280 
=== Succesors ===
trueSuccessor: v262 
falseSuccessor: v263 
=== Usages ===
=== Predecessor ===
v62 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v280 #trueSuccessor: v262 #falseSuccessor: v263  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:742) [bci: 19]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid i86 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:267) [bci: 57]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i87 
y: i147 
=== Succesors ===
=== Usages ===
i66 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i87 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 31]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i86 
y: i147 
=== Succesors ===
=== Usages ===
v96 v428 v113 i114 v225 j372 a401 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i86 y: i147  <|@  <|@
f <@~|@floating>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i449 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i66 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid v447 <|@
result meta{HotSpotType<[B, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[B, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v348 v427 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 v424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: meta{HotSpotType<[B, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[B, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a319 a401 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j329 j408 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j308 j373 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3538) [bci: 3]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 3.433727982038448E-5
stamp: void
=== Inputs ===
condition: v96 
=== Succesors ===
trueSuccessor: v98 
falseSuccessor: v97 
=== Usages ===
=== Predecessor ===
v262 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v96 #trueSuccessor: v98 #falseSuccessor: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 6]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v359 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v359  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j303 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j303 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j341 
=== Usages ===
v466 v467 
=== Predecessor ===
v359 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v466 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j303 
index: - 
=== Succesors ===
=== Usages ===
j341 v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j341 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
=== Succesors ===
next: j342 
=== Usages ===
j309 v468 v469 a318 v473 v470 v471 v472 
=== Predecessor ===
j303 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - #next: j342  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j303 
index: - 
=== Succesors ===
=== Usages ===
j342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j303 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j342 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v467 
lastLocationAccess: - 
=== Succesors ===
next: v313 
=== Usages ===
v310 
=== Predecessor ===
j341 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v467 lastLocationAccess: - #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid j367 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 2147483647] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i449 
=== Succesors ===
=== Usages ===
v368 j329 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i449  <|@  <|@
f <@~|@floating>@ <|@
tid j329 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 2147483670] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j367 
y: j328 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j367 y: j328  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 2147483664] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j329 
y: j307 
=== Succesors ===
=== Usages ===
j309 v470 v471 v472 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j329 y: j307  <|@  <|@
f <@~|@floating>@ <|@
tid j309 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j308 
y: j341 
=== Succesors ===
=== Usages ===
v310 v343 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j308 y: j341  <|@  <|@
f <@~|@floating>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j342 
y: j309 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j342 y: j309  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v310 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v311 
=== Usages ===
=== Predecessor ===
j342 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v310 #trueSuccessor: v312 #falseSuccessor: v311  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a319 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a319 <|@
result v27|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v302 i449 
=== Succesors ===
next: v457 
=== Usages ===
v457 a339 
=== Predecessor ===
v312 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v302 i449 #next: v457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-90993|0xfffffffffffe9c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a319 
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
a319 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a319 #next: v323  <|@  <|@
f <@*|@fixed>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
v457 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v466 
lastLocationAccess: - 
value: j309 
stateAfter: - 
=== Succesors ===
next: v331 
=== Usages ===
=== Predecessor ===
v311 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v466 lastLocationAccess: - value: j309 stateAfter: - #next: v331  <|@  <|@
f <@~|@floating>@ <|@
tid v470 <|@
result [v25|QWORD + v22|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j308 
index: j341 
=== Succesors ===
=== Usages ===
v331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v470 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v470 #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v471 <|@
result [v25|QWORD + v22|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j308 
index: j341 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v471 
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v471 #next: v337  <|@  <|@
f <@~|@floating>@ <|@
tid v472 <|@
result [v25|QWORD + v22|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j308 
index: j341 
=== Succesors ===
=== Usages ===
v337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j308 index: j341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v472 
=== Succesors ===
next: v344 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v472 #next: v344  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
result [v22|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v468 
lastLocationAccess: - 
value: j314 
stateAfter: - 
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v337 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v468 lastLocationAccess: - value: j314 stateAfter: - #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v473 <|@
result [v22|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v473 
lastLocationAccess: - 
value: v447 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v473 lastLocationAccess: - value: v447 stateAfter: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
result [v22|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j341 
index: - 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j341 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v469 
lastLocationAccess: - 
value: i449 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v348 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v469 lastLocationAccess: - value: i449 stateAfter: - #next: v317  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a318 
=== Usages ===
=== Predecessor ===
v349 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a318 <|@
result v29|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j341 
=== Succesors ===
next: v321 
=== Usages ===
a339 
=== Predecessor ===
v317 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j341 #next: v321  <|@  <|@
f <@*|@fixed>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
a318 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a339 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v322 
values: a318 a319 
=== Succesors ===
=== Usages ===
j365 a155 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v322 values: a318 a319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v321 v323 
=== Succesors ===
next: j361 
=== Usages ===
a339 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v321 v323 #next: j361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j361 <|@
result v31|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a138 
=== Succesors ===
next: j365 
=== Usages ===
v474 
=== Predecessor ===
v322 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a138 #next: j365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j365 <|@
result v32|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a339 
=== Succesors ===
next: v368 
=== Usages ===
v475 
=== Predecessor ===
j361 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a339 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
result [v31|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j361 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j361 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v475 <|@
result [v32|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j365 
index: - 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j365 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopyKillInit
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.disjointArraycopy(ArrayCopyCallNode.java:262) [bci: 15]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:79) [bci: 30] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v474 v475 j367 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
j365 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v474 v475 j367 #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:80) [bci: 39] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
result v30|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:81) [bci: 43] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a!# byte[]
=== Inputs ===
object: a339 
=== Succesors ===
next: v118 
=== Usages ===
a119 
=== Predecessor ===
v154 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a339 #next: v118  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
a155 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 14]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v439  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j369 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j369  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j369 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j421 
=== Usages ===
v476 v477 
=== Predecessor ===
v439 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v476 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
j421 v423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j421 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
=== Succesors ===
next: j422 
=== Usages ===
j374 v478 v479 v480 a400 v481 v485 v482 v483 v484 
=== Predecessor ===
j369 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - #next: j422  <|@  <|@
f <@~|@floating>@ <|@
tid v477 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j369 
index: - 
=== Succesors ===
=== Usages ===
j422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j369 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v477 
lastLocationAccess: - 
=== Succesors ===
next: v378 
=== Usages ===
v375 
=== Predecessor ===
j421 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v477 lastLocationAccess: - #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i66 
=== Succesors ===
=== Usages ===
j408 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i66  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [23 - 4294967318] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j372 
y: j328 
=== Succesors ===
=== Usages ===
j373 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j372 y: j328  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 4294967312] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j408 
y: j307 
=== Succesors ===
=== Usages ===
j374 v389 j410 v482 v483 v484 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j408 y: j307  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j373 
y: j421 
=== Succesors ===
=== Usages ===
v375 v423 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j373 y: j421  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j422 
y: j374 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j422 y: j374  <|@  <|@
f <@~|@floating>@ <|@
tid j286 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v429 j288 j288 j288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v375 
=== Succesors ===
trueSuccessor: v377 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
j422 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v375 #trueSuccessor: v377 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v377 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a401 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a401 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: v302 i66 
=== Succesors ===
next: v459 
=== Usages ===
v459 a419 
=== Predecessor ===
v377 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: v302 i66 #next: v459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-111473|0xfffffffffffe4c8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a401 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
a401 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a401 #next: v405  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
v459 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v476 
lastLocationAccess: - 
value: j374 
stateAfter: - 
=== Succesors ===
next: v414 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v476 lastLocationAccess: - value: j374 stateAfter: - #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v482 <|@
result [v36|QWORD + v33|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: j421 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v482 
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v423 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v482 #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v483 <|@
result [v36|QWORD + v33|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: j421 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v483 
=== Succesors ===
next: v418 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v483 #next: v418  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
result [v36|QWORD + v33|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j373 
index: j421 
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
address: v484 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v484 #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v478 <|@
result [v33|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v478 
lastLocationAccess: - 
value: j314 
stateAfter: - 
=== Succesors ===
next: v427 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v478 lastLocationAccess: - value: j314 stateAfter: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
result [v33|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v485 
lastLocationAccess: - 
value: v447 
stateAfter: - 
=== Succesors ===
next: v428 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v485 lastLocationAccess: - value: v447 stateAfter: - #next: v428  <|@  <|@
f <@~|@floating>@ <|@
tid v479 <|@
result [v33|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v428 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v479 
lastLocationAccess: - 
value: i66 
stateAfter: - 
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v479 lastLocationAccess: - value: i66 stateAfter: - #next: v384  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [-16 - 4294967296] bits:x...x000
=== Inputs ===
x: j373 
y: j409 
=== Succesors ===
=== Usages ===
v381 v385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j373 y: j409  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j410 
y: j411 
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j410 y: j411  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v381 
=== Succesors ===
trueSuccessor: v383 
falseSuccessor: v382 
=== Usages ===
=== Predecessor ===
v428 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v381 #trueSuccessor: v383 #falseSuccessor: v382  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at jdk.graal.compiler.nodes.java.NewArrayNode.newArray(Class, int, boolean) [bci: -1]
at jdk.graal.compiler.nodes.java.NewArrayNode.newUninitializedArray(NewArrayNode.java:83) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(ObjectCloneSnippets.java:78) [bci: 5] Substitution
at jdk.graal.compiler.hotspot.replacements.ObjectCloneSnippets.byteArrayClone(byte[]) [bci: -1] Substitution
at java.lang.Object.clone() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3539) [bci: 7]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j397 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j144 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j388 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
v383 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j388 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v387 
values: j144 j397 
=== Succesors ===
=== Usages ===
v389 v480 j397 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v387 values: j144 j397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 56
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v386 
=== Succesors ===
next: v395 
=== Usages ===
j388 v394 v398 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v386 #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j388 
y: j373 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j388 y: j373  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v389 
=== Succesors ===
trueSuccessor: v390 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v389 #trueSuccessor: v390 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
result [v33|QWORD + v40|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: j388 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: j388  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v480 
lastLocationAccess: - 
value: j286 
stateAfter: - 
=== Succesors ===
next: v398 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v480 lastLocationAccess: - value: j286 stateAfter: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid j397 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
x: j388 
y: j346 
=== Succesors ===
=== Usages ===
j388 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j388 y: j346  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
loopBegin: v387 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v387  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v387 
=== Succesors ===
next: v393 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v387 #next: v393  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@~|@floating>@ <|@
tid v481 <|@
result [v33|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j421 
index: - 
=== Succesors ===
=== Usages ===
v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v481 
lastLocationAccess: - 
length: j410 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v382 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v481 lastLocationAccess: - length: j410 #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
v385 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v391 v393 
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v391 v393 #next: v399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: a400 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a400 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j421 
=== Succesors ===
next: v403 
=== Usages ===
a419 
=== Predecessor ===
v399 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j421 #next: v403  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v404 
=== Predecessor ===
a400 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a419 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v404 
values: a400 a401 
=== Succesors ===
=== Usages ===
j443 a119 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v404 values: a400 a401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3541) [bci: 15]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v403 v405 
=== Succesors ===
next: v268 
=== Usages ===
a419 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v403 v405 #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i449 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i66 y: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3543) [bci: 25]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
condition: v113 
trueValue: i66 
falseValue: i449 
=== Succesors ===
=== Usages ===
j445 v168 v224 v225 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v113 trueValue: i66 falseValue: i449  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 14]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v168 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i114 
y: i13 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i114 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v168 
=== Succesors ===
trueSuccessor: v266 
falseSuccessor: v267 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v168 #trueSuccessor: v266 #falseSuccessor: v267  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v266 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v293 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v293  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result int[-67865|0xfffffffffffef6e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -67865
stableDimension: 0
stamp: i32 [-67865]
stampKind: i32
value: int[-67865|0xfffffffffffef6e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v266 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v272 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v272  <|@  <|@
f <@~|@floating>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i449 
y: i114 
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i449 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v224 
=== Succesors ===
trueSuccessor: v270 
falseSuccessor: v271 
=== Usages ===
=== Predecessor ===
v267 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v224 #trueSuccessor: v270 #falseSuccessor: v271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v270 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v295 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i296 <|@
result int[-68889|0xfffffffffffef2e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -68889
stableDimension: 0
stamp: i32 [-68889]
stampKind: i32
value: int[-68889|0xfffffffffffef2e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v270 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v276 
=== Usages ===
=== Predecessor ===
v272 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v276  <|@  <|@
f <@~|@floating>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i66 
y: i114 
=== Succesors ===
=== Usages ===
v276 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i66 y: i114  <|@  <|@
f <@*|@fixed>@ <|@
tid v276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v225 
=== Succesors ===
trueSuccessor: v274 
falseSuccessor: v275 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v225 #trueSuccessor: v274 #falseSuccessor: v275  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v297 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v297  <|@  <|@
f <@~|@floating>@ <|@
tid i298 <|@
result int[-69913|0xfffffffffffeeee7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -69913
stableDimension: 0
stamp: i32 [-69913]
stampKind: i32
value: int[-69913|0xfffffffffffeeee7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v274 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v275 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:216) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: j441 
=== Usages ===
=== Predecessor ===
v276 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j441 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a138 
=== Succesors ===
next: j443 
=== Usages ===
v486 
=== Predecessor ===
v275 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a138 #next: j443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
result v47|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64
=== Inputs ===
object: a419 
=== Succesors ===
next: v446 
=== Usages ===
v487 
=== Predecessor ===
j441 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a419 #next: v446  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result [v46|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j441 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j441 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
result [v47|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j443 
index: - 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j443 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j445 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i114 
=== Succesors ===
=== Usages ===
v446 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i114  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}
descriptorName: byteDisjointArraycopy
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:253) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.doArraycopyExactStubCallSnippet(ArrayCopySnippets.java:230) [bci: 15]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.arraycopyExactStubCallSnippet(ArrayCopySnippets.java:225) [bci: 77] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3542) [bci: 28]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 32]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v486 v487 j445 
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
j443 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v486 v487 j445 #next: v120  <|@  <|@
f <@*|@fixed>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
v446 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a119 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v117 
values: a155 a419 
=== Succesors ===
=== Usages ===
a246 a189 v301 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v117 values: a155 a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v118 v120 
=== Succesors ===
next: v299 
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v118 v120 #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: true
stamp: void
=== Inputs ===
address: v461 
value: - 
stateBefore: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v461 value: - stateBefore: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid a189 <|@
result v52|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Compress
stamp: n!# byte[]
=== Inputs ===
value: a119 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.value
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
value: a189 
stateAfter: - 
=== Succesors ===
next: v301 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - value: a189 stateAfter: - #next: v301  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:242) [bci: 35]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
precise: false
stamp: void
=== Inputs ===
address: v461 
value: a119 
object: a1 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v461 value: a119 object: a1 #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v71 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a246 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: a!# byte[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v71 
values: a138 a119 
=== Succesors ===
=== Usages ===
v465 v464 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v71 values: a138 a119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v72 
=== Succesors ===
next: v16 
=== Usages ===
a246 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v72 #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid i221 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 11]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.AbstractStringBuilder.isLatin1(AbstractStringBuilder.java:1693) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 11]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i451 
y: i221 
=== Succesors ===
=== Usages ===
v16 v35 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i451 y: i221  <|@  <|@
tid ?7 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
sourceFile: StringBuilder.java
sourceLine: 91
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
?128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
tid ?128 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<StringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: StringBuilder.java
sourceLine: 246
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?7 
values: a1 
=== Succesors ===
=== Usages ===
?281 ?282 ?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?7 values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 14]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9999518552913257
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v15 
=== Usages ===
=== Predecessor ===
v71 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v14 #falseSuccessor: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 17]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid i124 <|@
result int[-256|0xffffffffffffff00] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -256
stableDimension: 0
stamp: i32 [-256]
stampKind: i32
value: int[-256|0xffffffffffffff00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringLatin1.canEncode(StringLatin1.java:51) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 18]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
x: i2 
y: i124 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i2 y: i124  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:807) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9999962954695609
stamp: void
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v17 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v17 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 24]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i452 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i452  <|@  <|@
f <@~|@floating>@ <|@
tid v464 <|@
result [v55|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a246 
index: - 
=== Succesors ===
=== Usages ===
i452 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a246 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v464 
lastLocationAccess: - 
=== Succesors ===
next: v256 
=== Usages ===
v200 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v464 lastLocationAccess: - #next: v256  <|@  <|@
f <@~|@floating>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i450 
y: i452 
=== Succesors ===
=== Usages ===
v256 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i450 y: i452  <|@  <|@
f <@*|@fixed>@ <|@
tid v256 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v200 
=== Succesors ===
trueSuccessor: v253 
falseSuccessor: v255 
=== Usages ===
=== Predecessor ===
i452 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v200 #trueSuccessor: v253 #falseSuccessor: v255  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v194 
=== Usages ===
v208 
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v194  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 36]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
value: i25 
stateAfter: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v253 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - value: i25 stateAfter: - #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid j223 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i450 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i450  <|@  <|@
f <@~|@floating>@ <|@
tid v465 <|@
result [v55|QWORD[.] + v4|DWORD * 1 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a246 
index: j223 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a246 index: j223  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 40]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v253 
address: v465 
lastLocationAccess: - 
value: i28 
stateAfter: - 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v253 address: v465 lastLocationAccess: - value: i28 stateAfter: - #next: v51  <|@  <|@
f <@*|@fixed>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:815) [bci: 75]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v208 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v255 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v254 
=== Usages ===
=== Predecessor ===
v256 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v254  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 7
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 806
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?128 
values: a1 i2 
=== Succesors ===
=== Usages ===
?73 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a1 i2  <|@  <|@
tid ?73 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: return
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
localsSize: 3
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?121 
=== Succesors ===
=== Usages ===
v254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?121  <|@  <|@
f <@*|@fixed>@ <|@
tid v254 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 201
mayConvertToGuard: true
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:808) [bci: 41]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
reason: BoundsCheckException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?73 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v255 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v20 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v18 
=== Usages ===
=== Predecessor ===
v16 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v18  <|@  <|@
f <@*|@fixed>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
v15 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v18 v20 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v18 v20 #next: v35  <|@  <|@
f <@*|@fixed>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:810) [bci: 49]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.0714285714285714
stamp: void
=== Inputs ===
condition: v222 
=== Succesors ===
trueSuccessor: v33 
falseSuccessor: v34 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v222 #trueSuccessor: v33 #falseSuccessor: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v33 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 52]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v37  <|@  <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/lang/AbstractStringBuilder;, resolved>]
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.inflate()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 53
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 811
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?128 
values: a1 i2 
=== Succesors ===
=== Usages ===
v37 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a1 i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#AbstractStringBuilder.inflate
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v214 
stateDuring: ?281 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v33 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v214 stateDuring: ?281 #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v34 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 56]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v39 v41 
=== Succesors ===
next: i453 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v39 v41 #next: i453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i453 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 62]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
=== Succesors ===
next: v212 
=== Usages ===
i45 v213 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - #next: v212  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v57|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 67]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32
=== Inputs ===
x: i453 
y: i11 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i453 y: i11  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: AbstractStringBuilder.count
location: AbstractStringBuilder.count
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 68]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v460 
lastLocationAccess: - 
value: i45 
stateAfter: - 
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
i453 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v460 lastLocationAccess: - value: i45 stateAfter: - #next: a454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
result v58|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractStringBuilder.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v461 
lastLocationAccess: - 
=== Succesors ===
next: v49 
=== Usages ===
a210 
=== Predecessor ===
v212 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v461 lastLocationAccess: - #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
result v59|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 57]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
op: Uncompress
stamp: a# byte[]
=== Inputs ===
value: a454 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a454  <|@  <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<[B>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)>
=== Inputs ===
arguments: a210 i453 i2 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a210 i453 i2  <|@  <|@
tid ?282 <|@
d <@d|@=== Debug Properties ===
bci: 72
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(char)>
localsSize: 2
locksSize: 0
sourceFile: AbstractStringBuilder.java
sourceLine: 813
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?128 
values: a1 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?128 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
bci: 72
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
polymorphic: false
stamp: void
targetMethod: Direct#StringUTF16.putCharSB
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v213 
stateDuring: ?282 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
a454 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v213 stateDuring: ?282 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:815) [bci: 75]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v52 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:815) [bci: 75]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v51 v53 
=== Succesors ===
next: v9 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v51 v53 #next: v9  <|@  <|@
f <@*|@fixed>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 5]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.internal.util.ArraysSupport.newLength(ArraysSupport.java:741) [bci: 16]
at java.lang.AbstractStringBuilder.newCapacity(AbstractStringBuilder.java:263) [bci: 29]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:243) [bci: 24]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v290 
=== Usages ===
=== Predecessor ===
v264 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v290  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j288 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i291 <|@
result int[-66835|0xfffffffffffefaed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
rawvalue: -66835
stableDimension: 0
stamp: i32 [-66835]
stampKind: i32
value: int[-66835|0xfffffffffffefaed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i287 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i32 [-69913 - -66835] bits:1...10111xxx101110x1x1
valueDescription: i32
=== Inputs ===
merge: v283 
values: i291 i294 i296 i298 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v283 values: i291 i294 i296 i298  <|@  <|@
f <@~|@floating>@ <|@
tid j288 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: i64 [0 - 660] bits:0...0x0x00x0x00
valueDescription: i64
=== Inputs ===
merge: v283 
values: j292 j286 j286 j286 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v283 values: j292 j286 j286 j286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v290 v293 v295 v297 
=== Succesors ===
next: v289 
=== Usages ===
i287 j288 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v290 v293 v295 v297 #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:240) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i287 
speculation: j288 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i287 speculation: j288  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr   -1  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr   -1  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  638  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  936  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  638  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  936  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[152, 154[[482, 483[[636, 638[[666, 667[[750, 751[[782, 783[[904, 905[[934, 936[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[60, 63[[188, 191[[196, 199[[232, 235[[236, 239[[482, 483[[664, 667[[748, 751[[782, 783[[904, 905[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v48|q [0, 46[[480, 483[[634, 636[[746, 751[[782, 783[[902, 905[[932, 934[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[482, 483[[750, 751[[782, 783[[904, 905[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v62|q [0, 44[[478, 483[[632, 636[[744, 751[[780, 783[[900, 905[[930, 934[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[476, 483[[666, 667[[750, 751[[782, 783[[898, 905[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [44, 152[[156, 993[[994, 1025[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 152 ShouldHaveRegister 600 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister 734 MustHaveRegister 738 MustHaveRegister 740 MustHaveRegister 780 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [46, 130[[156, 751[[754, 993[[994, 1025[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister 748 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [48, 66[48 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [50, 70[[156, 424[[610, 670[[786, 858[[908, 932[50 MustHaveRegister 62 ShouldHaveRegister 192 ShouldHaveRegister 200 ShouldHaveRegister 206 ShouldHaveRegister 240 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister 424 ShouldHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 932 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [52, 130[[156, 670[[786, 942[52 MustHaveRegister 56 ShouldHaveRegister 114 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [54, 104[[156, 690[[754, 764[[786, 942[54 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister 690 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d v4|d [56, 128[[156, 670[[786, 942[56 MustHaveRegister 64 MustHaveRegister 128 MustHaveRegister 190 ShouldHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [58, 70[[156, 236[58 MustHaveRegister 60 ShouldHaveRegister 188 ShouldHaveRegister 196 ShouldHaveRegister 232 ShouldHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v3|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d v6|d [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v2|d [66, 79[[156, 470[[610, 670[[786, 894[[908, 942[66 MustHaveRegister 78 ShouldHaveRegister 470 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v6|d [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v11|d [192, 204[192 MustHaveRegister 202 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v14|d [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d -1 [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v13|d [200, 205[200 MustHaveRegister 202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d v12|d [204, 206[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v16|d [206, 234[206 MustHaveRegister 208 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v17|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v17|d [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d v19|d [238, 436[[610, 670[238 MustHaveRegister 240 ShouldHaveRegister 268 ShouldHaveRegister 320 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 436 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [810, 860[810 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister 854 MustHaveRegister 856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v3|d [812, 902[[908, 942[812 MustHaveRegister 814 MustHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [814, 816[814 MustHaveRegister 816 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|q [816, 853[816 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v25|q [818, 846[818 MustHaveRegister 820 MustHaveRegister 846 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q rax|q [936, 941[936 MustHaveRegister 938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v22|q [860, 863[860 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [864, 907[896 ShouldHaveRegister 906 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v10|q [894, 898[894 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v30|q [896, 900[896 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [266, 390[[644, 670[266 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 364 MustHaveRegister 369 LiveAtLoopEnd 390 ShouldHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v20|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|q [272, 370[272 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 322 MustHaveRegister 346 MustHaveRegister 369 LiveAtLoopEnd  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|q [274, 308[274 MustHaveRegister 276 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q rax|q [638, 643[638 MustHaveRegister 640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [322, 326[[644, 664[322 MustHaveRegister 324 ShouldHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v41|q [336, 366[346 ShouldHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v40|q [366, 369[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v33|q [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [394, 485[472 ShouldHaveRegister 484 ShouldHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v3|d [410, 474[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v10|q [470, 476[470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v44|q [472, 478[472 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v45|d [474, 480[474 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v44|q [486, 609[602 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[v51|q]" v51|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[v52|d]" v52|d v49|q [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v54|q QWORD "[v54|q]" v54|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[v55|q]" v55|q v10|q [80, 130[114 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[v56|d]" v56|d -1 [734, 746[734 MustHaveRegister 736 ShouldHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d v56|d [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[v58|d]" v58|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v58|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[v60|d]" v60|d -1 [1004, 1020[1020 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [1004, 1022[1022 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [612, 632[612 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [910, 930[910 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[152, 154[[482, 483[[636, 638[[666, 667[[750, 751[[782, 783[[904, 905[[934, 936[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[60, 63[[188, 191[[196, 199[[232, 235[[236, 239[[482, 483[[664, 667[[748, 751[[782, 783[[904, 905[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v48|q [0, 46[[480, 483[[634, 636[[746, 751[[782, 783[[902, 905[[932, 934[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[482, 483[[750, 751[[782, 783[[904, 905[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v62|q [0, 44[[478, 483[[632, 636[[744, 751[[780, 783[[900, 905[[930, 934[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[476, 483[[666, 667[[750, 751[[782, 783[[898, 905[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [44, 152[[156, 438[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 152 ShouldHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [46, 130[[156, 438[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [48, 66[48 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [50, 70[[156, 424[[610, 670[[786, 858[[908, 932[50 MustHaveRegister 62 ShouldHaveRegister 192 ShouldHaveRegister 200 ShouldHaveRegister 206 ShouldHaveRegister 240 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister 424 ShouldHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 932 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [52, 130[[156, 438[52 MustHaveRegister 56 ShouldHaveRegister 114 MustHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [54, 104[[156, 438[54 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister  "SpillInDominator"
  v6|d DWORD "[r9|d]" v6|d v4|d [56, 128[[156, 438[56 MustHaveRegister 64 MustHaveRegister 128 MustHaveRegister 190 ShouldHaveRegister  "OneSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [58, 70[[156, 236[58 MustHaveRegister 60 ShouldHaveRegister 188 ShouldHaveRegister 196 ShouldHaveRegister 232 ShouldHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d v3|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v6|d [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q v2|d [66, 79[[156, 470[[610, 670[[786, 894[[908, 942[66 MustHaveRegister 78 ShouldHaveRegister 470 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v6|d [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [192, 204[192 MustHaveRegister 202 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v14|d [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v13|d [200, 205[200 MustHaveRegister 202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v12|d [204, 206[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [206, 234[206 MustHaveRegister 208 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d v17|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v17|d [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbp|d]" v20|d v19|d [238, 436[[610, 670[238 MustHaveRegister 240 ShouldHaveRegister 268 ShouldHaveRegister 320 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 436 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [810, 860[810 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister 854 MustHaveRegister 856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r11|q]" v23|q v3|d [812, 902[[908, 942[812 MustHaveRegister 814 MustHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [814, 816[814 MustHaveRegister 816 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v24|q [816, 853[816 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|q [818, 846[818 MustHaveRegister 820 MustHaveRegister 846 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [936, 941[936 MustHaveRegister 938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q v22|q [860, 863[860 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q v29|q [864, 897[896 ShouldHaveRegister  "OneSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v10|q [894, 898[894 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v30|q [896, 900[896 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[r13|q]" v33|q -1 [266, 390[[644, 670[266 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 364 MustHaveRegister 369 LiveAtLoopEnd 390 ShouldHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q v20|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v35|q [272, 370[272 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 322 MustHaveRegister 346 MustHaveRegister 369 LiveAtLoopEnd  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q v36|q [274, 308[274 MustHaveRegister 276 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q rax|q [638, 643[638 MustHaveRegister 640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q -1 [322, 326[[644, 664[322 MustHaveRegister 324 ShouldHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v41|q [336, 366[346 ShouldHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v40|q [366, 369[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[r13|q]" v43|q v33|q [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r13|q]" v44|q v43|q [394, 481[472 ShouldHaveRegister  "OneSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v3|d [410, 474[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rbx|q]" v46|q v10|q [470, 476[470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r10|q]" v47|q v44|q [472, 478[472 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v45|d [474, 480[474 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[r13|q]" v49|q v44|q [486, 609[602 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[rax|q]" v51|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[rdx|d]" v52|d v49|q [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v54|q QWORD "[rax|q]" v54|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[rbx|q]" v55|q v10|q [80, 130[114 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d -1 [734, 746[734 MustHaveRegister 736 ShouldHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rsi|d]" v57|d v56|d [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v58|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r10|d]" v60|d -1 [1004, 1020[1020 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q -1 [1004, 1022[1022 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q -1 [612, 632[612 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [910, 930[910 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[vstack:3|q]" v0|q v0|q [438, 477[ "SpillInDominator"
  v65|d DWORD "[vstack:0|d]" v1|d v1|d [438, 479[ "OneSpillStore"
  v66|d DWORD "[vstack:5|d]" v4|d v4|d [438, 481[ "OneSpillStore"
  v67|d DWORD "[vstack:4|d]" v5|d v5|d [438, 481[ "SpillInDominator"
  v68|d DWORD "[vstack:6|d]" v6|d v6|d [438, 481[ "OneSpillStore"
  v69|q QWORD "[vstack:1|q]" v44|q v44|q [481, 485[484 ShouldHaveRegister  "OneSpillStore"
  v70|q QWORD "[vstack:3|q]" v0|q v0|q [477, 481[ "SpillInDominator"
  v71|d DWORD "[vstack:4|d]" v5|d v5|d [481, 680[ "SpillInDominator"
  v72|d DWORD "[vstack:0|d]" v1|d v1|d [479, 751[[754, 993[[994, 1004[748 ShouldHaveRegister  "OneSpillStore"
  v73|d DWORD "[vstack:6|d]" v6|d v6|d [481, 670[[786, 942[ "OneSpillStore"
  v74|d DWORD "[vstack:5|d]" v4|d v4|d [481, 670[[786, 942[ "OneSpillStore"
  v75|q QWORD "[vstack:3|q]" v0|q v0|q [481, 486[ "SpillInDominator"
  v76|d DWORD "[rdx|d]" v1|d v1|d [1004, 1025[ "OneSpillStore"
  v77|q QWORD "[rsi|q]" v0|q v0|q [486, 610[600 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "SpillInDominator"
  v78|d DWORD "[r8|d]" v5|d v5|d [680, 690[[754, 764[[786, 864[690 MustHaveRegister  "SpillInDominator"
  v79|q QWORD "[rsi|q]" v0|q v0|q [610, 631[ "SpillInDominator"
  v80|q QWORD "[r11|q]" v0|q v0|q [631, 749[734 MustHaveRegister 738 MustHaveRegister 740 MustHaveRegister  "SpillInDominator"
  v81|q QWORD "[vstack:3|q]" v0|q v0|q [749, 993[[994, 1004[780 ShouldHaveRegister  "SpillInDominator"
  v82|d DWORD "[vstack:4|d]" v5|d v5|d [864, 903[ "SpillInDominator"
  v83|q QWORD "[rsi|q]" v0|q v0|q [1004, 1025[ "SpillInDominator"
  v84|q QWORD "[vstack:8|q]" v30|q v30|q [897, 903[ "OneSpillStore"
  v85|d DWORD "[vstack:4|d]" v5|d v5|d [903, 942[ "SpillInDominator"
  v86|q QWORD "[vstack:8|q]" v30|q v30|q [903, 907[906 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  638  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  936  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[152, 154[[482, 483[[636, 638[[666, 667[[750, 751[[782, 783[[904, 905[[934, 936[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[60, 63[[188, 191[[196, 199[[232, 235[[236, 239[[482, 483[[664, 667[[748, 751[[782, 783[[904, 905[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v48|q [0, 46[[480, 483[[634, 636[[746, 751[[782, 783[[902, 905[[932, 934[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[482, 483[[750, 751[[782, 783[[904, 905[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v62|q [0, 44[[478, 483[[632, 636[[744, 751[[780, 783[[900, 905[[930, 934[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[476, 483[[666, 667[[750, 751[[782, 783[[898, 905[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [44, 152[[156, 438[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 152 ShouldHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [46, 130[[156, 438[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [48, 66[48 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [50, 70[[156, 424[[610, 670[[786, 858[[908, 932[50 MustHaveRegister 62 ShouldHaveRegister 192 ShouldHaveRegister 200 ShouldHaveRegister 206 ShouldHaveRegister 240 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister 424 ShouldHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 932 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [52, 130[[156, 438[52 MustHaveRegister 56 ShouldHaveRegister 114 MustHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [54, 104[[156, 438[54 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v6|d DWORD "[r9|d]" v6|d v4|d [56, 128[[156, 438[56 MustHaveRegister 64 MustHaveRegister 128 MustHaveRegister 190 ShouldHaveRegister  "OneSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [58, 70[[156, 236[58 MustHaveRegister 60 ShouldHaveRegister 188 ShouldHaveRegister 196 ShouldHaveRegister 232 ShouldHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d v3|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v6|d [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q v2|d [66, 79[[156, 470[[610, 670[[786, 894[[908, 942[66 MustHaveRegister 78 ShouldHaveRegister 470 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v6|d [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [192, 204[192 MustHaveRegister 202 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v14|d [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v13|d [200, 205[200 MustHaveRegister 202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v12|d [204, 206[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [206, 234[206 MustHaveRegister 208 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d v17|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v17|d [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbp|d]" v20|d v19|d [238, 436[[610, 670[238 MustHaveRegister 240 ShouldHaveRegister 268 ShouldHaveRegister 320 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 436 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [810, 860[810 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister 854 MustHaveRegister 856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r11|q]" v23|q v3|d [812, 902[[908, 942[812 MustHaveRegister 814 MustHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [814, 816[814 MustHaveRegister 816 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v24|q [816, 853[816 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|q [818, 846[818 MustHaveRegister 820 MustHaveRegister 846 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [936, 941[936 MustHaveRegister 938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q v22|q [860, 863[860 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q v29|q [864, 897[896 ShouldHaveRegister  "OneSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v10|q [894, 898[894 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v30|q [896, 900[896 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[r13|q]" v33|q -1 [266, 390[[644, 670[266 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 364 MustHaveRegister 369 LiveAtLoopEnd 390 ShouldHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q v20|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v35|q [272, 370[272 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 322 MustHaveRegister 346 MustHaveRegister 369 LiveAtLoopEnd  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q v36|q [274, 308[274 MustHaveRegister 276 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q rax|q [638, 643[638 MustHaveRegister 640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q -1 [322, 326[[644, 664[322 MustHaveRegister 324 ShouldHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v41|q [336, 366[346 ShouldHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v40|q [366, 369[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[r13|q]" v43|q v33|q [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r13|q]" v44|q v43|q [394, 481[472 ShouldHaveRegister  "OneSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v3|d [410, 474[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rbx|q]" v46|q v10|q [470, 476[470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r10|q]" v47|q v44|q [472, 478[472 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v45|d [474, 480[474 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[r13|q]" v49|q v44|q [486, 609[602 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[rax|q]" v51|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[rdx|d]" v52|d v49|q [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v54|q QWORD "[rax|q]" v54|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[rbx|q]" v55|q v10|q [80, 130[114 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d -1 [734, 746[734 MustHaveRegister 736 ShouldHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rsi|d]" v57|d v56|d [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v58|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r10|d]" v60|d -1 [1004, 1020[1020 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q -1 [1004, 1022[1022 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q -1 [612, 632[612 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [910, 930[910 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[vstack:3|q]" v0|q v0|q [438, 477[ "StoreAtDefinition"
  v65|d DWORD "[vstack:0|d]" v1|d v1|d [438, 479[ "OneSpillStore"
  v66|d DWORD "[vstack:5|d]" v4|d v4|d [438, 481[ "OneSpillStore"
  v67|d DWORD "[vstack:4|d]" v5|d v5|d [438, 481[ "StoreAtDefinition"
  v68|d DWORD "[vstack:6|d]" v6|d v6|d [438, 481[ "OneSpillStore"
  v69|q QWORD "[vstack:1|q]" v44|q v44|q [481, 485[484 ShouldHaveRegister  "OneSpillStore"
  v70|q QWORD "[vstack:3|q]" v0|q v0|q [477, 481[ "StoreAtDefinition"
  v71|d DWORD "[vstack:4|d]" v5|d v5|d [481, 680[ "StoreAtDefinition"
  v72|d DWORD "[vstack:0|d]" v1|d v1|d [479, 751[[754, 993[[994, 1004[748 ShouldHaveRegister  "OneSpillStore"
  v73|d DWORD "[vstack:6|d]" v6|d v6|d [481, 670[[786, 942[ "OneSpillStore"
  v74|d DWORD "[vstack:5|d]" v4|d v4|d [481, 670[[786, 942[ "OneSpillStore"
  v75|q QWORD "[vstack:3|q]" v0|q v0|q [481, 486[ "StoreAtDefinition"
  v76|d DWORD "[rdx|d]" v1|d v1|d [1004, 1025[ "OneSpillStore"
  v77|q QWORD "[rsi|q]" v0|q v0|q [486, 610[600 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "StoreAtDefinition"
  v78|d DWORD "[r8|d]" v5|d v5|d [680, 690[[754, 764[[786, 864[690 MustHaveRegister  "StoreAtDefinition"
  v79|q QWORD "[rsi|q]" v0|q v0|q [610, 631[ "StoreAtDefinition"
  v80|q QWORD "[r11|q]" v0|q v0|q [631, 749[734 MustHaveRegister 738 MustHaveRegister 740 MustHaveRegister  "StoreAtDefinition"
  v81|q QWORD "[vstack:3|q]" v0|q v0|q [749, 993[[994, 1004[780 ShouldHaveRegister  "StoreAtDefinition"
  v82|d DWORD "[vstack:4|d]" v5|d v5|d [864, 903[ "StoreAtDefinition"
  v83|q QWORD "[rsi|q]" v0|q v0|q [1004, 1025[ "StoreAtDefinition"
  v84|q QWORD "[vstack:8|q]" v30|q v30|q [897, 903[ "OneSpillStore"
  v85|d DWORD "[vstack:4|d]" v5|d v5|d [903, 942[ "StoreAtDefinition"
  v86|q QWORD "[vstack:8|q]" v30|q v30|q [903, 907[906 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [v41|QWORD] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [v43|QWORD[.]] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  638  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [v38|QWORD[.]] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [v29|QWORD[.]] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [v30|QWORD[.]] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  936  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [v27|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [int[-69913|0xfffffffffffeeee7], long[0|0x0]] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [int[-68889|0xfffffffffffef2e7], long[0|0x0]] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [int[-67865|0xfffffffffffef6e7], long[0|0x0]] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [int[-66835|0xfffffffffffefaed], long[660|0x294]] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[152, 154[[482, 483[[636, 638[[666, 667[[750, 751[[782, 783[[904, 905[[934, 936[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v7|d [0, 1[[60, 63[[188, 191[[196, 199[[232, 235[[236, 239[[482, 483[[664, 667[[748, 751[[782, 783[[904, 905[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v48|q [0, 46[[480, 483[[634, 636[[746, 751[[782, 783[[902, 905[[932, 934[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 40[[482, 483[[750, 751[[782, 783[[904, 905[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v62|q [0, 44[[478, 483[[632, 636[[744, 751[[780, 783[[900, 905[[930, 934[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[476, 483[[666, 667[[750, 751[[782, 783[[898, 905[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[482, 483[[750, 751[[782, 783[[904, 905[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [44, 152[[156, 438[44 MustHaveRegister 48 MustHaveRegister 52 MustHaveRegister 54 MustHaveRegister 128 MustHaveRegister 152 ShouldHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [46, 130[[156, 438[46 MustHaveRegister 102 ShouldHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [48, 66[48 MustHaveRegister 50 MustHaveRegister 66 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [50, 70[[156, 424[[610, 670[[786, 858[[908, 932[50 MustHaveRegister 62 ShouldHaveRegister 192 ShouldHaveRegister 200 ShouldHaveRegister 206 ShouldHaveRegister 240 MustHaveRegister 408 MustHaveRegister 410 ShouldHaveRegister 424 ShouldHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 932 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r11|d]" v4|d -1 [52, 130[[156, 438[52 MustHaveRegister 56 ShouldHaveRegister 114 MustHaveRegister 130 MustHaveRegister  "OneSpillStore"
  v5|d DWORD "[r8|d]" v5|d -1 [54, 104[[156, 438[54 MustHaveRegister 58 ShouldHaveRegister 90 MustHaveRegister  "StoreAtDefinition"
  v6|d DWORD "[r9|d]" v6|d v4|d [56, 128[[156, 438[56 MustHaveRegister 64 MustHaveRegister 128 MustHaveRegister 190 ShouldHaveRegister  "OneSpillStore"
  v7|d DWORD "[rdi|d]" v7|d -1 [58, 70[[156, 236[58 MustHaveRegister 60 ShouldHaveRegister 188 ShouldHaveRegister 196 ShouldHaveRegister 232 ShouldHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[rbx|d]" v8|d v3|d [62, 65[62 MustHaveRegister 64 ShouldHaveRegister  "NoSpillStore"
  v9|d DWORD "[rcx|d]" v9|d v6|d [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rbx|q]" v10|q v2|d [66, 79[[156, 470[[610, 670[[786, 894[[908, 942[66 MustHaveRegister 78 ShouldHaveRegister 470 ShouldHaveRegister 894 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v6|d [190, 192[190 MustHaveRegister 192 MustHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d v11|d [192, 204[192 MustHaveRegister 202 ShouldHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[rbp|d]" v13|d v14|d [198, 200[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rbp|d]" v14|d -1 [194, 198[194 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rbp|d]" v15|d v13|d [200, 205[200 MustHaveRegister 202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v16|d DWORD "[rax|d]" v16|d v12|d [204, 206[204 MustHaveRegister 206 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d v16|d [206, 234[206 MustHaveRegister 208 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rcx|d]" v18|d v17|d [208, 210[208 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[rax|d]" v19|d v17|d [234, 238[234 MustHaveRegister 238 ShouldHaveRegister  "NoSpillStore"
  v20|d DWORD "[rbp|d]" v20|d v19|d [238, 436[[610, 670[238 MustHaveRegister 240 ShouldHaveRegister 268 ShouldHaveRegister 320 MustHaveRegister 408 ShouldHaveRegister 410 MustHaveRegister 436 ShouldHaveRegister 634 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [810, 860[810 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister 854 MustHaveRegister 856 MustHaveRegister 858 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[r11|q]" v23|q v3|d [812, 902[[908, 942[812 MustHaveRegister 814 MustHaveRegister 902 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q -1 [814, 816[814 MustHaveRegister 816 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rsi|q]" v25|q v24|q [816, 853[816 MustHaveRegister 818 ShouldHaveRegister 848 MustHaveRegister 850 MustHaveRegister 852 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdx|q]" v26|q v25|q [818, 846[818 MustHaveRegister 820 MustHaveRegister 846 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q rax|q [936, 941[936 MustHaveRegister 938 MustHaveRegister 940 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q v22|q [860, 863[860 MustHaveRegister 862 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rdi|q]" v30|q v29|q [864, 897[896 ShouldHaveRegister  "OneSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v10|q [894, 898[894 MustHaveRegister 898 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rsi|q]" v32|q v30|q [896, 900[896 MustHaveRegister 900 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[r13|q]" v33|q -1 [266, 390[[644, 670[266 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 318 MustHaveRegister 320 MustHaveRegister 364 MustHaveRegister 369 LiveAtLoopEnd 390 ShouldHaveRegister 666 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q v20|d [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q -1 [270, 272[270 MustHaveRegister 272 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q v35|q [272, 370[272 MustHaveRegister 274 ShouldHaveRegister 310 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 322 MustHaveRegister 346 MustHaveRegister 369 LiveAtLoopEnd  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q v36|q [274, 308[274 MustHaveRegister 276 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q rax|q [638, 643[638 MustHaveRegister 640 MustHaveRegister 642 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q -1 [322, 326[[644, 664[322 MustHaveRegister 324 ShouldHaveRegister 664 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v41|q [336, 366[346 ShouldHaveRegister 364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q v40|q [366, 369[366 MustHaveRegister 368 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[r13|q]" v43|q v33|q [390, 393[390 MustHaveRegister 392 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[r13|q]" v44|q v43|q [394, 481[472 ShouldHaveRegister  "OneSpillStore"
  v45|d DWORD "[rdi|d]" v45|d v3|d [410, 474[410 MustHaveRegister 412 MustHaveRegister 424 MustHaveRegister 436 MustHaveRegister 474 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rbx|q]" v46|q v10|q [470, 476[470 MustHaveRegister 476 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[r10|q]" v47|q v44|q [472, 478[472 MustHaveRegister 478 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q v45|d [474, 480[474 MustHaveRegister 480 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[r13|q]" v49|q v44|q [486, 609[602 MustHaveRegister 606 MustHaveRegister 608 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rdx|q]" v50|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v51|q QWORD "[rax|q]" v51|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v52|d DWORD "[rdx|d]" v52|d v49|q [602, 604[602 MustHaveRegister 604 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v54|q QWORD "[rax|q]" v54|q -1 [606, 607[606 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[rbx|q]" v55|q v10|q [80, 130[114 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v56|d DWORD "[rdx|d]" v56|d -1 [734, 746[734 MustHaveRegister 736 ShouldHaveRegister 746 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[rsi|d]" v57|d v56|d [736, 738[736 MustHaveRegister 738 MustHaveRegister  "NoSpillStore"
  v58|d DWORD "[rsi|d]" v58|d -1 [740, 742[740 MustHaveRegister 742 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rsi|q]" v59|q v58|d [742, 744[742 MustHaveRegister 744 ShouldHaveRegister  "NoSpillStore"
  v60|d DWORD "[r10|d]" v60|d -1 [1004, 1020[1020 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q -1 [1004, 1022[1022 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q -1 [612, 632[612 MustHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rsi|q]" v63|q -1 [910, 930[910 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[vstack:3|q]" v0|q v0|q [438, 477[ "StoreAtDefinition"
  v65|d DWORD "[vstack:0|d]" v1|d v1|d [438, 479[ "OneSpillStore"
  v66|d DWORD "[vstack:5|d]" v4|d v4|d [438, 481[ "OneSpillStore"
  v67|d DWORD "[vstack:4|d]" v5|d v5|d [438, 481[ "StoreAtDefinition"
  v68|d DWORD "[vstack:6|d]" v6|d v6|d [438, 481[ "OneSpillStore"
  v69|q QWORD "[vstack:1|q]" v44|q v44|q [481, 485[484 ShouldHaveRegister  "OneSpillStore"
  v70|q QWORD "[vstack:3|q]" v0|q v0|q [477, 481[ "StoreAtDefinition"
  v71|d DWORD "[vstack:4|d]" v5|d v5|d [481, 680[ "StoreAtDefinition"
  v72|d DWORD "[vstack:0|d]" v1|d v1|d [479, 751[[754, 993[[994, 1004[748 ShouldHaveRegister  "OneSpillStore"
  v73|d DWORD "[vstack:6|d]" v6|d v6|d [481, 670[[786, 942[ "OneSpillStore"
  v74|d DWORD "[vstack:5|d]" v4|d v4|d [481, 670[[786, 942[ "OneSpillStore"
  v75|q QWORD "[vstack:3|q]" v0|q v0|q [481, 486[ "StoreAtDefinition"
  v76|d DWORD "[rdx|d]" v1|d v1|d [1004, 1025[ "OneSpillStore"
  v77|q QWORD "[rsi|q]" v0|q v0|q [486, 610[600 MustHaveRegister 604 MustHaveRegister 606 MustHaveRegister  "StoreAtDefinition"
  v78|d DWORD "[r8|d]" v5|d v5|d [680, 690[[754, 764[[786, 864[690 MustHaveRegister  "StoreAtDefinition"
  v79|q QWORD "[rsi|q]" v0|q v0|q [610, 631[ "StoreAtDefinition"
  v80|q QWORD "[r11|q]" v0|q v0|q [631, 749[734 MustHaveRegister 738 MustHaveRegister 740 MustHaveRegister  "StoreAtDefinition"
  v81|q QWORD "[vstack:3|q]" v0|q v0|q [749, 993[[994, 1004[780 ShouldHaveRegister  "StoreAtDefinition"
  v82|d DWORD "[vstack:4|d]" v5|d v5|d [864, 903[ "StoreAtDefinition"
  v83|q QWORD "[rsi|q]" v0|q v0|q [1004, 1025[ "StoreAtDefinition"
  v84|q QWORD "[vstack:8|q]" v30|q v30|q [897, 903[ "OneSpillStore"
  v85|d DWORD "[vstack:4|d]" v5|d v5|d [903, 942[ "StoreAtDefinition"
  v86|q QWORD "[vstack:8|q]" v30|q v30|q [903, 907[906 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   56  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [v55|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [v40|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [v44|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD[.] = MOVE input: v64|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = STACKMOVE (input: v67|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v70|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  638  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD = MOVE input: v5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: v78|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [v30|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = STACKMOVE (input: v82|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = MOVE input: v78|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  910  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  936  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [v60|DWORD, v61|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   46  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction v3|DWORD = MOV input: [v2|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction v5|DWORD = MOVSXB input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction v6|DWORD = INC value: v4|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction v7|DWORD = MOVSXB value: v5|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction v8|DWORD = SHR (x: v3|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction v9|DWORD = SUB (x: v6|DWORD, ~y: v8|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction v10|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: v9|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: v1|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: v4|DWORD, y: [v55|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v6|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [v55|QWORD[.] + v4|DWORD * 1 + 16], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction v11|DWORD = SHL (x: v6|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction v12|DWORD = SUB (x: v11|DWORD, ~y: v3|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction v14|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction v13|DWORD = SHL (x: v14|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction v15|DWORD = ADD (x: v13|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: v15|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction v16|DWORD = CMOVE (falseValue: v12|DWORD, ~trueValue: v15|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction v17|DWORD = ADD (x: v16|DWORD, y: v3|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction v18|DWORD = DEC value: v17|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: v18|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction v19|DWORD = SAR (x: v17|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: v7|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction v20|DWORD = SHL (x: v19|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: v3|DWORD, y: v20|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction v33|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction v34|QWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction v35|QWORD = LEA address: [v34|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction v36|QWORD = AND x: v35|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction v37|QWORD = ADD (x: v36|QWORD, y: v33|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: v37|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: v37|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [v36|QWORD + v33|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [v33|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [v33|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [v33|QWORD + 12], y: v20|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction v39|QWORD = LEA address: [v36|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: v39|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v36|QWORD, y: v40|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [v33|QWORD + v40|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction v43|QWORD[.] = MOVE input: v33|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: v3|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction v45|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v20|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: v45|DWORD, y: v45|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: v45|DWORD, y: v20|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v66|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction v46|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction v47|QWORD[*] = MOVE input: v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction v48|QWORD = MOVE input: v45|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [v47|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = STACKMOVE (input: v65|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v68|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = STACKMOVE (input: v66|DWORD, ~backupSlot: vstack:2|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 20], ~expectedObject: -) {temp: v50|QWORD, temp2: v51|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction v52|DWORD[_] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v52|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v49|QWORD[.]) {temp: v53|QWORD, temp2: v54|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v79|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: v20|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  638  <|@ instruction v38|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v38|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v38|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction rcx|QWORD = MOVE input: v39|QWORD moveKind: QWORD <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [v33|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v80|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: v74|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: v71|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction v56|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction v57|DWORD = INC value: v56|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v57|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction v58|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction v59|QWORD[.] = UNCOMPRESSPOINTER (input: v58|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  744  <|@ instruction rsi|QWORD[.] = MOVE input: v59|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction rdx|DWORD = MOVE input: v56|DWORD moveKind: DWORD <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: v1|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOVE input: v6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = MOVE input: v4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction v22|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction v23|QWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction v24|QWORD = LEA address: [v23|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction v25|QWORD = AND x: v24|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction v26|QWORD = ADD (x: v25|QWORD, y: v22|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: v26|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: v26|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [v25|QWORD + v22|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [v22|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [v22|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [v22|QWORD + 12], y: v3|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction v29|QWORD[.] = MOVE input: v22|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction v31|QWORD[*] = MOVE input: v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction v32|QWORD[*] = MOVE input: v30|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = MOVE input: v30|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [v31|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [v32|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = STACKMOVE (input: v84|QWORD[.], ~backupSlot: vstack:7|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v86|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  910  <|@ instruction v63|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction rsi|QWORD = MOVE input: v63|QWORD moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: v3|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  936  <|@ instruction v27|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction NULLCHECK address: [v27|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v30|QWORD[.] = MOVE input: v27|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: v0|QWORD[.] v1|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: v0|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: v1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v72|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = MOVE input: v81|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v60|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v61|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: v0|QWORD[.] v1|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   48  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   48  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   52  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   54  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  130  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  132  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  134  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  190  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  192  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  194  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  196  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  198  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  200  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  204  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  206  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  208  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  210  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  234  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  236  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  238  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  240  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  274  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  312  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  314  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  316  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  318  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  320  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  324  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  334  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  368  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  410  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  412  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  476  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  478  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  480  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  602  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  604  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  606  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  612  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  632  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  634  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  640  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  642  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  678  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr  692  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  736  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  740  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  742  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  748  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  750  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  752  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  762  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  764  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  782  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  812  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  814  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  816  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  818  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  820  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  848  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  850  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  852  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  854  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  856  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  858  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  860  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  864  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  898  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  900  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  902  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  904  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  934  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  938  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  940  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  942  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  950  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  960  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  970  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  972  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  990  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  992  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  994  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1002  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1004  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1022  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1024  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction vstack:4|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction vstack:1|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  554  <|@ instruction r9|DWORD = MOVE input: vstack:6|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: vstack:5|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r8|DWORD = MOVE input: vstack:4|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction vstack:6|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction vstack:5|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction vstack:8|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: vstack:8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  646  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  614  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: vstack:3|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: vstack:3|QWORD[.] vstack:0|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction vstack:0|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = MOVE input: vstack:0|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|d DWORD "[vstack:0|d]" vstack:0|d -1 [172, 1118[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [734, 738[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [44, 1120[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[vstack:4|d]" vstack:4|d -1 [54, 982[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[vstack:5|d]" vstack:5|d -1 [170, 872[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[vstack:6|d]" vstack:6|d -1 [168, 868[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[vstack:8|q]" vstack:8|q -1 [316, 326[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|d DWORD "[stack:40|d]" vstack:0|d -1 [172, 1118[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:56|q]" vstack:1|q -1 [734, 738[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:48|q]" vstack:3|q -1 [44, 1120[ "NOT_SUPPORTED"
  vstack:4|d DWORD "[stack:28|d]" vstack:4|d -1 [54, 982[ "NOT_SUPPORTED"
  vstack:5|d DWORD "[stack:36|d]" vstack:5|d -1 [170, 872[ "NOT_SUPPORTED"
  vstack:6|d DWORD "[stack:32|d]" vstack:6|d -1 [168, 868[ "NOT_SUPPORTED"
  vstack:8|q QWORD "[stack:56|q]" vstack:8|q -1 [316, 326[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  554  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  646  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  614  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  738  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  554  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  678  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  646  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  648  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  614  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  616  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  120  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  554  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  556  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  558  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  560  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1118  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@reference-map: [rax:0, rbx:0, r11:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [rbx:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD <|@ <|@
      nr   44  <|@ instruction stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   48  <|@ st <@st|@reference-map: [rax:0, rsi:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   50  <|@ instruction r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   52  <|@ instruction r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   54  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction r9|DWORD = INC value: r11|DWORD size: DWORD <|@ <|@
      nr   58  <|@ instruction rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD <|@ <|@
      nr   60  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr   62  <|@ instruction rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   64  <|@ instruction rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr   66  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr   68  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B25" 
    xhandlers
    flags 
    probability 4606374174863619670
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B1" "B24" 
    successors "B26" "B31" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B30" 
    xhandlers
    flags 
    probability 4607181985151033317
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B36" 
    xhandlers
    flags 
    probability 4607181951785195973
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B28" "B35" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1102  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B37" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  114  <|@ instruction rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  116  <|@ instruction rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  122  <|@ instruction rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  124  <|@ instruction rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  130  <|@ instruction rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD = DEC value: rax|DWORD size: DWORD <|@ <|@
      nr  134  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  158  <|@ instruction rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  162  <|@ instruction rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  358  <|@ instruction rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD <|@ <|@
      nr  362  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr  364  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" "B15" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  420  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  454  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  456  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  458  <|@ instruction MOV x: [r13|QWORD] y: 1 size: QWORD <|@ <|@
      nr  460  <|@ instruction MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  462  <|@ instruction MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  464  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  466  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  478  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4621090939021217215
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  512  <|@ instruction JUMP ~outgoingValues: [] destination: B13 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B13" 
    successors "B13" "B14" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4621140447313807708
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591001482114748048
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B14" 
    successors "B17" 
    xhandlers
    flags 
    probability 4591065492836481211
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD <|@ <|@
      nr  578  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B9" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  596  <|@ instruction rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: > <|@ <|@
      nr  598  <|@ instruction TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4591130150131161174
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  686  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  688  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  690  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  726  <|@ instruction rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD <|@ <|@
      nr  728  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  730  <|@ instruction rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  736  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B7" "B23" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591130372154346832
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  860  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr  862  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  864  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803 <|@ <|@
      nr  866  <|@ instruction rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B17" 
    xhandlers
    flags 
    probability 4561415356990606658
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  400  <|@ instruction rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ st <@st|@reference-map: [rbx:0, r11:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  404  <|@ st <@st|@reference-map: [rax:0, rbx:0, r11:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: r11|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  406  <|@ instruction r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  418  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" 
    xhandlers
    flags 
    probability 4561332595653416306
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  526  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  530  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  532  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  562  <|@ instruction r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B32" 
    xhandlers
    flags 
    probability 4542229729717436416
    begin_IR
      LIR
      nr  970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  972  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr  986  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4542229854822597546
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4542776395596482782
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1066  <|@ instruction rsi|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1072  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3 <|@ <|@
      nr 1074  <|@ instruction rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD <|@ <|@
      nr 1076  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2] <|@ <|@
      nr 1078  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1080  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B32" 
    xhandlers
    flags 
    probability 4525857080317349347
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  968  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4525855078634771267
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1016  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2] <|@ <|@
      nr 1018  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  168  <|@ instruction stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  172  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  198  <|@ instruction r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  200  <|@ instruction rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD <|@ <|@
      nr  202  <|@ instruction rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD <|@ <|@
      nr  204  <|@ instruction rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  206  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4524312929442764157
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  268  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  270  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  272  <|@ instruction MOV x: [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed} <|@ <|@
      nr  276  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B24" 
    xhandlers
    flags 
    probability 4524385682000240487
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  314  <|@ instruction rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  320  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  322  <|@ instruction rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  330  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4494744992166869635
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  210  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>} <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD <|@ <|@
      nr  232  <|@ st <@st|@reference-map: [rbx:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rax:0, rbx:0, stack:16]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  236  <|@ instruction rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  676  <|@ instruction r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7] <|@ <|@
      nr  682  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B18" "B20" "B22" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction NOP <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1142  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1144  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  632  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  634  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  644  <|@ instruction r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7] <|@ <|@
      nr  650  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  612  <|@ instruction r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7] <|@ <|@
      nr  618  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD <|@ <|@
      nr  952  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  954  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38]
locals: - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7]
locals: stack:48|QWORD[.] stack:40|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2]
locals: stack:48|QWORD[.] - 
java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2]
locals: stack:48|QWORD[.] stack:40|DWORD 
>@ <|@ instruction DEOPT info [bci:38, 7, 2, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B38" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1104  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1106  <|@ instruction stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 1116  <|@ instruction r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed] <|@ <|@
      nr 1122  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: iload_1       
     2: invokevirtual #84         // append:(char)java.lang.StringBuilder
     5: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85a20500009090909090909090909090909090909090909048896c243048897424108b4614448b14c50c000000448b5e0c440fbe46104489442424458bcb41ffc1410fbef88bcf418bdad3eb418bc92bcb8bd848c1e30383f9010f8d61000000909090909090904584c00f853103000090909090f7c200ffffff0f857903000090909090443b5b0c0f83d2040000909090909044894e0c4288541b109090909090909090488bc6488b6c24304883c438493ba7500400000f87fa040000c5f877c39090909090909090909090909090908bcf418bc1d3e0412bc2bd02000000d3e54103ea3be80f4fc54103c28bc8ffc981f9f7ffff7f0f83920400009090909090909090908bcfd3f88be8d3e5443bd50f841403000090909090909090909090904d8bafb80100008bfd488d7f174883e7f8488bcf4903cd493b8fc80100000f87e2010000909090909090909090909090909049898fb8010000420f18842f00010000420f18842f40010000420f18842f8001000049c745000100000041c74508addeadde41896d0c488d4ff04881f9000800000f83d901000090909048c7c110000000e91600000066909090909090909049c7440d0000000000488d490890909090483bf977e390909090909090909090909090443bd5418bfa0f4ffd85ff0f8c6403000090909090413bfa0f8741030000909090903bfd0f87fa02000044894c242044895c241c895424189090909090909090909090909090904d8bd58bcf488d7b10498d7210488bd14c896c2408e8000000004c8b6c2408488b742410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b461448c1e0034885c00f841d000000498b57284883fa000f842a0300004883ea084989572849035738488902498bd548c1ea03895614488bd64933d548c1ea160f8442000000488bd648c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f84dd0200004883e8084989474849034758488910498bdd448b4c2420448b442424448b5c241c8b542418e93cfdffff44894c242044895c241c8954241848baaddeaddeaddeadde9090909090909090904c8bde488bf28bd5e8000000000f1f84000000000085004c8be88b542418498bf3448b5c241ce95cfeffff44894c242044895c241c895424184c8bde909090909090909090498d7d104833c0f348aa448b5c241ce92afeffff895424184c8bde909090909090904584c00f844f000000909090909090909090909090909090909090418b530c8bf2ffc64189730c418b731448c1e6038b4c2418e8000000000f1f840000000000488b742410e9a3fcffff895424189090904c8b5c2410eba490909090909090488b742410666690e8000000000f1f8400000000004c8b5c2410eb9144894c242044895c241c895424189090909090909090909090498bbfb8010000458bda498d73174883e6f8488bd64803d7493b97c80100000f87670000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708addeadde4489570c9090909090909090909090909090488bf748897c2408488d7b10488d7610498bd3e800000000e967fdffff48beaddeaddeaddeadde909090909090909090418bd2e8000000000f1f8400000000008500488bf8ebab8954241890909049c7c30000000041bae7eefeff488b74241090909090909090458997840400004d899f90040000e8000000000f1f8400000000008954241890909049c7c30000000041bae7f2feffebc38954241890909049c7c30000000041bae7f6feffebad895424189090909090909041c78784040000e536ffff49c7879004000000000000e8000000000f1f8400000000008954241890909049c7c39402000041baedfafeffe966ffffff48896c2430e800000000e94ffafffff4488d0df2faffff49898f68040000e901fafffff448890424e800000000e9d7fcfffff448891424e800000000e924fdfffff441c78784040000f573ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f4cfeff49c7879004000000000000e8000000000f1f84000000000041c787840400008f9cfeff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 82 42 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD  <||@
  Comment 82 44 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 87 46 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 90 48 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 90 [rax:0, rsi:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 50 r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 102 52 r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 107 54 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 112 56 r9|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 118 58 rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD  <||@
  Comment 122 60 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 124 62 rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 129 64 rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 134 66 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3  <||@
  Comment 140 68 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 149 block B1 null  <||@
  Comment 149 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 72 NOP  <||@
  Comment 150 74 NOP  <||@
  Comment 151 76 NOP  <||@
  Comment 152 78 JUMP ~outgoingValues: [] destination: B1 -> B25  <||@
  Comment 152 block B25 null  <||@
  Comment 152 878 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 152 880 NOP  <||@
  Comment 153 882 NOP  <||@
  Comment 154 884 NOP  <||@
  Comment 155 886 NOP  <||@
  Comment 156 888 TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31  <||@
  Comment 165 block B26 null  <||@
  Comment 165 890 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 892 NOP  <||@
  Comment 166 894 NOP  <||@
  Comment 167 896 NOP  <||@
  Comment 168 898 NOP  <||@
  Comment 169 900 TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD  <||@
  Comment 181 block B27 null  <||@
  Comment 181 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 181 904 NOP  <||@
  Comment 182 906 NOP  <||@
  Comment 183 908 NOP  <||@
  Comment 184 910 NOP  <||@
  Comment 185 912 CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 195 block B28 null  <||@
  Comment 195 914 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 195 916 NOP  <||@
  Comment 196 918 NOP  <||@
  Comment 197 920 NOP  <||@
  Comment 198 922 NOP  <||@
  Comment 199 924 NOP  <||@
  Comment 200 926 MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 204 928 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE  <||@
  Comment 209 930 JUMP ~outgoingValues: [] destination: B28 -> B36  <||@
  Comment 209 block B36 null  <||@
  Comment 209 1082 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 209 1084 NOP  <||@
  Comment 210 1086 NOP  <||@
  Comment 211 1088 NOP  <||@
  Comment 212 1090 NOP  <||@
  Comment 213 1092 NOP  <||@
  Comment 214 1094 NOP  <||@
  Comment 215 1096 NOP  <||@
  Comment 216 1098 NOP  <||@
  Comment 217 1100 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 220 1102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 229 POLL_RETURN_FAR  <||@
  Comment 246 block B2 null  <||@
  Comment 246 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 246 82 NOP  <||@
  Comment 247 84 NOP  <||@
  Comment 248 86 NOP  <||@
  Comment 249 88 NOP  <||@
  Comment 250 90 NOP  <||@
  Comment 251 92 NOP  <||@
  Comment 252 94 NOP  <||@
  Comment 253 96 NOP  <||@
  Comment 254 98 NOP  <||@
  Comment 255 100 NOP  <||@
  Comment 256 102 NOP  <||@
  Comment 257 104 NOP  <||@
  Comment 258 106 NOP  <||@
  Comment 259 108 NOP  <||@
  Comment 260 110 NOP  <||@
  Comment 261 112 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 263 114 rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 268 116 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 271 118 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 276 122 rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 278 124 rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 281 126 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 283 128 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 286 130 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 289 132 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 293 134 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 305 block B3 null  <||@
  Comment 305 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 138 NOP  <||@
  Comment 306 140 NOP  <||@
  Comment 307 142 NOP  <||@
  Comment 308 144 NOP  <||@
  Comment 309 146 NOP  <||@
  Comment 310 148 NOP  <||@
  Comment 311 150 NOP  <||@
  Comment 312 152 NOP  <||@
  Comment 313 154 NOP  <||@
  Comment 314 156 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 316 158 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 318 162 rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 322 164 CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD  <||@
  Comment 331 block B8 null  <||@
  Comment 331 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 334 NOP  <||@
  Comment 332 336 NOP  <||@
  Comment 333 338 NOP  <||@
  Comment 334 340 NOP  <||@
  Comment 335 342 NOP  <||@
  Comment 336 344 NOP  <||@
  Comment 337 346 NOP  <||@
  Comment 338 348 NOP  <||@
  Comment 339 350 NOP  <||@
  Comment 340 352 NOP  <||@
  Comment 341 354 NOP  <||@
  Comment 342 356 r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 349 358 rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 351 360 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 355 362 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 359 364 rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 365 366 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 378 block B10 null  <||@
  Comment 378 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 378 422 NOP  <||@
  Comment 379 424 NOP  <||@
  Comment 380 426 NOP  <||@
  Comment 381 428 NOP  <||@
  Comment 382 430 NOP  <||@
  Comment 383 432 NOP  <||@
  Comment 384 434 NOP  <||@
  Comment 385 436 NOP  <||@
  Comment 386 438 NOP  <||@
  Comment 387 440 NOP  <||@
  Comment 388 442 NOP  <||@
  Comment 389 444 NOP  <||@
  Comment 390 446 NOP  <||@
  Comment 391 448 NOP  <||@
  Comment 392 450 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 399 452 AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0  <||@
  Comment 408 454 AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0  <||@
  Comment 417 456 AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0  <||@
  Comment 426 458 MOV x: [r13|QWORD] y: 1 size: QWORD  <||@
  Comment 434 460 MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 434 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 442 462 MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 446 464 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 450 466 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 463 block B11 null  <||@
  Comment 463 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 463 470 NOP  <||@
  Comment 464 472 NOP  <||@
  Comment 465 474 NOP  <||@
  Comment 466 476 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 473 478 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 478 block B13 loop 0 depth 1 header:387|LoopBegin  <||@
  Comment 478 492 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 494 NOP  <||@
  Comment 481 496 NOP  <||@
  Comment 482 498 NOP  <||@
  Comment 483 500 NOP  <||@
  Comment 484 502 NOP  <||@
  Comment 485 504 NOP  <||@
  Comment 486 506 NOP  <||@
  Comment 487 508 MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 496 510 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 500 512 JUMP ~outgoingValues: [] destination: B13 -> B12  <||@
  Comment 500 block B12 loop 0 depth 1 header:387|LoopBegin  <||@
  Comment 500 480 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 500 482 NOP  <||@
  Comment 501 484 NOP  <||@
  Comment 502 486 NOP  <||@
  Comment 503 488 NOP  <||@
  Comment 504 490 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 509 block B14 null  <||@
  Comment 509 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 516 NOP  <||@
  Comment 510 518 NOP  <||@
  Comment 511 520 NOP  <||@
  Comment 512 522 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 512 block B16 null  <||@
  Comment 512 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 512 568 NOP  <||@
  Comment 513 570 NOP  <||@
  Comment 514 572 NOP  <||@
  Comment 515 574 NOP  <||@
  Comment 516 576 r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 516 578 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 516 block B17 null  <||@
  Comment 516 580 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 516 582 NOP  <||@
  Comment 517 584 NOP  <||@
  Comment 518 586 NOP  <||@
  Comment 519 588 NOP  <||@
  Comment 520 590 NOP  <||@
  Comment 521 592 NOP  <||@
  Comment 522 594 CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 525 596 rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 531 598 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 539 block B19 null  <||@
  Comment 539 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 539 622 NOP  <||@
  Comment 540 624 NOP  <||@
  Comment 541 626 NOP  <||@
  Comment 542 628 NOP  <||@
  Comment 543 630 CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 552 block B21 null  <||@
  Comment 552 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 552 654 NOP  <||@
  Comment 553 656 NOP  <||@
  Comment 554 658 NOP  <||@
  Comment 555 660 NOP  <||@
  Comment 556 662 CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 564 block B23 null  <||@
  Comment 564 684 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 564 686 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 569 688 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 574 690 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 578 692 NOP  <||@
  Comment 579 694 NOP  <||@
  Comment 580 696 NOP  <||@
  Comment 581 698 NOP  <||@
  Comment 582 700 NOP  <||@
  Comment 583 702 NOP  <||@
  Comment 584 704 NOP  <||@
  Comment 585 706 NOP  <||@
  Comment 586 708 NOP  <||@
  Comment 587 710 NOP  <||@
  Comment 588 712 NOP  <||@
  Comment 589 714 NOP  <||@
  Comment 590 716 NOP  <||@
  Comment 591 718 NOP  <||@
  Comment 592 720 NOP  <||@
  Comment 593 722 rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 593 724 r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 596 726 rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 598 728 rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 602 730 rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 606 732 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 609 734 stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 614 736 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 614 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 619 742 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 619 block B24 null  <||@
  Comment 619 744 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 619 326 r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 624 328 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 629 746 NOP  <||@
  Comment 630 748 NOP  <||@
  Comment 631 750 NOP  <||@
  Comment 632 752 NOP  <||@
  Comment 633 754 NOP  <||@
  Comment 634 756 NOP  <||@
  Comment 635 758 NOP  <||@
  Comment 636 760 NOP  <||@
  Comment 637 762 NOP  <||@
  Comment 638 764 NOP  <||@
  Comment 639 766 NOP  <||@
  Comment 640 768 NOP  <||@
  Comment 641 770 NOP  <||@
  Comment 642 772 NOP  <||@
  Comment 643 774 NOP  <||@
  Comment 644 776 NOP  <||@
  Comment 645 778 NOP  <||@
  Comment 646 780 NOP  <||@
  Comment 647 782 NOP  <||@
  Comment 648 784 NOP  <||@
  Comment 649 786 NOP  <||@
  Comment 650 788 NOP  <||@
  Comment 651 790 NOP  <||@
  Comment 652 792 NOP  <||@
  Comment 653 794 NOP  <||@
  Comment 654 796 NOP  <||@
  Comment 655 798 NOP  <||@
  Comment 656 800 NOP  <||@
  Comment 657 802 NOP  <||@
  Comment 658 804 NOP  <||@
  Comment 659 806 NOP  <||@
  Comment 660 808 NOP  <||@
  Comment 661 810 NOP  <||@
  Comment 662 812 NOP  <||@
  Comment 663 814 NOP  <||@
  Comment 664 816 NOP  <||@
  Comment 665 818 NOP  <||@
  Comment 666 820 NOP  <||@
  Comment 667 822 NOP  <||@
  Comment 668 824 NOP  <||@
  Comment 669 826 NOP  <||@
  Comment 670 828 NOP  <||@
  Comment 671 830 NOP  <||@
  Comment 672 832 NOP  <||@
  Comment 673 834 NOP  <||@
  Comment 674 836 NOP  <||@
  Comment 675 838 NOP  <||@
  Comment 676 840 NOP  <||@
  Comment 677 842 NOP  <||@
  Comment 678 844 NOP  <||@
  Comment 679 846 NOP  <||@
  Comment 680 848 NOP  <||@
  Comment 681 850 NOP  <||@
  Comment 682 852 NOP  <||@
  Comment 683 854 NOP  <||@
  Comment 684 856 NOP  <||@
  Comment 685 858 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803  <||@
  Comment 741 860 rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3  <||@
  Comment 748 862 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 751 864 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803  <||@
  Comment 833 866 rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 836 868 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 841 870 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 846 872 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 851 874 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 855 876 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 860 block B9 null  <||@
  Comment 860 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 860 370 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 865 372 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 870 374 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 874 376 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 874 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 884 378 NOP  <||@
  Comment 885 380 NOP  <||@
  Comment 886 382 NOP  <||@
  Comment 887 384 NOP  <||@
  Comment 888 386 NOP  <||@
  Comment 889 388 NOP  <||@
  Comment 890 390 NOP  <||@
  Comment 891 392 NOP  <||@
  Comment 892 394 NOP  <||@
  Comment 893 396 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 896 398 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 899 400 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 901 402 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 901 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 906 [rbx:0, r11:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|QWORD[.]  |stack:40|DWORD   <||@
  Comment 914 404 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 914 [rax:0, rbx:0, r11:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|QWORD[.]  |stack:40|DWORD   <||@
  Comment 914 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 916 406 r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 919 412 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 923 414 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 926 416 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 931 418 JUMP ~outgoingValues: [] destination: B9 -> B17  <||@
  Comment 936 block B15 null  <||@
  Comment 936 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 936 526 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 941 528 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 946 530 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 950 532 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 953 534 NOP  <||@
  Comment 954 536 NOP  <||@
  Comment 955 538 NOP  <||@
  Comment 956 540 NOP  <||@
  Comment 957 542 NOP  <||@
  Comment 958 544 NOP  <||@
  Comment 959 546 NOP  <||@
  Comment 960 548 NOP  <||@
  Comment 961 550 NOP  <||@
  Comment 962 552 ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 972 562 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 977 564 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 982 block B31 null  <||@
  Comment 982 970 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 982 972 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 986 974 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 989 976 NOP  <||@
  Comment 990 978 NOP  <||@
  Comment 991 980 NOP  <||@
  Comment 992 984 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 992 block B32 null  <||@
  Comment 992 986 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 988 NOP  <||@
  Comment 993 990 NOP  <||@
  Comment 994 992 NOP  <||@
  Comment 995 994 NOP  <||@
  Comment 996 996 TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 1005 block B34 null  <||@
  Comment 1005 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1005 1024 NOP  <||@
  Comment 1006 1026 NOP  <||@
  Comment 1007 1028 NOP  <||@
  Comment 1008 1030 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1008 block B35 null  <||@
  Comment 1008 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 1034 NOP  <||@
  Comment 1009 1036 NOP  <||@
  Comment 1010 1038 NOP  <||@
  Comment 1011 1040 NOP  <||@
  Comment 1012 1042 NOP  <||@
  Comment 1013 1044 NOP  <||@
  Comment 1014 1046 NOP  <||@
  Comment 1015 1048 NOP  <||@
  Comment 1016 1050 NOP  <||@
  Comment 1017 1052 NOP  <||@
  Comment 1018 1054 NOP  <||@
  Comment 1019 1056 NOP  <||@
  Comment 1020 1058 NOP  <||@
  Comment 1021 1060 NOP  <||@
  Comment 1022 1062 NOP  <||@
  Comment 1023 1064 rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1027 1066 rsi|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 1031 1068 MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1035 1070 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1039 1072 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3  <||@
  Comment 1043 1074 rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1047 1076 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2]  <||@
  Comment 1047 {HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)>}  <||@
  Comment 1047 INVOKESTATIC  <||@
  Comment 1052 [stack:16]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1060 1078 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1065 1080 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1070 block B30 null  <||@
  Comment 1070 956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1070 958 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1074 960 NOP  <||@
  Comment 1075 962 NOP  <||@
  Comment 1076 964 NOP  <||@
  Comment 1077 966 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1082 968 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1084 block B33 null  <||@
  Comment 1084 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1084 1000 NOP  <||@
  Comment 1085 1002 NOP  <||@
  Comment 1086 1004 NOP  <||@
  Comment 1087 1006 NOP  <||@
  Comment 1088 1008 NOP  <||@
  Comment 1089 1010 NOP  <||@
  Comment 1090 1012 NOP  <||@
  Comment 1091 1014 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 1016 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2]  <||@
  Comment 1099 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1099 INVOKESPECIAL  <||@
  Comment 1104 [stack:16]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1112 1018 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 1020 JUMP ~outgoingValues: [] destination: B33 -> B35  <||@
  Comment 1119 block B4 null  <||@
  Comment 1119 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1119 168 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1124 170 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1129 172 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1133 174 NOP  <||@
  Comment 1134 176 NOP  <||@
  Comment 1135 178 NOP  <||@
  Comment 1136 180 NOP  <||@
  Comment 1137 182 NOP  <||@
  Comment 1138 184 NOP  <||@
  Comment 1139 186 NOP  <||@
  Comment 1140 188 NOP  <||@
  Comment 1141 190 NOP  <||@
  Comment 1142 192 NOP  <||@
  Comment 1143 194 NOP  <||@
  Comment 1144 196 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1151 198 r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1154 200 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 1158 202 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1162 204 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1168 206 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 1181 block B6 null  <||@
  Comment 1181 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1181 242 NOP  <||@
  Comment 1182 244 NOP  <||@
  Comment 1183 246 NOP  <||@
  Comment 1184 248 NOP  <||@
  Comment 1185 250 NOP  <||@
  Comment 1186 252 NOP  <||@
  Comment 1187 254 NOP  <||@
  Comment 1188 256 NOP  <||@
  Comment 1189 258 NOP  <||@
  Comment 1190 260 NOP  <||@
  Comment 1191 262 NOP  <||@
  Comment 1192 264 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1199 266 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1207 268 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1215 270 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1223 272 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1230 274 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1230 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1237 276 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1241 278 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1241 280 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 1241 block B7 null  <||@
  Comment 1241 282 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1241 284 NOP  <||@
  Comment 1242 286 NOP  <||@
  Comment 1243 288 NOP  <||@
  Comment 1244 290 NOP  <||@
  Comment 1245 292 NOP  <||@
  Comment 1246 294 NOP  <||@
  Comment 1247 296 NOP  <||@
  Comment 1248 298 NOP  <||@
  Comment 1249 300 NOP  <||@
  Comment 1250 302 NOP  <||@
  Comment 1251 304 NOP  <||@
  Comment 1252 306 NOP  <||@
  Comment 1253 308 NOP  <||@
  Comment 1254 310 NOP  <||@
  Comment 1255 312 rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1255 314 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1258 316 stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 318 rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1267 320 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1271 322 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 1274 324 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1274 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1279 330 JUMP ~outgoingValues: [] destination: B7 -> B24  <||@
  Comment 1284 block B5 null  <||@
  Comment 1284 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1284 210 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1284 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1294 212 NOP  <||@
  Comment 1295 214 NOP  <||@
  Comment 1296 216 NOP  <||@
  Comment 1297 218 NOP  <||@
  Comment 1298 220 NOP  <||@
  Comment 1299 222 NOP  <||@
  Comment 1300 224 NOP  <||@
  Comment 1301 226 NOP  <||@
  Comment 1302 228 NOP  <||@
  Comment 1303 230 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1306 232 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1306 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1311 [rbx:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1319 234 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1319 [rax:0, rbx:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1321 236 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1324 238 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 1326 block B22 null  <||@
  Comment 1326 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1326 666 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1330 668 NOP  <||@
  Comment 1331 670 NOP  <||@
  Comment 1332 672 NOP  <||@
  Comment 1333 674 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1340 676 r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7]  <||@
  Comment 1346 682 JUMP ~outgoingValues: [] destination: B22 -> B38  <||@
  Comment 1346 block B38 null  <||@
  Comment 1346 1124 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1346 1120 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 1126 NOP  <||@
  Comment 1352 1128 NOP  <||@
  Comment 1353 1130 NOP  <||@
  Comment 1354 1132 NOP  <||@
  Comment 1355 1134 NOP  <||@
  Comment 1356 1136 NOP  <||@
  Comment 1357 1138 NOP  <||@
  Comment 1358 1140 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1365 1142 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1372 1144 DEOPT info [bci:0]  <||@
  Comment 1372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1377 [rsi:0]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1385 block B20 null  <||@
  Comment 1385 632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1385 634 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1389 636 NOP  <||@
  Comment 1390 638 NOP  <||@
  Comment 1391 640 NOP  <||@
  Comment 1392 642 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1399 644 r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7]  <||@
  Comment 1405 650 JUMP ~outgoingValues: [] destination: B20 -> B38  <||@
  Comment 1407 block B18 null  <||@
  Comment 1407 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1407 602 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1411 604 NOP  <||@
  Comment 1412 606 NOP  <||@
  Comment 1413 608 NOP  <||@
  Comment 1414 610 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1421 612 r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7]  <||@
  Comment 1427 618 JUMP ~outgoingValues: [] destination: B18 -> B38  <||@
  Comment 1429 block B29 null  <||@
  Comment 1429 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1429 934 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1433 936 NOP  <||@
  Comment 1434 938 NOP  <||@
  Comment 1435 940 NOP  <||@
  Comment 1436 942 NOP  <||@
  Comment 1437 944 NOP  <||@
  Comment 1438 946 NOP  <||@
  Comment 1439 948 NOP  <||@
  Comment 1440 950 MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD  <||@
  Comment 1451 952 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1462 954 DEOPT info [bci:38, 7, 2, 2]  <||@
  Comment 1462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1467 [stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1475 block B37 null  <||@
  Comment 1475 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1475 1106 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1479 1108 NOP  <||@
  Comment 1480 1110 NOP  <||@
  Comment 1481 1112 NOP  <||@
  Comment 1482 1114 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1489 1116 r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed]  <||@
  Comment 1495 1122 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 1505 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1530 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1540 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1555 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1588 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1593 [rax:0, rsi:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1623 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1628 [rax:0, rbx:0, r11:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1658 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1663 [rax:0, rbx:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1671 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1671 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1677 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1677 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-5936[java.lang.StringBuilder.append(char)]"
  method "HotSpotCompilation-5936[java.lang.StringBuilder.append(char)]"
  date 1724269761408
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af4bd40 448b560849bc0000002b787f00004d03d44d33e4493bc20f85239383fe66669089842400c0feff4883ec389041817f20000000000f85a20500009090909090909090909090909090909090909048896c243048897424108b4614448b14c50c000000448b5e0c440fbe46104489442424458bcb41ffc1410fbef88bcf418bdad3eb418bc92bcb8bd848c1e30383f9010f8d61000000909090909090904584c00f853103000090909090f7c200ffffff0f857903000090909090443b5b0c0f83d2040000909090909044894e0c4288541b109090909090909090488bc6488b6c24304883c438493ba7500400000f87fa040000c5f877c39090909090909090909090909090908bcf418bc1d3e0412bc2bd02000000d3e54103ea3be80f4fc54103c28bc8ffc981f9f7ffff7f0f83920400009090909090909090908bcfd3f88be8d3e5443bd50f841403000090909090909090909090904d8bafb80100008bfd488d7f174883e7f8488bcf4903cd493b8fc80100000f87e2010000909090909090909090909090909049898fb8010000420f18842f00010000420f18842f40010000420f18842f8001000049c745000100000041c74508c022000041896d0c488d4ff04881f9000800000f83d901000090909048c7c110000000e91600000066909090909090909049c7440d0000000000488d490890909090483bf977e390909090909090909090909090443bd5418bfa0f4ffd85ff0f8c6403000090909090413bfa0f8741030000909090903bfd0f87fa02000044894c242044895c241c895424189090909090909090909090909090904d8bd58bcf488d7b10498d7210488bd14c896c2408e895dd81fe4c8b6c2408488b742410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842d0000008b461448c1e0034885c00f841d000000498b57284883fa000f842a0300004883ea084989572849035738488902498bd548c1ea03895614488bd64933d548c1ea160f8442000000488bd648c1ea0948b800e0368d787f00004803d0803a027429f083042400803a00741fc60200498b47484885c00f84dd0200004883e8084989474849034758488910498bdd448b4c2420448b442424448b5c241c8b542418e93cfdffff44894c242044895c241c8954241848bac022002b787f00009090909090909090904c8bde488bf28bd5e8362b98fe0f1f84000000000085004c8be88b542418498bf3448b5c241ce95cfeffff44894c242044895c241c895424184c8bde909090909090909090498d7d104833c0f348aa448b5c241ce92afeffff895424184c8bde909090909090904584c00f844f000000909090909090909090909090909090909090418b530c8bf2ffc64189730c418b731448c1e6038b4c2418e8249883fe0f1f8400cc050003488b742410e9a3fcffff895424189090904c8b5c2410eba490909090909090488b742410666690e8f09183fe0f1f8400000600044c8b5c2410eb9144894c242044895c241c895424189090909090909090909090498bbfb8010000458bda498d73174883e6f8488bd64803d7493b97c80100000f87670000009090909090909090909090498997b80100000f18843e000100000f18843e400100000f18843e8001000048c70701000000c74708c02200004489570c9090909090909090909090909090488bf748897c2408488d7b10488d7610498bd3e801db81fee967fdffff48bec022002b787f0000909090909090909090418bd2e8a12998fe0f1f8400000000008500488bf8ebab8954241890909049c7c30000000041bae7eefeff488b74241090909090909090458997840400004d899f90040000e8d9ee83fe0f1f8400000000008954241890909049c7c30000000041bae7f2feffebc38954241890909049c7c30000000041bae7f6feffebad895424189090909090909041c78784040000e536ffff49c7879004000000000000e87fee83fe0f1f8400000000008954241890909049c7c39402000041baedfafeffe966ffffff48896c2430e8faee81fee94ffafffff4488d0df2faffff49898f68040000e9c1fc83fef448890424e8b7be97fee9d7fcfffff448891424e828e097fee924fdfffff441c78784040000f573ffff49c7879004000000000000e801ee83fe0f1f84000000000041c787840400008f4cfeff49c7879004000000000000e8deed83fe0f1f84000000000041c787840400008f9cfeff49c7879004000000000000e8bbed83fe0f1f840000000000e8348f97fef4e84eeb83fef4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 82 42 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@4a79a9e2 slotKind: QWORD  <||@
  Comment 82 44 stack:48|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 87 46 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 90 48 r10|DWORD = MOV input: [rax|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 90 [rax:0, rsi:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 90 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 98 50 r11|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 102 52 r8|DWORD = MOVSXB input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 107 54 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 112 56 r9|DWORD = INC value: r11|DWORD size: DWORD  <||@
  Comment 118 58 rdi|DWORD = MOVSXB value: r8|DWORD size: DWORD  <||@
  Comment 122 60 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 124 62 rbx|DWORD = SHR (x: r10|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 129 64 rcx|DWORD = SUB (x: r9|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 134 66 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3  <||@
  Comment 140 68 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 0.9102668972297561 condition: < trueDestination: B0 -> B1 falseDestination: B0 -> B2 y: 1 size: DWORD inlinedY: null  <||@
  Comment 149 block B1 null  <||@
  Comment 149 70 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 149 72 NOP  <||@
  Comment 150 74 NOP  <||@
  Comment 151 76 NOP  <||@
  Comment 152 78 JUMP ~outgoingValues: [] destination: B1 -> B25  <||@
  Comment 152 block B25 null  <||@
  Comment 152 878 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 152 880 NOP  <||@
  Comment 153 882 NOP  <||@
  Comment 154 884 NOP  <||@
  Comment 155 886 NOP  <||@
  Comment 156 888 TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9999518552913257 condition: = trueDestination: B25 -> B26 falseDestination: B25 -> B31  <||@
  Comment 165 block B26 null  <||@
  Comment 165 890 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 892 NOP  <||@
  Comment 166 894 NOP  <||@
  Comment 167 896 NOP  <||@
  Comment 168 898 NOP  <||@
  Comment 169 900 TESTCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9999962954695609 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B30 y: -256 size: DWORD  <||@
  Comment 181 block B27 null  <||@
  Comment 181 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 181 904 NOP  <||@
  Comment 182 906 NOP  <||@
  Comment 183 908 NOP  <||@
  Comment 184 910 NOP  <||@
  Comment 185 912 CMPBRANCH (x: r11|DWORD, y: [rbx|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: |<| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 195 block B28 null  <||@
  Comment 195 914 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 195 916 NOP  <||@
  Comment 196 918 NOP  <||@
  Comment 197 920 NOP  <||@
  Comment 198 922 NOP  <||@
  Comment 199 924 NOP  <||@
  Comment 200 926 MOV (x: [rsi|QWORD[.] + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 204 928 MOVB (x: [rbx|QWORD[.] + r11|DWORD * 1 + 16], y: rdx|BYTE(DWORD)) size: BYTE  <||@
  Comment 209 930 JUMP ~outgoingValues: [] destination: B28 -> B36  <||@
  Comment 209 block B36 null  <||@
  Comment 209 1082 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 209 1084 NOP  <||@
  Comment 210 1086 NOP  <||@
  Comment 211 1088 NOP  <||@
  Comment 212 1090 NOP  <||@
  Comment 213 1092 NOP  <||@
  Comment 214 1094 NOP  <||@
  Comment 215 1096 NOP  <||@
  Comment 216 1098 NOP  <||@
  Comment 217 1100 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 220 1102 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 229 POLL_RETURN_FAR  <||@
  Comment 246 block B2 null  <||@
  Comment 246 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 246 82 NOP  <||@
  Comment 247 84 NOP  <||@
  Comment 248 86 NOP  <||@
  Comment 249 88 NOP  <||@
  Comment 250 90 NOP  <||@
  Comment 251 92 NOP  <||@
  Comment 252 94 NOP  <||@
  Comment 253 96 NOP  <||@
  Comment 254 98 NOP  <||@
  Comment 255 100 NOP  <||@
  Comment 256 102 NOP  <||@
  Comment 257 104 NOP  <||@
  Comment 258 106 NOP  <||@
  Comment 259 108 NOP  <||@
  Comment 260 110 NOP  <||@
  Comment 261 112 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 263 114 rax|DWORD = SHL (x: r9|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 268 116 rax|DWORD = SUB (x: rax|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 271 118 rbp|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 276 122 rbp|DWORD = SHL (x: rbp|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 278 124 rbp|DWORD = ADD (x: rbp|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 281 126 CMP (x: rbp|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 283 128 rax|DWORD = CMOVE (falseValue: rax|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 286 130 rax|DWORD = ADD (x: rax|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 289 132 rcx|DWORD = DEC value: rax|DWORD size: DWORD  <||@
  Comment 293 134 CMPCONSTBRANCH x: rcx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B37 y: 2147483639 size: DWORD inlinedY: null  <||@
  Comment 305 block B3 null  <||@
  Comment 305 136 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 305 138 NOP  <||@
  Comment 306 140 NOP  <||@
  Comment 307 142 NOP  <||@
  Comment 308 144 NOP  <||@
  Comment 309 146 NOP  <||@
  Comment 310 148 NOP  <||@
  Comment 311 150 NOP  <||@
  Comment 312 152 NOP  <||@
  Comment 313 154 NOP  <||@
  Comment 314 156 rcx|DWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 316 158 rax|DWORD = SAR (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 318 162 rbp|DWORD = SHL (x: rax|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 322 164 CMPBRANCH (x: r10|DWORD, y: rbp|DWORD) trueDestinationProbability: 3.433727982038448E-5 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B8 size: DWORD  <||@
  Comment 331 block B8 null  <||@
  Comment 331 332 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 331 334 NOP  <||@
  Comment 332 336 NOP  <||@
  Comment 333 338 NOP  <||@
  Comment 334 340 NOP  <||@
  Comment 335 342 NOP  <||@
  Comment 336 344 NOP  <||@
  Comment 337 346 NOP  <||@
  Comment 338 348 NOP  <||@
  Comment 339 350 NOP  <||@
  Comment 340 352 NOP  <||@
  Comment 341 354 NOP  <||@
  Comment 342 356 r13|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 349 358 rdi|QWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 351 360 rdi|QWORD = LEA address: [rdi|QWORD + 23] size: QWORD  <||@
  Comment 355 362 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 359 364 rcx|QWORD = ADD (x: rdi|QWORD, y: r13|QWORD) size: QWORD  <||@
  Comment 365 366 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: QWORD  <||@
  Comment 378 block B10 null  <||@
  Comment 378 420 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 378 422 NOP  <||@
  Comment 379 424 NOP  <||@
  Comment 380 426 NOP  <||@
  Comment 381 428 NOP  <||@
  Comment 382 430 NOP  <||@
  Comment 383 432 NOP  <||@
  Comment 384 434 NOP  <||@
  Comment 385 436 NOP  <||@
  Comment 386 438 NOP  <||@
  Comment 387 440 NOP  <||@
  Comment 388 442 NOP  <||@
  Comment 389 444 NOP  <||@
  Comment 390 446 NOP  <||@
  Comment 391 448 NOP  <||@
  Comment 392 450 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 399 452 AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 256] instr: 0  <||@
  Comment 408 454 AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 320] instr: 0  <||@
  Comment 417 456 AMD64PREFETCH ~address: [rdi|QWORD + r13|QWORD * 1 + 384] instr: 0  <||@
  Comment 426 458 MOV x: [r13|QWORD] y: 1 size: QWORD  <||@
  Comment 434 460 MOV x: [r13|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 434 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 442 462 MOV (x: [r13|QWORD + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 446 464 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 450 466 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B10 -> B11 falseDestination: B10 -> B15 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 463 block B11 null  <||@
  Comment 463 468 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 463 470 NOP  <||@
  Comment 464 472 NOP  <||@
  Comment 465 474 NOP  <||@
  Comment 466 476 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 473 478 JUMP ~outgoingValues: [] destination: B11 -> B12  <||@
  Comment 478 block B13 loop 0 depth 1 header:387|LoopBegin  <||@
  Comment 478 492 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 480 494 NOP  <||@
  Comment 481 496 NOP  <||@
  Comment 482 498 NOP  <||@
  Comment 483 500 NOP  <||@
  Comment 484 502 NOP  <||@
  Comment 485 504 NOP  <||@
  Comment 486 506 NOP  <||@
  Comment 487 508 MOV x: [r13|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 496 510 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 500 512 JUMP ~outgoingValues: [] destination: B13 -> B12  <||@
  Comment 500 block B12 loop 0 depth 1 header:387|LoopBegin  <||@
  Comment 500 480 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 500 482 NOP  <||@
  Comment 501 484 NOP  <||@
  Comment 502 486 NOP  <||@
  Comment 503 488 NOP  <||@
  Comment 504 490 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: QWORD  <||@
  Comment 509 block B14 null  <||@
  Comment 509 514 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 509 516 NOP  <||@
  Comment 510 518 NOP  <||@
  Comment 511 520 NOP  <||@
  Comment 512 522 JUMP ~outgoingValues: [] destination: B14 -> B16  <||@
  Comment 512 block B16 null  <||@
  Comment 512 566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 512 568 NOP  <||@
  Comment 513 570 NOP  <||@
  Comment 514 572 NOP  <||@
  Comment 515 574 NOP  <||@
  Comment 516 576 r13|QWORD[.] = MOVE input: r13|QWORD moveKind: QWORD  <||@
  Comment 516 578 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 516 block B17 null  <||@
  Comment 516 580 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 516 582 NOP  <||@
  Comment 517 584 NOP  <||@
  Comment 518 586 NOP  <||@
  Comment 519 588 NOP  <||@
  Comment 520 590 NOP  <||@
  Comment 521 592 NOP  <||@
  Comment 522 594 CMP (x: r10|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 525 596 rdi|DWORD = CMOVE (falseValue: r10|DWORD, ~trueValue: rbp|DWORD) condition: >  <||@
  Comment 531 598 TESTBRANCH (x: rdi|DWORD, y: rdi|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B17 -> B18 falseDestination: B17 -> B19 size: DWORD  <||@
  Comment 539 block B19 null  <||@
  Comment 539 620 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 539 622 NOP  <||@
  Comment 540 624 NOP  <||@
  Comment 541 626 NOP  <||@
  Comment 542 628 NOP  <||@
  Comment 543 630 CMPBRANCH (x: rdi|DWORD, y: r10|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: DWORD  <||@
  Comment 552 block B21 null  <||@
  Comment 552 652 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 552 654 NOP  <||@
  Comment 553 656 NOP  <||@
  Comment 554 658 NOP  <||@
  Comment 555 660 NOP  <||@
  Comment 556 662 CMPBRANCH (x: rdi|DWORD, y: rbp|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: DWORD  <||@
  Comment 564 block B23 null  <||@
  Comment 564 684 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 564 686 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 569 688 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 574 690 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 578 692 NOP  <||@
  Comment 579 694 NOP  <||@
  Comment 580 696 NOP  <||@
  Comment 581 698 NOP  <||@
  Comment 582 700 NOP  <||@
  Comment 583 702 NOP  <||@
  Comment 584 704 NOP  <||@
  Comment 585 706 NOP  <||@
  Comment 586 708 NOP  <||@
  Comment 587 710 NOP  <||@
  Comment 588 712 NOP  <||@
  Comment 589 714 NOP  <||@
  Comment 590 716 NOP  <||@
  Comment 591 718 NOP  <||@
  Comment 592 720 NOP  <||@
  Comment 593 722 rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 593 724 r10|QWORD[*] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 596 726 rcx|QWORD = MOVE input: rdi|DWORD moveKind: DWORD  <||@
  Comment 598 728 rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 602 730 rsi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 606 732 rdx|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 609 734 stack:56|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 614 736 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopy(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[Array: byte], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 614 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 619 742 JUMP ~outgoingValues: [] destination: B23 -> B24  <||@
  Comment 619 block B24 null  <||@
  Comment 619 744 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 619 326 r13|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 624 328 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 629 746 NOP  <||@
  Comment 630 748 NOP  <||@
  Comment 631 750 NOP  <||@
  Comment 632 752 NOP  <||@
  Comment 633 754 NOP  <||@
  Comment 634 756 NOP  <||@
  Comment 635 758 NOP  <||@
  Comment 636 760 NOP  <||@
  Comment 637 762 NOP  <||@
  Comment 638 764 NOP  <||@
  Comment 639 766 NOP  <||@
  Comment 640 768 NOP  <||@
  Comment 641 770 NOP  <||@
  Comment 642 772 NOP  <||@
  Comment 643 774 NOP  <||@
  Comment 644 776 NOP  <||@
  Comment 645 778 NOP  <||@
  Comment 646 780 NOP  <||@
  Comment 647 782 NOP  <||@
  Comment 648 784 NOP  <||@
  Comment 649 786 NOP  <||@
  Comment 650 788 NOP  <||@
  Comment 651 790 NOP  <||@
  Comment 652 792 NOP  <||@
  Comment 653 794 NOP  <||@
  Comment 654 796 NOP  <||@
  Comment 655 798 NOP  <||@
  Comment 656 800 NOP  <||@
  Comment 657 802 NOP  <||@
  Comment 658 804 NOP  <||@
  Comment 659 806 NOP  <||@
  Comment 660 808 NOP  <||@
  Comment 661 810 NOP  <||@
  Comment 662 812 NOP  <||@
  Comment 663 814 NOP  <||@
  Comment 664 816 NOP  <||@
  Comment 665 818 NOP  <||@
  Comment 666 820 NOP  <||@
  Comment 667 822 NOP  <||@
  Comment 668 824 NOP  <||@
  Comment 669 826 NOP  <||@
  Comment 670 828 NOP  <||@
  Comment 671 830 NOP  <||@
  Comment 672 832 NOP  <||@
  Comment 673 834 NOP  <||@
  Comment 674 836 NOP  <||@
  Comment 675 838 NOP  <||@
  Comment 676 840 NOP  <||@
  Comment 677 842 NOP  <||@
  Comment 678 844 NOP  <||@
  Comment 679 846 NOP  <||@
  Comment 680 848 NOP  <||@
  Comment 681 850 NOP  <||@
  Comment 682 852 NOP  <||@
  Comment 683 854 NOP  <||@
  Comment 684 856 NOP  <||@
  Comment 685 858 AMD64G1PREWRITEBARRIER (~address: [rsi|QWORD[.] + 20], ~expectedObject: -) {temp: rdx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803  <||@
  Comment 741 860 rdx|DWORD[_] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3  <||@
  Comment 748 862 MOV (x: [rsi|QWORD[.] + 20], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 751 864 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.], ~newValue: r13|QWORD[.]) {temp: rdx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@1837c803  <||@
  Comment 833 866 rbx|QWORD[.] = MOVE input: r13|QWORD[.] moveKind: QWORD  <||@
  Comment 836 868 r9|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 841 870 r8|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 846 872 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 851 874 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 855 876 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 860 block B9 null  <||@
  Comment 860 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 860 370 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 865 372 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 870 374 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 874 376 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 874 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 884 378 NOP  <||@
  Comment 885 380 NOP  <||@
  Comment 886 382 NOP  <||@
  Comment 887 384 NOP  <||@
  Comment 888 386 NOP  <||@
  Comment 889 388 NOP  <||@
  Comment 890 390 NOP  <||@
  Comment 891 392 NOP  <||@
  Comment 892 394 NOP  <||@
  Comment 893 396 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 896 398 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 899 400 rdx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 901 402 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 901 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 906 [rbx:0, r11:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|QWORD[.]  |stack:40|DWORD   <||@
  Comment 914 404 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 914 [rax:0, rbx:0, r11:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|QWORD[.]  |stack:40|DWORD   <||@
  Comment 914 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 916 406 r13|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 919 412 rdx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 923 414 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 926 416 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 931 418 JUMP ~outgoingValues: [] destination: B9 -> B17  <||@
  Comment 936 block B15 null  <||@
  Comment 936 524 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 936 526 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 941 528 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 946 530 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 950 532 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 953 534 NOP  <||@
  Comment 954 536 NOP  <||@
  Comment 955 538 NOP  <||@
  Comment 956 540 NOP  <||@
  Comment 957 542 NOP  <||@
  Comment 958 544 NOP  <||@
  Comment 959 546 NOP  <||@
  Comment 960 548 NOP  <||@
  Comment 961 550 NOP  <||@
  Comment 962 552 ZERO_MEMORY (pointer: [r13|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 972 562 r11|DWORD = MOVE input: stack:36|DWORD moveKind: DWORD  <||@
  Comment 977 564 JUMP ~outgoingValues: [] destination: B15 -> B16  <||@
  Comment 982 block B31 null  <||@
  Comment 982 970 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 982 972 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 986 974 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 989 976 NOP  <||@
  Comment 990 978 NOP  <||@
  Comment 991 980 NOP  <||@
  Comment 992 984 JUMP ~outgoingValues: [] destination: B31 -> B32  <||@
  Comment 992 block B32 null  <||@
  Comment 992 986 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 992 988 NOP  <||@
  Comment 993 990 NOP  <||@
  Comment 994 992 NOP  <||@
  Comment 995 994 NOP  <||@
  Comment 996 996 TESTBYTEBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0714285714285714 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 1005 block B34 null  <||@
  Comment 1005 1022 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1005 1024 NOP  <||@
  Comment 1006 1026 NOP  <||@
  Comment 1007 1028 NOP  <||@
  Comment 1008 1030 JUMP ~outgoingValues: [] destination: B34 -> B35  <||@
  Comment 1008 block B35 null  <||@
  Comment 1008 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 1034 NOP  <||@
  Comment 1009 1036 NOP  <||@
  Comment 1010 1038 NOP  <||@
  Comment 1011 1040 NOP  <||@
  Comment 1012 1042 NOP  <||@
  Comment 1013 1044 NOP  <||@
  Comment 1014 1046 NOP  <||@
  Comment 1015 1048 NOP  <||@
  Comment 1016 1050 NOP  <||@
  Comment 1017 1052 NOP  <||@
  Comment 1018 1054 NOP  <||@
  Comment 1019 1056 NOP  <||@
  Comment 1020 1058 NOP  <||@
  Comment 1021 1060 NOP  <||@
  Comment 1022 1062 NOP  <||@
  Comment 1023 1064 rdx|DWORD = MOV input: [r11|QWORD[.] + 12] size: DWORD  <||@
  Comment 1027 1066 rsi|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 1031 1068 MOV (x: [r11|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 1035 1070 rsi|DWORD[_] = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 1039 1072 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@18c305e1 encoding: base: 0 shift: 3  <||@
  Comment 1043 1074 rcx|DWORD = MOVE input: stack:40|DWORD moveKind: DWORD  <||@
  Comment 1047 1076 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|DWORD] temps: [] callTarget: HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:72, 2, 2]  <||@
  Comment 1047 {HotSpotMethod<StringUTF16.putCharSB(byte[], int, int)>}  <||@
  Comment 1047 INVOKESTATIC  <||@
  Comment 1052 [stack:16]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:813) [bci: 72, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1060 1078 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1065 1080 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1070 block B30 null  <||@
  Comment 1070 956 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1070 958 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1074 960 NOP  <||@
  Comment 1075 962 NOP  <||@
  Comment 1076 964 NOP  <||@
  Comment 1077 966 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1082 968 JUMP ~outgoingValues: [] destination: B30 -> B32  <||@
  Comment 1084 block B33 null  <||@
  Comment 1084 998 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1084 1000 NOP  <||@
  Comment 1085 1002 NOP  <||@
  Comment 1086 1004 NOP  <||@
  Comment 1087 1006 NOP  <||@
  Comment 1088 1008 NOP  <||@
  Comment 1089 1010 NOP  <||@
  Comment 1090 1012 NOP  <||@
  Comment 1091 1014 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1096 1016 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<AbstractStringBuilder.inflate()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:53, 2, 2]  <||@
  Comment 1099 {HotSpotMethod<AbstractStringBuilder.inflate()>}  <||@
  Comment 1099 INVOKESPECIAL  <||@
  Comment 1104 [stack:16]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:811) [bci: 53, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1112 1018 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 1020 JUMP ~outgoingValues: [] destination: B33 -> B35  <||@
  Comment 1119 block B4 null  <||@
  Comment 1119 166 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1119 168 stack:32|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1124 170 stack:36|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 1129 172 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1133 174 NOP  <||@
  Comment 1134 176 NOP  <||@
  Comment 1135 178 NOP  <||@
  Comment 1136 180 NOP  <||@
  Comment 1137 182 NOP  <||@
  Comment 1138 184 NOP  <||@
  Comment 1139 186 NOP  <||@
  Comment 1140 188 NOP  <||@
  Comment 1141 190 NOP  <||@
  Comment 1142 192 NOP  <||@
  Comment 1143 194 NOP  <||@
  Comment 1144 196 rdi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1151 198 r11|QWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1154 200 rsi|QWORD = LEA address: [r11|QWORD + 23] size: QWORD  <||@
  Comment 1158 202 rsi|QWORD = AND x: rsi|QWORD y: -8 size: QWORD  <||@
  Comment 1162 204 rdx|QWORD = ADD (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 1168 206 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 1181 block B6 null  <||@
  Comment 1181 240 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1181 242 NOP  <||@
  Comment 1182 244 NOP  <||@
  Comment 1183 246 NOP  <||@
  Comment 1184 248 NOP  <||@
  Comment 1185 250 NOP  <||@
  Comment 1186 252 NOP  <||@
  Comment 1187 254 NOP  <||@
  Comment 1188 256 NOP  <||@
  Comment 1189 258 NOP  <||@
  Comment 1190 260 NOP  <||@
  Comment 1191 262 NOP  <||@
  Comment 1192 264 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1199 266 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1207 268 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1215 270 AMD64PREFETCH ~address: [rsi|QWORD + rdi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1223 272 MOV x: [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 1230 274 MOV x: [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[B, resolved>;compressed}  <||@
  Comment 1230 {meta{HotSpotType<[B, resolved>;compressed}}  <||@
  Comment 1237 276 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 1241 278 rdi|QWORD[.] = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1241 280 JUMP ~outgoingValues: [] destination: B6 -> B7  <||@
  Comment 1241 block B7 null  <||@
  Comment 1241 282 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1241 284 NOP  <||@
  Comment 1242 286 NOP  <||@
  Comment 1243 288 NOP  <||@
  Comment 1244 290 NOP  <||@
  Comment 1245 292 NOP  <||@
  Comment 1246 294 NOP  <||@
  Comment 1247 296 NOP  <||@
  Comment 1248 298 NOP  <||@
  Comment 1249 300 NOP  <||@
  Comment 1250 302 NOP  <||@
  Comment 1251 304 NOP  <||@
  Comment 1252 306 NOP  <||@
  Comment 1253 308 NOP  <||@
  Comment 1254 310 NOP  <||@
  Comment 1255 312 rbx|QWORD[*] = MOVE input: rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1255 314 rsi|QWORD[*] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1258 316 stack:56|QWORD[.] = MOVE input: rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 1263 318 rdi|QWORD = LEA address: [rbx|QWORD[*] + 16] size: QWORD  <||@
  Comment 1267 320 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 1271 322 rdx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 1274 324 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{byteDisjointArraycopyKillInit(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[INIT_LOCATION], transition=LEAF_NO_VZERO}@0x7f7899769d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1274 {Field[name=StubRoutines::_jbyte_disjoint_arraycopy, type=address, offset=0, address=0x7f78b1ffa4b8, value=140155947490624]:0x7f7899769d40}  <||@
  Comment 1279 330 JUMP ~outgoingValues: [] destination: B7 -> B24  <||@
  Comment 1284 block B5 null  <||@
  Comment 1284 208 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1284 210 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[B, resolved>}  <||@
  Comment 1284 {meta{HotSpotType<[B, resolved>}}  <||@
  Comment 1294 212 NOP  <||@
  Comment 1295 214 NOP  <||@
  Comment 1296 216 NOP  <||@
  Comment 1297 218 NOP  <||@
  Comment 1298 220 NOP  <||@
  Comment 1299 222 NOP  <||@
  Comment 1300 224 NOP  <||@
  Comment 1301 226 NOP  <||@
  Comment 1302 228 NOP  <||@
  Comment 1303 230 rdx|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 1306 232 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1306 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1311 [rbx:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1319 234 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1319 [rax:0, rbx:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1321 236 rdi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1324 238 JUMP ~outgoingValues: [] destination: B5 -> B7  <||@
  Comment 1326 block B22 null  <||@
  Comment 1326 664 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1326 666 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1330 668 NOP  <||@
  Comment 1331 670 NOP  <||@
  Comment 1332 672 NOP  <||@
  Comment 1333 674 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1340 676 r10|DWORD = MOVE input: int[-69913|0xfffffffffffeeee7]  <||@
  Comment 1346 682 JUMP ~outgoingValues: [] destination: B22 -> B38  <||@
  Comment 1346 block B38 null  <||@
  Comment 1346 1124 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1346 1120 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1351 1126 NOP  <||@
  Comment 1352 1128 NOP  <||@
  Comment 1353 1130 NOP  <||@
  Comment 1354 1132 NOP  <||@
  Comment 1355 1134 NOP  <||@
  Comment 1356 1136 NOP  <||@
  Comment 1357 1138 NOP  <||@
  Comment 1358 1140 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1365 1142 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1372 1144 DEOPT info [bci:0]  <||@
  Comment 1372 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1377 [rsi:0]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1385 block B20 null  <||@
  Comment 1385 632 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1385 634 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1389 636 NOP  <||@
  Comment 1390 638 NOP  <||@
  Comment 1391 640 NOP  <||@
  Comment 1392 642 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1399 644 r10|DWORD = MOVE input: int[-68889|0xfffffffffffef2e7]  <||@
  Comment 1405 650 JUMP ~outgoingValues: [] destination: B20 -> B38  <||@
  Comment 1407 block B18 null  <||@
  Comment 1407 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1407 602 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1411 604 NOP  <||@
  Comment 1412 606 NOP  <||@
  Comment 1413 608 NOP  <||@
  Comment 1414 610 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1421 612 r10|DWORD = MOVE input: int[-67865|0xfffffffffffef6e7]  <||@
  Comment 1427 618 JUMP ~outgoingValues: [] destination: B18 -> B38  <||@
  Comment 1429 block B29 null  <||@
  Comment 1429 932 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1429 934 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1433 936 NOP  <||@
  Comment 1434 938 NOP  <||@
  Comment 1435 940 NOP  <||@
  Comment 1436 942 NOP  <||@
  Comment 1437 944 NOP  <||@
  Comment 1438 946 NOP  <||@
  Comment 1439 948 NOP  <||@
  Comment 1440 950 MOV x: [r15|QWORD + 1156] y: -51483 size: DWORD  <||@
  Comment 1451 952 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1462 954 DEOPT info [bci:38, 7, 2, 2]  <||@
  Comment 1462 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1467 [stack:16]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:245) [bci: 38, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:806) [bci: 7, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:246) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:48|QWORD[.]  |- 
  at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1475 block B37 null  <||@
  Comment 1475 1104 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1475 1106 stack:40|DWORD = MOVE input: rdx|DWORD moveKind: DWORD  <||@
  Comment 1479 1108 NOP  <||@
  Comment 1480 1110 NOP  <||@
  Comment 1481 1112 NOP  <||@
  Comment 1482 1114 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 1489 1116 r10|DWORD = MOVE input: int[-66835|0xfffffffffffefaed]  <||@
  Comment 1495 1122 JUMP ~outgoingValues: [] destination: B37 -> B38  <||@
  Comment 1505 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1530 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1540 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 1555 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 1588 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1593 [rax:0, rsi:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rsi|QWORD[.]  |rdx|DWORD   <||@
  Comment 1623 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1628 [rax:0, rbx:0, r11:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |r11|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1658 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1663 [rax:0, rbx:0, stack:16]at java.lang.StringBuilder.append(StringBuilder.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:48|QWORD[.]  |stack:40|DWORD   <||@
  Comment 1671 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1671 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1677 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1677 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
