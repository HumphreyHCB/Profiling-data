begin_compilation
  name " HotSpotCompilation-8034[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  method "HotSpotCompilation-8034[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  date 1724269751951
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1043 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i1043  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1063 ?46 v1064 v1075 v1065 ?50 v1066 v1077 v1067 v1087 v1068 v1082 v1069 v1086 v1070 ?143 v1071 ?27 ?162 ?54 v1073 v756 v759 v762 v765 v768 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1051 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a195 ?27 v759 v1085 v1140 v1083 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1051 a3 
=== Succesors ===
=== Usages ===
i1043 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1051 a3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1074 a191 v756 ?27 v1076 ?54 ?50 ?46 v1072 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1043 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-51211|0xffffffffffff37f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.capturingGroupCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 50]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1072 
lastLocationAccess: - 
=== Succesors ===
next: i1044 
=== Usages ===
i59 v31 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1072 lastLocationAccess: - #next: i1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1044 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 70]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
lastLocationAccess: - 
=== Succesors ===
next: i1045 
=== Usages ===
v910 i695 v454 v474 j328 a885 i475 v166 i348 v340 
=== Predecessor ===
i1043 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1074 lastLocationAccess: - #next: i1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1045 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localTCNCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1076 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
v982 v112 j927 a957 
=== Predecessor ===
i1044 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1076 lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:154) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 v176 v182 v112 v166 v262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:154) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
i1045 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1063 lastLocationAccess: - value: i5 stateAfter: - #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 v179 v249 v233 v241 v257 i345 i348 v401 v421 v445 v465 v488 v508 v530 v536 v552 v558 v578 v584 v591 v597 v622 v628 v635 v641 v649 v655 v661 v667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1064 lastLocationAccess: - value: i8 stateAfter: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - value: i5 stateAfter: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:167) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 lastLocationAccess: - value: i8 stateAfter: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:172) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 lastLocationAccess: - value: i5 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
displacement: 50
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.transparentBounds
location: Matcher.transparentBounds
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 31]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
lastLocationAccess: - 
value: i282 
stateAfter: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 lastLocationAccess: - value: i282 stateAfter: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
displacement: 51
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.anchoringBounds
location: Matcher.anchoringBounds
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 36]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
lastLocationAccess: - 
value: i283 
stateAfter: - 
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 lastLocationAccess: - value: i283 stateAfter: - #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v194 v754 v756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
precise: true
stamp: void
=== Inputs ===
address: v1070 
value: - 
stateBefore: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1070 value: - stateBefore: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid a191 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
op: Compress
stamp: n# java.util.regex.Pattern
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.parentPattern
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
value: a191 
stateAfter: - 
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - value: a191 stateAfter: - #next: v756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
precise: false
stamp: void
=== Inputs ===
address: v1070 
value: a2 
object: a1 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1070 value: a2 object: a1 #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v198 v757 v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
precise: true
stamp: void
=== Inputs ===
address: v1071 
value: - 
stateBefore: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1071 value: - stateBefore: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.text
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
lastLocationAccess: - 
value: a195 
stateAfter: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 lastLocationAccess: - value: a195 stateAfter: - #next: v759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
precise: false
stamp: void
=== Inputs ===
address: v1071 
value: a3 
object: a1 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1071 value: a3 object: a1 #next: v850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: j770 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j770 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j832 
=== Usages ===
v1110 v1111 
=== Predecessor ===
v850 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j832  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
j832 v834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j832 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1110 
lastLocationAccess: - 
=== Succesors ===
next: j833 
=== Usages ===
j777 v1112 v1113 v1114 a804 v1115 v1119 v1116 v1117 v1118 
=== Predecessor ===
j770 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1110 lastLocationAccess: - #next: j833  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
j833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1111 
lastLocationAccess: - 
=== Succesors ===
next: v781 
=== Usages ===
v778 
=== Predecessor ===
j832 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1111 lastLocationAccess: - #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 53]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 v31 i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1043 
y: i29 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1043 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
stamp: i32 [10 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v31 
trueValue: i29 
falseValue: i1043 
=== Succesors ===
=== Usages ===
?54 ?50 i60 ?46 v287 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v31 trueValue: i29 falseValue: i1043  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i163 i60 i80 i95 i108 i144 i394 i414 i438 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 62]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i59 
y: i20 
=== Succesors ===
=== Usages ===
v839 v431 v410 j312 a805 i432 i692 i345 v325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i59 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i60 
=== Succesors ===
=== Usages ===
v320 j774 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 j774 j928 v325 j856 v340 i475 i516 i432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [0 - 17179869176] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j312 
y: i228 
=== Succesors ===
=== Usages ===
j815 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j815 j892 j964 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [23 - 17179869199] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111
=== Inputs ===
x: j774 
y: j814 
=== Succesors ===
=== Usages ===
j776 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j774 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j776 j857 j929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [0 - 17179869192] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j815 
y: j775 
=== Succesors ===
=== Usages ===
j777 v793 j817 v1116 v1117 v1118 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j815 y: j775  <|@  <|@
f <@~|@floating>@ <|@
tid j777 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
=== Inputs ===
x: j776 
y: j832 
=== Succesors ===
=== Usages ===
v778 v834 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j776 y: j832  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j833 
y: j777 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j833 y: j777  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 j953 j881 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j727 v983 v911 v840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j792 j944 j872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j817 j893 j965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 v865 v937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 v909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v835 v906 v978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a805 a885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
j833 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v780 #falseSuccessor: v779  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a805 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a805  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
sourceFile: Matcher.java
sourceLine: 250
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v1056 a805 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a805 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?27 
arguments: v769 i60 
=== Succesors ===
next: v1056 
=== Usages ===
v1056 a830 
=== Predecessor ===
v780 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?27 arguments: v769 i60 #next: v1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-216689|0xfffffffffffcb18f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?27 
object: a805 
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
a805 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?27 object: a805 #next: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1110 
lastLocationAccess: - 
value: j777 
stateAfter: - 
=== Succesors ===
next: v822 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1110 lastLocationAccess: - value: j777 stateAfter: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: j832 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
address: v1116 
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1116 #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: j832 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
address: v1117 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1117 #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: j832 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
address: v1118 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1118 #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v1112 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1112 
lastLocationAccess: - 
value: j782 
stateAfter: - 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1112 lastLocationAccess: - value: j782 stateAfter: - #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1119 
lastLocationAccess: - 
value: v1004 
stateAfter: - 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1119 lastLocationAccess: - value: v1004 stateAfter: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1113 
lastLocationAccess: - 
value: i60 
stateAfter: - 
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1113 lastLocationAccess: - value: i60 stateAfter: - #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid j817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [-16 - 17179869176] bits:x...x000
=== Inputs ===
x: j776 
y: j816 
=== Succesors ===
=== Usages ===
v785 v789 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j776 y: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j817 
y: j819 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j817 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v785 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v785 #trueSuccessor: v787 #falseSuccessor: v786  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v791 
values: j230 j801 
=== Succesors ===
=== Usages ===
v793 v1114 j801 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v791 values: j230 j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v790 
=== Succesors ===
next: v799 
=== Usages ===
j792 v798 v802 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v790 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j792 
y: j776 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j792 y: j776  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v793 
=== Succesors ===
trueSuccessor: v794 
falseSuccessor: v798 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v793 #trueSuccessor: v794 #falseSuccessor: v798  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid v1114 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: j792 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
lastLocationAccess: - 
value: j725 
stateAfter: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1114 lastLocationAccess: - value: j725 stateAfter: - #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
=== Inputs ===
x: j792 
y: j818 
=== Succesors ===
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j792 y: j818  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
loopBegin: v791 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v791  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v791 
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v791 #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v789 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1115 
lastLocationAccess: - 
length: j817 
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1115 lastLocationAccess: - length: j817 #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v795 v797 
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v795 v797 #next: v803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a804 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j832 
=== Succesors ===
next: v807 
=== Usages ===
a830 
=== Predecessor ===
v803 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j832 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
a804 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a830 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v808 
values: a804 a805 
=== Succesors ===
=== Usages ===
v1108 v1109 a204 v1078 v1079 v1088 v1089 v1092 v1094 v1095 v1098 v1099 v1100 v1101 v1102 v1103 v1104 v1105 v1106 v1107 v762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v808 values: a804 a805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v807 v809 
=== Succesors ===
next: v760 
=== Usages ===
a830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v807 v809 #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v207 v760 v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
precise: true
stamp: void
=== Inputs ===
address: v1073 
value: - 
stateBefore: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1073 value: - stateBefore: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.groups
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
lastLocationAccess: - 
value: a204 
stateAfter: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 lastLocationAccess: - value: a204 stateAfter: - #next: v762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
precise: false
stamp: void
=== Inputs ===
address: v1073 
value: a830 
object: a1 
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1073 value: a830 object: a1 #next: v921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: j852 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j903 
=== Usages ===
v1120 v1121 
=== Predecessor ===
v921 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j903  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
j903 v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j903 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1120 
lastLocationAccess: - 
=== Succesors ===
next: j904 
=== Usages ===
j858 v1122 v1123 v1124 a884 v1125 v1129 v1126 v1127 v1128 
=== Predecessor ===
j852 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1120 lastLocationAccess: - #next: j904  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
j904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1121 
lastLocationAccess: - 
=== Succesors ===
next: v862 
=== Usages ===
v859 
=== Predecessor ===
j903 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1121 lastLocationAccess: - #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1044 
=== Succesors ===
=== Usages ===
v335 j856 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1044  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j328 
y: i228 
=== Succesors ===
=== Usages ===
j892 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j328 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j856 
y: j814 
=== Succesors ===
=== Usages ===
j857 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j856 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j892 
y: j775 
=== Succesors ===
=== Usages ===
j858 v873 j893 v1126 v1127 v1128 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j892 y: j775  <|@  <|@
f <@~|@floating>@ <|@
tid j858 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
=== Inputs ===
x: j857 
y: j903 
=== Succesors ===
=== Usages ===
v859 v905 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j857 y: j903  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j904 
y: j858 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j904 y: j858  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v859 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
j904 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v859 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a885 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a885  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
sourceFile: Matcher.java
sourceLine: 252
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i59 
=== Succesors ===
=== Usages ===
v1058 a885 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a885 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?46 
arguments: v769 i1044 
=== Succesors ===
next: v1058 
=== Usages ===
v1058 a901 
=== Predecessor ===
v861 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?46 arguments: v769 i1044 #next: v1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-234865|0xfffffffffffc6a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?46 
object: a885 
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
a885 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?46 object: a885 #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1120 
lastLocationAccess: - 
value: j858 
stateAfter: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1120 lastLocationAccess: - value: j858 stateAfter: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j903 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
address: v1126 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1126 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j903 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
address: v1127 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1127 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j903 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
address: v1128 
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1128 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1122 
lastLocationAccess: - 
value: j782 
stateAfter: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1122 lastLocationAccess: - value: j782 stateAfter: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1129 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1129 
lastLocationAccess: - 
value: v1004 
stateAfter: - 
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1129 lastLocationAccess: - value: v1004 stateAfter: - #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1123 
lastLocationAccess: - 
value: i1044 
stateAfter: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1123 lastLocationAccess: - value: i1044 stateAfter: - #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j857 
y: j816 
=== Succesors ===
=== Usages ===
v865 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j857 y: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j819 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j893 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v871 
values: j230 j881 
=== Succesors ===
=== Usages ===
v873 v1124 j881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v871 values: j230 j881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v870 
=== Succesors ===
next: v879 
=== Usages ===
j872 v878 v882 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v870 #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j857 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j872 y: j857  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v874 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v874 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: j872 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1124 
lastLocationAccess: - 
value: j725 
stateAfter: - 
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1124 lastLocationAccess: - value: j725 stateAfter: - #next: v882  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
=== Inputs ===
x: j872 
y: j818 
=== Succesors ===
=== Usages ===
j872 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j872 y: j818  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v871 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v871 
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v871 #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1125 
lastLocationAccess: - 
length: j893 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1125 lastLocationAccess: - length: j893 #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v869 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v877 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v877 #next: v883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a884 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a884 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j903 
=== Succesors ===
next: v887 
=== Usages ===
a901 
=== Predecessor ===
v883 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j903 #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
a884 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v888 
values: a884 a885 
=== Succesors ===
=== Usages ===
v1096 v1097 a210 v1080 v1081 v1090 v1091 v1093 v765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v888 values: a884 a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v887 v889 
=== Succesors ===
next: v763 
=== Usages ===
a901 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v887 v889 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v213 v763 v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
precise: true
stamp: void
=== Inputs ===
address: v1075 
value: - 
stateBefore: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1075 value: - stateBefore: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a901 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.locals
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
lastLocationAccess: - 
value: a210 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 lastLocationAccess: - value: a210 stateAfter: - #next: v765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
precise: false
stamp: void
=== Inputs ===
address: v1075 
value: a901 
object: a1 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1075 value: a901 object: a1 #next: v993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: j924 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j924 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j975 
=== Usages ===
v1130 v1131 
=== Predecessor ===
v993 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j924 
index: - 
=== Succesors ===
=== Usages ===
j975 v977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j924 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j975 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
lastLocationAccess: - 
=== Succesors ===
next: j976 
=== Usages ===
j930 v1132 v1133 v1134 a956 v1135 v1139 v1136 v1137 v1138 
=== Predecessor ===
j924 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1130 lastLocationAccess: - #next: j976  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j924 
index: - 
=== Succesors ===
=== Usages ===
j976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j924 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1131 
lastLocationAccess: - 
=== Succesors ===
next: v934 
=== Usages ===
v931 
=== Predecessor ===
j975 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1131 lastLocationAccess: - #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid j927 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1045 
=== Succesors ===
=== Usages ===
j928 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1045  <|@  <|@
f <@~|@floating>@ <|@
tid j928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j927 
y: i228 
=== Succesors ===
=== Usages ===
j964 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j927 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j928 
y: j814 
=== Succesors ===
=== Usages ===
j929 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j928 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j964 
y: j775 
=== Succesors ===
=== Usages ===
j930 v945 j965 v1136 v1137 v1138 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j964 y: j775  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
=== Inputs ===
x: j929 
y: j975 
=== Succesors ===
=== Usages ===
v931 v977 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j929 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j976 
y: j930 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j976 y: j930  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v931 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
j976 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v931 #trueSuccessor: v933 #falseSuccessor: v932  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: a957 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a957  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
sourceFile: Matcher.java
sourceLine: 253
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i59 
=== Succesors ===
=== Usages ===
v1060 a957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i59  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a957 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?50 
arguments: v923 i1045 
=== Succesors ===
next: v1060 
=== Usages ===
v1060 a973 
=== Predecessor ===
v933 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?50 arguments: v923 i1045 #next: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-253297|0xfffffffffffc228f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a957 
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
a957 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a957 #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
lastLocationAccess: - 
value: j930 
stateAfter: - 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1130 lastLocationAccess: - value: j930 stateAfter: - #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: j975 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
address: v1136 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1136 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: j975 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
address: v1137 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1137 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: j975 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
address: v1138 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1138 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1132 
lastLocationAccess: - 
value: j782 
stateAfter: - 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1132 lastLocationAccess: - value: j782 stateAfter: - #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1139 
lastLocationAccess: - 
value: v1005 
stateAfter: - 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1139 lastLocationAccess: - value: v1005 stateAfter: - #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1133 
lastLocationAccess: - 
value: i1045 
stateAfter: - 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1133 lastLocationAccess: - value: i1045 stateAfter: - #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j929 
y: j816 
=== Succesors ===
=== Usages ===
v937 v941 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j929 y: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j965 
y: j819 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j965 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v939 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v939 #falseSuccessor: v938  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j944 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v943 
values: j230 j953 
=== Succesors ===
=== Usages ===
v945 v1134 j953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v943 values: j230 j953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v942 
=== Succesors ===
next: v951 
=== Usages ===
j944 v950 v954 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v942 #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j944 
y: j929 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j944 y: j929  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v945 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v945 #trueSuccessor: v946 #falseSuccessor: v950  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: j944 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: j944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1134 
lastLocationAccess: - 
value: j725 
stateAfter: - 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1134 lastLocationAccess: - value: j725 stateAfter: - #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
=== Inputs ===
x: j944 
y: j818 
=== Succesors ===
=== Usages ===
j944 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j944 y: j818  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
loopBegin: v943 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v943  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v943 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v943 #next: v949  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1135 
lastLocationAccess: - 
length: j965 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1135 lastLocationAccess: - length: j965 #next: v947  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
v941 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v947 v949 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v947 v949 #next: v955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: a956 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a956 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j975 
=== Succesors ===
next: v959 
=== Usages ===
a973 
=== Predecessor ===
v955 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j975 #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
a956 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v960 
values: a956 a957 
=== Succesors ===
=== Usages ===
a217 v768 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v960 values: a956 a957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v961 
=== Succesors ===
next: v766 
=== Usages ===
a973 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v961 #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v220 v766 v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
precise: true
stamp: void
=== Inputs ===
address: v1077 
value: - 
stateBefore: - 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1077 value: - stateBefore: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid a217 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
op: Compress
stamp: n!# java.util.regex.IntHashSet[]
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.localsPos
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
lastLocationAccess: - 
value: a217 
stateAfter: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1077 lastLocationAccess: - value: a217 stateAfter: - #next: v768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
precise: false
stamp: void
=== Inputs ===
address: v1077 
value: a973 
object: a1 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1077 value: a973 object: a1 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647]
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
x: i59 
y: i286 
=== Succesors ===
=== Usages ===
v360 v130 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i59 y: i286  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i565 i563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 v474 i562 i564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: PROFILED designatedSuccessorProbability: 0.04763539526237903
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v128 #falseSuccessor: v129  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i228 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1014 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v1011 #falseSuccessor: v1014  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i60 
y: i8 
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i60 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
value: i345 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j319 
y: j312 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j319 y: j312  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1019 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v1022 #falseSuccessor: v1019  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1022 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1009 v1010 
=== Succesors ===
next: v360 
=== Usages ===
v327 v424 v669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1009 v1010 #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v359 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -73755
stableDimension: 0
stamp: i32 [-73755]
stampKind: i32
value: int[-73755|0xfffffffffffedfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
v233 
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a830 
index: - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v357 
address: v1078 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v357 address: v1078 lastLocationAccess: - value: i8 stateAfter: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i430 
=== Succesors ===
=== Usages ===
i432 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
condition: v431 
trueValue: i60 
falseValue: i228 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v431 trueValue: i60 falseValue: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i20 i80 
=== Succesors ===
=== Usages ===
i80 v73 j290 i396 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v68 values: i20 i80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v67 
=== Succesors ===
next: v77 
=== Usages ===
i144 v74 v81 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v67 #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i144 
y: i432 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i144 y: i432  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v76 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
v327 
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1008 v76 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1008 v76  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j290 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v327 
address: v1079 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v327 address: v1079 lastLocationAccess: - value: i8 stateAfter: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i144 
y: i20 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i144 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v68  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i60 
y: i691 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i60 y: i691  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v389 
values: i144 i688 
=== Succesors ===
=== Usages ===
v390 i394 j402 i416 i516 i562 i563 i604 i606 i608 i609 i676 i677 i679 i681 i683 i685 i687 i688 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v389 values: i144 i688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 68
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v405 
=== Succesors ===
next: v393 
=== Usages ===
v391 v395 i396 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v405 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i692 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i692  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.19971162262162956
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v392 #falseSuccessor: v391  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
v669 
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1008 v392 
=== Succesors ===
=== Usages ===
v597 v622 v488 v628 v591 v635 v530 v641 v584 v649 v401 v655 v578 v661 v536 v667 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1008 v392  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i396 
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j402 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1088 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1088 lastLocationAccess: - value: i8 stateAfter: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i20 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i394 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i394  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j489 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1092 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1092 lastLocationAccess: - value: i8 stateAfter: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i228 
=== Succesors ===
=== Usages ===
j531 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j531 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1094 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1094 lastLocationAccess: - value: i8 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i430 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i562 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i562  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j537 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1095 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1095 lastLocationAccess: - value: i8 stateAfter: - #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i540 
=== Succesors ===
=== Usages ===
j579 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i540  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i563 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i563  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j579 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1098 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1098 lastLocationAccess: - value: i8 stateAfter: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i603 
=== Succesors ===
=== Usages ===
j585 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i603  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i604 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i604  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j585 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1099 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1099 lastLocationAccess: - value: i8 stateAfter: - #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid i605 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i605 
=== Succesors ===
=== Usages ===
j592 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i605  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i606 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i606  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j592 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1100 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1100 lastLocationAccess: - value: i8 stateAfter: - #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i607 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i607 
=== Succesors ===
=== Usages ===
j598 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i607  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i608 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j598 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1101 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1101 lastLocationAccess: - value: i8 stateAfter: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid i602 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i602 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i602  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i609 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i609  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j623 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1102 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1102 lastLocationAccess: - value: i8 stateAfter: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i676 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i675 
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i675  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i676 
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i676  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j629 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1103 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1103 lastLocationAccess: - value: i8 stateAfter: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i29 
=== Succesors ===
=== Usages ===
j636 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i677 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i677  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j636 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1104 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1104 lastLocationAccess: - value: i8 stateAfter: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i678 
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i678  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i679 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j642 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1105 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1105 lastLocationAccess: - value: i8 stateAfter: - #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i680 
=== Succesors ===
=== Usages ===
j650 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid j650 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i681 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j650 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1106 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1106 lastLocationAccess: - value: i8 stateAfter: - #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i682 
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i683 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i683  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j656 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1107 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1107 lastLocationAccess: - value: i8 stateAfter: - #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i684 
=== Succesors ===
=== Usages ===
j662 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i684  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i685 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i685  <|@  <|@
f <@~|@floating>@ <|@
tid v1108 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j662 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1108 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1108 lastLocationAccess: - value: i8 stateAfter: - #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i686 
=== Succesors ===
=== Usages ===
j668 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i686  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i687 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i687  <|@  <|@
f <@~|@floating>@ <|@
tid v1109 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j668 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1109 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1109 lastLocationAccess: - value: i8 stateAfter: - #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i688 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i674 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v389 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v389  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v389 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v389 #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v409 
values: i396 i414 
=== Succesors ===
=== Usages ===
v410 i414 j422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v409 values: i396 i414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 68
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v425 
=== Succesors ===
next: v413 
=== Usages ===
v411 v415 i416 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v425 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i60 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v410 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v410 #trueSuccessor: v412 #falseSuccessor: v411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
v424 
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1008 v412 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1008 v412  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j422 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v424 
address: v1089 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v424 address: v1089 lastLocationAccess: - value: i8 stateAfter: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i416 
y: i20 
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i416 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v409 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v409 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v409 #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v138 v139 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v138 v139 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1044 
y: i5 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1044 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: PROFILED designatedSuccessorProbability: 0.14455854068526564
stamp: void
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v147 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v147 #falseSuccessor: v148  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1044 
y: i228 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1044 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v1027 #falseSuccessor: v1030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
v1027 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1044 
y: i8 
=== Succesors ===
=== Usages ===
j334 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1044 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i348 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i348  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j334 
y: j328 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j334 y: j328  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1035 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v1038 #falseSuccessor: v1035  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1025 v1026 
=== Succesors ===
next: v249 
=== Usages ===
v342 v468 v560 v249 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1025 v1026 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a901 
index: - 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v1024 
address: v1080 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1024 address: v1080 lastLocationAccess: - value: i8 stateAfter: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1044 
y: i430 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1044 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v474 
trueValue: i1044 
falseValue: i228 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v474 trueValue: i1044 falseValue: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v83 
values: i20 i95 
=== Succesors ===
=== Usages ===
i95 v88 j294 i440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v83 values: i20 i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v82 
=== Succesors ===
next: v92 
=== Usages ===
i163 v89 v96 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v82 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i475 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i163 y: i475  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v91 #falseSuccessor: v89  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
v342 
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1024 v91 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1024 v91  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i163 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j294 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v342 
address: v1081 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v342 address: v1081 lastLocationAccess: - value: i8 stateAfter: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i163 
y: i20 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i163 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v83 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v83 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1044 
y: i694 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1044 y: i694  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v433 
values: i163 i565 
=== Succesors ===
=== Usages ===
v434 i438 j446 i460 i517 i564 i565 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v433 values: i163 i565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 83
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v449 
=== Succesors ===
next: v437 
=== Usages ===
v435 v439 i440 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v449 #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i440 
y: i695 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i440 y: i695  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.3240517437578174
stamp: void
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v436 #falseSuccessor: v435  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
v560 
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1024 v436 
=== Succesors ===
=== Usages ===
v508 v552 v445 v558 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1024 v436  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i440 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j446 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1090 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1090 lastLocationAccess: - value: i8 stateAfter: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i20 
=== Succesors ===
=== Usages ===
j509 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i438 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i438  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j509 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1093 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1093 lastLocationAccess: - value: i8 stateAfter: - #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i228 
=== Succesors ===
=== Usages ===
j553 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i517 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j553 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1096 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1096 lastLocationAccess: - value: i8 stateAfter: - #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid i564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i430 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i564 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i564  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j559 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1097 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1097 lastLocationAccess: - value: i8 stateAfter: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i540 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i540  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v433 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v433 
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v433 #next: v469  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v453 
values: i440 i458 
=== Succesors ===
=== Usages ===
v454 i458 j466 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v453 values: i440 i458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 83
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v469 
=== Succesors ===
next: v457 
=== Usages ===
v455 v459 i460 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v469 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i1044 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i460 y: i1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v456 #falseSuccessor: v455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
v468 
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1024 v456 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1024 v456  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i460 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i460  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j466 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v468 
address: v1091 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v468 address: v1091 lastLocationAccess: - value: i8 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i460 
y: i20 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i460 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v453 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v453 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v453 #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v158 
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v158 #next: v1046  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?161 
values: a1 
=== Succesors ===
=== Usages ===
v746 v1046 i1048 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?161 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-67339|0xfffffffffffef8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?162 
guard: - 
address: v1140 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
v1007 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?162 guard: - address: v1140 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1046 
y: v1006 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1046 y: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v373 #falseSuccessor: v375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1047 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1047  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1047 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
lastLocationAccess: - 
=== Succesors ===
next: i1048 
=== Usages ===
v1084 
=== Predecessor ===
v373 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1083 lastLocationAccess: - #next: i1048  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1047 
=== Succesors ===
=== Usages ===
i1048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1047  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1048 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-68875|0xfffffffffffef2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?162 
guard: - 
address: v1084 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
i123 
=== Predecessor ===
a1047 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?162 guard: - address: v1084 lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1045 
y: i5 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1045 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
i1048 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v385 #falseSuccessor: v386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: i1049 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 lastLocationAccess: - value: i5 stateAfter: - #next: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1049 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
=== Succesors ===
next: v277 
=== Usages ===
i275 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1049 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1048 
y: i275 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1048 y: i275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
value: i123 
stateAfter: - 
=== Succesors ===
next: i1050 
=== Usages ===
=== Predecessor ===
i1049 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - value: i123 stateAfter: - #next: i1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1050 v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
i108 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i1050 
y: i20 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1050 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
value: i108 
stateAfter: - 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - value: i108 stateAfter: - #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:257) [bci: 94]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i753 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -98323
stableDimension: 0
stamp: i32 [-98323]
stampKind: i32
value: int[-98323|0xfffffffffffe7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -67635
stableDimension: 0
stamp: i32 [-67635]
stampKind: i32
value: int[-67635|0xfffffffffffef7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [-98323 - -67635] bits:1...10x111x11111x01101
valueDescription: i32
=== Inputs ===
merge: v741 
values: i750 i753 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v741 values: i750 i753  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v741 
values: j751 j214 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v741 values: j751 j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v749 v752 
=== Succesors ===
next: v746 
=== Usages ===
i744 j745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v749 v752 #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateBefore: ?162 
actionAndReason: i744 
speculation: j745 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?162 actionAndReason: i744 speculation: j745  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1053  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?142 
values: a1 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?142 values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 251
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0x2f363014]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?143 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1035 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid j731 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 1304
stableDimension: 0
stamp: i64 [1304]
stampKind: i64
value: long[1304|0x518]
=== Inputs ===
=== Succesors ===
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -60187
stableDimension: 0
stamp: i32 [-60187]
stampKind: i32
value: int[-60187|0xffffffffffff14e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [-73755 - -60187] bits:1...1xxx01x1xx11100101
valueDescription: i32
=== Inputs ===
merge: v722 
values: i724 i730 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v722 values: i724 i730  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i64 [0 - 1304] bits:0...0x0x000xx000
valueDescription: i64
=== Inputs ===
merge: v722 
values: j725 j731 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v722 values: j725 j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v723 v729 
=== Succesors ===
next: v728 
=== Usages ===
i726 j727 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v723 v729 #next: v728  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 89
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i59 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateBefore: ?54 
actionAndReason: i726 
speculation: j727 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?54 actionAndReason: i726 speculation: j727  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: i1043 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: i1043  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.regex.Matcher
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v1063 ?46 v1064 v1075 v1065 ?50 v1066 v1077 v1067 v1087 v1068 v1082 v1069 v1086 v1070 ?143 v1071 ?27 ?162 ?54 v1073 v756 v759 v762 v765 v768 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1051 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: a java.lang.CharSequence
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 a195 ?27 v759 v1085 v1140 v1083 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 245
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a1051 a3 
=== Succesors ===
=== Usages ===
i1043 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a1051 a3  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# java.util.regex.Pattern
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1074 a191 v756 ?27 v1076 ?54 ?50 ?46 v1072 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1072 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1043 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1043 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-51211|0xffffffffffff37f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.capturingGroupCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 50]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?4 
guard: - 
address: v1072 
lastLocationAccess: - 
=== Succesors ===
next: i1044 
=== Usages ===
i59 v31 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?4 guard: - address: v1072 lastLocationAccess: - #next: i1044  <|@  <|@
f <@~|@floating>@ <|@
tid v1074 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1044 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1044 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 70]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1074 
lastLocationAccess: - 
=== Succesors ===
next: i1045 
=== Usages ===
v910 i695 v454 v474 j328 a885 i475 v166 i348 v340 
=== Predecessor ===
i1043 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1074 lastLocationAccess: - #next: i1045  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
result [v1|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i1045 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1045 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Pattern.localTCNCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1076 
lastLocationAccess: - 
=== Succesors ===
next: v170 
=== Usages ===
v982 v112 j927 a957 
=== Predecessor ===
i1044 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1076 lastLocationAccess: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v1063 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:154) [bci: 5]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 v176 v182 v112 v166 v262 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.acceptMode
location: Matcher.acceptMode
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:154) [bci: 6]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1063 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
i1045 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1063 lastLocationAccess: - value: i5 stateAfter: - #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 10]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 v179 v249 v233 v241 v257 i345 i348 v401 v421 v445 v465 v488 v508 v530 v536 v552 v558 v578 v584 v591 v597 v622 v628 v635 v641 v649 v655 v661 v667 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.first
location: Matcher.first
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 11]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1064 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1064 lastLocationAccess: - value: i8 stateAfter: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v1065 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.last
location: Matcher.last
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:162) [bci: 16]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1065 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1065 lastLocationAccess: - value: i5 stateAfter: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v1066 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.oldLast
location: Matcher.oldLast
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:167) [bci: 21]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1066 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1066 lastLocationAccess: - value: i8 stateAfter: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v1067 <|@
result [v0|QWORD[.] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.lastAppendPosition
location: Matcher.lastAppendPosition
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:172) [bci: 26]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1067 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1067 lastLocationAccess: - value: i5 stateAfter: - #next: v186  <|@  <|@
f <@~|@floating>@ <|@
tid v1068 <|@
result [v0|QWORD[.] + 50] <|@
d <@d|@=== Debug Properties ===
displacement: 50
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i282 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 31]
rawvalue: 0
stableDimension: 0
stamp: i8 [0]
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.transparentBounds
location: Matcher.transparentBounds
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:221) [bci: 31]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1068 
lastLocationAccess: - 
value: i282 
stateAfter: - 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1068 lastLocationAccess: - value: i282 stateAfter: - #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid v1069 <|@
result [v0|QWORD[.] + 51] <|@
d <@d|@=== Debug Properties ===
displacement: 51
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i283 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v190 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.anchoringBounds
location: Matcher.anchoringBounds
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 36]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1069 
lastLocationAccess: - 
value: i283 
stateAfter: - 
=== Succesors ===
next: v754 
=== Usages ===
=== Predecessor ===
v186 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1069 lastLocationAccess: - value: i283 stateAfter: - #next: v754  <|@  <|@
f <@~|@floating>@ <|@
tid v1070 <|@
result [v0|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v194 v754 v756 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v754 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
precise: true
stamp: void
=== Inputs ===
address: v1070 
value: - 
stateBefore: - 
=== Succesors ===
next: v194 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1070 value: - stateBefore: - #next: v194  <|@  <|@
f <@~|@floating>@ <|@
tid a191 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
op: Compress
stamp: n# java.util.regex.Pattern
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.parentPattern
location: Matcher.parentPattern
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1070 
lastLocationAccess: - 
value: a191 
stateAfter: - 
=== Succesors ===
next: v756 
=== Usages ===
=== Predecessor ===
v754 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1070 lastLocationAccess: - value: a191 stateAfter: - #next: v756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v756 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:246) [bci: 41]
precise: false
stamp: void
=== Inputs ===
address: v1070 
value: a2 
object: a1 
=== Succesors ===
next: v757 
=== Usages ===
=== Predecessor ===
v194 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1070 value: a2 object: a1 #next: v757  <|@  <|@
f <@~|@floating>@ <|@
tid v1071 <|@
result [v0|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v198 v757 v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v757 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
precise: true
stamp: void
=== Inputs ===
address: v1071 
value: - 
stateBefore: - 
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
v756 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1071 value: - stateBefore: - #next: v198  <|@  <|@
f <@~|@floating>@ <|@
tid a195 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.text
location: Matcher.text
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1071 
lastLocationAccess: - 
value: a195 
stateAfter: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v757 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1071 lastLocationAccess: - value: a195 stateAfter: - #next: v759  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
precise: false
stamp: void
=== Inputs ===
address: v1071 
value: a3 
object: a1 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v198 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1071 value: a3 object: a1 #next: v850  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: j770 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j770  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j770 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j832 
=== Usages ===
v1110 v1111 
=== Predecessor ===
v850 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j832  <|@  <|@
f <@~|@floating>@ <|@
tid v1110 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
j832 v834 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j832 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1110 
lastLocationAccess: - 
=== Succesors ===
next: j833 
=== Usages ===
j777 v1112 v1113 v1114 a804 v1115 v1119 v1116 v1117 v1118 
=== Predecessor ===
j770 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1110 lastLocationAccess: - #next: j833  <|@  <|@
f <@~|@floating>@ <|@
tid v1111 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j770 
index: - 
=== Succesors ===
=== Usages ===
j833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j770 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1111 
lastLocationAccess: - 
=== Succesors ===
next: v781 
=== Usages ===
v778 
=== Predecessor ===
j832 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1111 lastLocationAccess: - #next: v781  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 53]
rawvalue: 10
stableDimension: 0
stamp: i32 [10]
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i59 v31 i677 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1043 
y: i29 
=== Succesors ===
=== Usages ===
i59 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i1043 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i59 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:2020) [bci: 2]
at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 55]
stamp: i32 [10 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
condition: v31 
trueValue: i29 
falseValue: i1043 
=== Succesors ===
=== Usages ===
?54 ?50 i60 ?46 v287 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v31 trueValue: i29 falseValue: i1043  <|@  <|@
f <@~|@floating>@ <|@
tid i20 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:227) [bci: 35]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i163 i60 i80 i95 i108 i144 i394 i414 i438 i458 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result v19|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 62]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i59 
y: i20 
=== Succesors ===
=== Usages ===
v839 v431 v410 j312 a805 i432 i692 i345 v325 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i59 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i60 
=== Succesors ===
=== Usages ===
v320 j774 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i228 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i517 j774 j928 v325 j856 v340 i475 i516 i432 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j774 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [0 - 17179869176] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j312 
y: i228 
=== Succesors ===
=== Usages ===
j815 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j312 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j814 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j815 j892 j964 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j815 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [23 - 17179869199] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx111
=== Inputs ===
x: j774 
y: j814 
=== Succesors ===
=== Usages ===
j776 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j774 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j775 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j776 j857 j929 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j776 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [0 - 17179869192] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j815 
y: j775 
=== Succesors ===
=== Usages ===
j777 v793 j817 v1116 v1117 v1118 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j815 y: j775  <|@  <|@
f <@~|@floating>@ <|@
tid j777 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
=== Inputs ===
x: j776 
y: j832 
=== Succesors ===
=== Usages ===
v778 v834 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j776 y: j832  <|@  <|@
f <@~|@floating>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j833 
y: j777 
=== Succesors ===
=== Usages ===
v781 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j833 y: j777  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAlignedUnrollable(AllocationSnippets.java:205) [bci: 57]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:184) [bci: 167]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j801 j953 j881 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j725 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j727 v983 v911 v840 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j230 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j792 j944 j872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j816 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j817 j893 j965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j819 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v785 v865 v937 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1004 <|@
result meta{HotSpotType<[I, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[I, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v838 v909 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j782 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v835 v906 v978 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v769 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a805 a885 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v778 
=== Succesors ===
trueSuccessor: v780 
falseSuccessor: v779 
=== Usages ===
=== Predecessor ===
j833 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v778 #trueSuccessor: v780 #falseSuccessor: v779  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a805 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a805  <|@  <|@
tid ?27 <|@
d <@d|@=== Debug Properties ===
bci: 49
bytecode: aload_1
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:247) [bci: 46]
sourceFile: Matcher.java
sourceLine: 250
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 
=== Succesors ===
=== Usages ===
v1056 a805 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a805 <|@
result v26|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?27 
arguments: v769 i60 
=== Succesors ===
next: v1056 
=== Usages ===
v1056 a830 
=== Predecessor ===
v780 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?27 arguments: v769 i60 #next: v1056  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1056 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-216689|0xfffffffffffcb18f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?27 
object: a805 
=== Succesors ===
next: v809 
=== Usages ===
=== Predecessor ===
a805 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?27 object: a805 #next: v809  <|@  <|@
f <@*|@fixed>@ <|@
tid v809 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
v1056 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v834 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v834 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1110 
lastLocationAccess: - 
value: j777 
stateAfter: - 
=== Succesors ===
next: v822 
=== Usages ===
=== Predecessor ===
v779 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1110 lastLocationAccess: - value: j777 stateAfter: - #next: v822  <|@  <|@
f <@~|@floating>@ <|@
tid v1116 <|@
result [v23|QWORD + v16|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: j832 
=== Succesors ===
=== Usages ===
v822 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v822 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
address: v1116 
=== Succesors ===
next: v825 
=== Usages ===
=== Predecessor ===
v834 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1116 #next: v825  <|@  <|@
f <@~|@floating>@ <|@
tid v1117 <|@
result [v23|QWORD + v16|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: j832 
=== Succesors ===
=== Usages ===
v825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v825 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
address: v1117 
=== Succesors ===
next: v828 
=== Usages ===
=== Predecessor ===
v822 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1117 #next: v828  <|@  <|@
f <@~|@floating>@ <|@
tid v1118 <|@
result [v23|QWORD + v16|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: j832 
=== Succesors ===
=== Usages ===
v828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: j832  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v828 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
address: v1118 
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v825 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1118 #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v1112 <|@
result [v16|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1112 
lastLocationAccess: - 
value: j782 
stateAfter: - 
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
v828 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1112 lastLocationAccess: - value: j782 stateAfter: - #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v1119 <|@
result [v16|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1119 
lastLocationAccess: - 
value: v1004 
stateAfter: - 
=== Succesors ===
next: v839 
=== Usages ===
=== Predecessor ===
v835 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1119 lastLocationAccess: - value: v1004 stateAfter: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v1113 <|@
result [v16|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1113 
lastLocationAccess: - 
value: i60 
stateAfter: - 
=== Succesors ===
next: v788 
=== Usages ===
=== Predecessor ===
v838 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1113 lastLocationAccess: - value: i60 stateAfter: - #next: v788  <|@  <|@
f <@~|@floating>@ <|@
tid j817 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64 [-16 - 17179869176] bits:x...x000
=== Inputs ===
x: j776 
y: j816 
=== Succesors ===
=== Usages ===
v785 v789 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j776 y: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v785 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j817 
y: j819 
=== Succesors ===
=== Usages ===
v788 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j817 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v788 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v785 
=== Succesors ===
trueSuccessor: v787 
falseSuccessor: v786 
=== Usages ===
=== Predecessor ===
v839 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v785 #trueSuccessor: v787 #falseSuccessor: v786  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v787 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v790 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v790  <|@  <|@
f <@*|@fixed>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v791 
=== Predecessor ===
v787 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j792 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v791 
values: j230 j801 
=== Succesors ===
=== Usages ===
v793 v1114 j801 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v791 values: j230 j801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v790 
=== Succesors ===
next: v799 
=== Usages ===
j792 v798 v802 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v790 #next: v799  <|@  <|@
f <@~|@floating>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j792 
y: j776 
=== Succesors ===
=== Usages ===
v799 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j792 y: j776  <|@  <|@
f <@*|@fixed>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v793 
=== Succesors ===
trueSuccessor: v794 
falseSuccessor: v798 
=== Usages ===
=== Predecessor ===
v791 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v793 #trueSuccessor: v794 #falseSuccessor: v798  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v840 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid v1114 <|@
result [v16|QWORD + v28|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: j792 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: j792  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1114 
lastLocationAccess: - 
value: j725 
stateAfter: - 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1114 lastLocationAccess: - value: j725 stateAfter: - #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid j801 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: i64
=== Inputs ===
x: j792 
y: j818 
=== Succesors ===
=== Usages ===
j792 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j792 y: j818  <|@  <|@
f <@*|@fixed>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
loopBegin: v791 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v791  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v798 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v791 
=== Succesors ===
next: v797 
=== Usages ===
=== Predecessor ===
v799 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v791 #next: v797  <|@  <|@
f <@*|@fixed>@ <|@
tid v797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v798 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: v789 
=== Usages ===
=== Predecessor ===
v788 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v789  <|@  <|@
f <@~|@floating>@ <|@
tid v1115 <|@
result [v16|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j832 
index: - 
=== Succesors ===
=== Usages ===
v789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j832 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1115 
lastLocationAccess: - 
length: j817 
=== Succesors ===
next: v795 
=== Usages ===
=== Predecessor ===
v786 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1115 lastLocationAccess: - length: j817 #next: v795  <|@  <|@
f <@*|@fixed>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v796 
=== Predecessor ===
v789 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v796 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v795 v797 
=== Succesors ===
next: v803 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v795 v797 #next: v803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v803 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
next: a804 
=== Usages ===
=== Predecessor ===
v796 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a804  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a804 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j832 
=== Succesors ===
next: v807 
=== Usages ===
a830 
=== Predecessor ===
v803 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j832 #next: v807  <|@  <|@
f <@*|@fixed>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v808 
=== Predecessor ===
a804 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a830 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v808 
values: a804 a805 
=== Succesors ===
=== Usages ===
v1108 v1109 a204 v1078 v1079 v1088 v1089 v1092 v1094 v1095 v1098 v1099 v1100 v1101 v1102 v1103 v1104 v1105 v1106 v1107 v762 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v808 values: a804 a805  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v808 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 63]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v807 v809 
=== Succesors ===
next: v760 
=== Usages ===
a830 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v807 v809 #next: v760  <|@  <|@
f <@~|@floating>@ <|@
tid v1073 <|@
result [v0|QWORD[.] + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v207 v760 v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
precise: true
stamp: void
=== Inputs ===
address: v1073 
value: - 
stateBefore: - 
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v808 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1073 value: - stateBefore: - #next: v207  <|@  <|@
f <@~|@floating>@ <|@
tid a204 <|@
result v35|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a830 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a830  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.groups
location: Matcher.groups
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1073 
lastLocationAccess: - 
value: a204 
stateAfter: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1073 lastLocationAccess: - value: a204 stateAfter: - #next: v762  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
precise: false
stamp: void
=== Inputs ===
address: v1073 
value: a830 
object: a1 
=== Succesors ===
next: v921 
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1073 value: a830 object: a1 #next: v921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: j852 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j852  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j852 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j903 
=== Usages ===
v1120 v1121 
=== Predecessor ===
v921 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j903  <|@  <|@
f <@~|@floating>@ <|@
tid v1120 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
j903 v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j903 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1120 
lastLocationAccess: - 
=== Succesors ===
next: j904 
=== Usages ===
j858 v1122 v1123 v1124 a884 v1125 v1129 v1126 v1127 v1128 
=== Predecessor ===
j852 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1120 lastLocationAccess: - #next: j904  <|@  <|@
f <@~|@floating>@ <|@
tid v1121 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j852 
index: - 
=== Succesors ===
=== Usages ===
j904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j852 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j904 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1121 
lastLocationAccess: - 
=== Succesors ===
next: v862 
=== Usages ===
v859 
=== Predecessor ===
j903 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1121 lastLocationAccess: - #next: v862  <|@  <|@
f <@~|@floating>@ <|@
tid j328 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1044 
=== Succesors ===
=== Usages ===
v335 j856 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1044  <|@  <|@
f <@~|@floating>@ <|@
tid j856 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j328 
y: i228 
=== Succesors ===
=== Usages ===
j892 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j328 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j892 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j856 
y: j814 
=== Succesors ===
=== Usages ===
j857 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j856 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j857 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j892 
y: j775 
=== Succesors ===
=== Usages ===
j858 v873 j893 v1126 v1127 v1128 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j892 y: j775  <|@  <|@
f <@~|@floating>@ <|@
tid j858 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
=== Inputs ===
x: j857 
y: j903 
=== Succesors ===
=== Usages ===
v859 v905 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j857 y: j903  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j904 
y: j858 
=== Succesors ===
=== Usages ===
v862 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j904 y: j858  <|@  <|@
f <@*|@fixed>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v859 
=== Succesors ===
trueSuccessor: v861 
falseSuccessor: v860 
=== Usages ===
=== Predecessor ===
j904 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v859 #trueSuccessor: v861 #falseSuccessor: v860  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a885 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a885  <|@  <|@
tid ?46 <|@
d <@d|@=== Debug Properties ===
bci: 68
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:251) [bci: 65]
sourceFile: Matcher.java
sourceLine: 252
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i59 
=== Succesors ===
=== Usages ===
v1058 a885 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i59  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a885 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?46 
arguments: v769 i1044 
=== Succesors ===
next: v1058 
=== Usages ===
v1058 a901 
=== Predecessor ===
v861 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?46 arguments: v769 i1044 #next: v1058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-234865|0xfffffffffffc6a8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?46 
object: a885 
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
a885 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?46 object: a885 #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
v1058 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v862 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1120 
lastLocationAccess: - 
value: j858 
stateAfter: - 
=== Succesors ===
next: v896 
=== Usages ===
=== Predecessor ===
v860 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1120 lastLocationAccess: - value: j858 stateAfter: - #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v1126 <|@
result [v42|QWORD + v38|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j903 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
address: v1126 
=== Succesors ===
next: v898 
=== Usages ===
=== Predecessor ===
v905 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1126 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v1127 <|@
result [v42|QWORD + v38|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j903 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
address: v1127 
=== Succesors ===
next: v900 
=== Usages ===
=== Predecessor ===
v896 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1127 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid v1128 <|@
result [v42|QWORD + v38|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j857 
index: j903 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j857 index: j903  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
address: v1128 
=== Succesors ===
next: v906 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1128 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
result [v38|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1122 
lastLocationAccess: - 
value: j782 
stateAfter: - 
=== Succesors ===
next: v909 
=== Usages ===
=== Predecessor ===
v900 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1122 lastLocationAccess: - value: j782 stateAfter: - #next: v909  <|@  <|@
f <@~|@floating>@ <|@
tid v1129 <|@
result [v38|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v909 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1129 
lastLocationAccess: - 
value: v1004 
stateAfter: - 
=== Succesors ===
next: v910 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1129 lastLocationAccess: - value: v1004 stateAfter: - #next: v910  <|@  <|@
f <@~|@floating>@ <|@
tid v1123 <|@
result [v38|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1123 
lastLocationAccess: - 
value: i1044 
stateAfter: - 
=== Succesors ===
next: v868 
=== Usages ===
=== Predecessor ===
v909 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1123 lastLocationAccess: - value: i1044 stateAfter: - #next: v868  <|@  <|@
f <@~|@floating>@ <|@
tid j893 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j857 
y: j816 
=== Succesors ===
=== Usages ===
v865 v869 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j857 y: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j893 
y: j819 
=== Succesors ===
=== Usages ===
v868 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j893 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v865 
=== Succesors ===
trueSuccessor: v867 
falseSuccessor: v866 
=== Usages ===
=== Predecessor ===
v910 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v865 #trueSuccessor: v867 #falseSuccessor: v866  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v870 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v870  <|@  <|@
f <@*|@fixed>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v871 
=== Predecessor ===
v867 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j872 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v871 
values: j230 j881 
=== Succesors ===
=== Usages ===
v873 v1124 j881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v871 values: j230 j881  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v870 
=== Succesors ===
next: v879 
=== Usages ===
j872 v878 v882 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v870 #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j857 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j872 y: j857  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v874 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
v871 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v874 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v911 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v911  <|@  <|@
f <@~|@floating>@ <|@
tid v1124 <|@
result [v38|QWORD + v46|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: j872 
=== Succesors ===
=== Usages ===
v911 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: j872  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1124 
lastLocationAccess: - 
value: j725 
stateAfter: - 
=== Succesors ===
next: v882 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1124 lastLocationAccess: - value: j725 stateAfter: - #next: v882  <|@  <|@
f <@~|@floating>@ <|@
tid j881 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: i64
=== Inputs ===
x: j872 
y: j818 
=== Succesors ===
=== Usages ===
j872 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j872 y: j818  <|@  <|@
f <@*|@fixed>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
loopBegin: v871 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v911 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v871 
=== Succesors ===
next: v877 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v871 #next: v877  <|@  <|@
f <@*|@fixed>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v878 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: v869 
=== Usages ===
=== Predecessor ===
v868 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v869  <|@  <|@
f <@~|@floating>@ <|@
tid v1125 <|@
result [v38|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j903 
index: - 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j903 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1125 
lastLocationAccess: - 
length: j893 
=== Succesors ===
next: v875 
=== Usages ===
=== Predecessor ===
v866 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1125 lastLocationAccess: - length: j893 #next: v875  <|@  <|@
f <@*|@fixed>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v876 
=== Predecessor ===
v869 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v875 v877 
=== Succesors ===
next: v883 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v875 v877 #next: v883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
next: a884 
=== Usages ===
=== Predecessor ===
v876 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a884  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a884 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j903 
=== Succesors ===
next: v887 
=== Usages ===
a901 
=== Predecessor ===
v883 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j903 #next: v887  <|@  <|@
f <@*|@fixed>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
a884 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a901 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v888 
values: a884 a885 
=== Succesors ===
=== Usages ===
v1096 v1097 a210 v1080 v1081 v1090 v1091 v1093 v765 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v888 values: a884 a885  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 73]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v887 v889 
=== Succesors ===
next: v763 
=== Usages ===
a901 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v887 v889 #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v1075 <|@
result [v0|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v213 v763 v765 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
precise: true
stamp: void
=== Inputs ===
address: v1075 
value: - 
stateBefore: - 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1075 value: - stateBefore: - #next: v213  <|@  <|@
f <@~|@floating>@ <|@
tid a210 <|@
result v53|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
op: Compress
stamp: n!# int[]
=== Inputs ===
value: a901 
=== Succesors ===
=== Usages ===
v213 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a901  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.locals
location: Matcher.locals
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1075 
lastLocationAccess: - 
value: a210 
stateAfter: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1075 lastLocationAccess: - value: a210 stateAfter: - #next: v765  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
precise: false
stamp: void
=== Inputs ===
address: v1075 
value: a901 
object: a1 
=== Succesors ===
next: v993 
=== Usages ===
=== Predecessor ===
v213 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1075 value: a901 object: a1 #next: v993  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: j924 
=== Usages ===
=== Predecessor ===
v765 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j924  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j924 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j975 
=== Usages ===
v1130 v1131 
=== Predecessor ===
v993 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v1130 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j924 
index: - 
=== Succesors ===
=== Usages ===
j975 v977 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j924 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j975 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
lastLocationAccess: - 
=== Succesors ===
next: j976 
=== Usages ===
j930 v1132 v1133 v1134 a956 v1135 v1139 v1136 v1137 v1138 
=== Predecessor ===
j924 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1130 lastLocationAccess: - #next: j976  <|@  <|@
f <@~|@floating>@ <|@
tid v1131 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j924 
index: - 
=== Succesors ===
=== Usages ===
j976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j924 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j976 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1131 
lastLocationAccess: - 
=== Succesors ===
next: v934 
=== Usages ===
v931 
=== Predecessor ===
j975 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1131 lastLocationAccess: - #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid j927 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i1045 
=== Succesors ===
=== Usages ===
j928 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i1045  <|@  <|@
f <@~|@floating>@ <|@
tid j928 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j927 
y: i228 
=== Succesors ===
=== Usages ===
j964 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j927 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j964 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j928 
y: j814 
=== Succesors ===
=== Usages ===
j929 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j928 y: j814  <|@  <|@
f <@~|@floating>@ <|@
tid j929 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j964 
y: j775 
=== Succesors ===
=== Usages ===
j930 v945 j965 v1136 v1137 v1138 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j964 y: j775  <|@  <|@
f <@~|@floating>@ <|@
tid j930 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
=== Inputs ===
x: j929 
y: j975 
=== Succesors ===
=== Usages ===
v931 v977 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j929 y: j975  <|@  <|@
f <@~|@floating>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j976 
y: j930 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j976 y: j930  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v931 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v932 
=== Usages ===
=== Predecessor ===
j976 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v931 #trueSuccessor: v933 #falseSuccessor: v932  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: a957 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a957  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 78
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 75]
sourceFile: Matcher.java
sourceLine: 253
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i59 
=== Succesors ===
=== Usages ===
v1060 a957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i59  <|@  <|@
f <@~|@floating>@ <|@
tid v923 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a957 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a957 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?50 
arguments: v923 i1045 
=== Succesors ===
next: v1060 
=== Usages ===
v1060 a973 
=== Predecessor ===
v933 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?50 arguments: v923 i1045 #next: v1060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-253297|0xfffffffffffc228f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?50 
object: a957 
=== Succesors ===
next: v961 
=== Usages ===
=== Predecessor ===
a957 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?50 object: a957 #next: v961  <|@  <|@
f <@*|@fixed>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
v1060 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v977 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v977  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1130 
lastLocationAccess: - 
value: j930 
stateAfter: - 
=== Succesors ===
next: v968 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1130 lastLocationAccess: - value: j930 stateAfter: - #next: v968  <|@  <|@
f <@~|@floating>@ <|@
tid v1136 <|@
result [v60|QWORD + v56|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: j975 
=== Succesors ===
=== Usages ===
v968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
address: v1136 
=== Succesors ===
next: v970 
=== Usages ===
=== Predecessor ===
v977 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1136 #next: v970  <|@  <|@
f <@~|@floating>@ <|@
tid v1137 <|@
result [v60|QWORD + v56|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: j975 
=== Succesors ===
=== Usages ===
v970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
address: v1137 
=== Succesors ===
next: v972 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1137 #next: v972  <|@  <|@
f <@~|@floating>@ <|@
tid v1138 <|@
result [v60|QWORD + v56|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j929 
index: j975 
=== Succesors ===
=== Usages ===
v972 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j929 index: j975  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
address: v1138 
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v970 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v1138 #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid v1132 <|@
result [v56|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1132 
lastLocationAccess: - 
value: j782 
stateAfter: - 
=== Succesors ===
next: v981 
=== Usages ===
=== Predecessor ===
v972 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1132 lastLocationAccess: - value: j782 stateAfter: - #next: v981  <|@  <|@
f <@~|@floating>@ <|@
tid v1139 <|@
result [v56|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v1005 <|@
result meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
rawvalue: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v981 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1139 
lastLocationAccess: - 
value: v1005 
stateAfter: - 
=== Succesors ===
next: v982 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1139 lastLocationAccess: - value: v1005 stateAfter: - #next: v982  <|@  <|@
f <@~|@floating>@ <|@
tid v1133 <|@
result [v56|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v982 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v982 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1133 
lastLocationAccess: - 
value: i1045 
stateAfter: - 
=== Succesors ===
next: v940 
=== Usages ===
=== Predecessor ===
v981 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1133 lastLocationAccess: - value: i1045 stateAfter: - #next: v940  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j929 
y: j816 
=== Succesors ===
=== Usages ===
v937 v941 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j929 y: j816  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j965 
y: j819 
=== Succesors ===
=== Usages ===
v940 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j965 y: j819  <|@  <|@
f <@*|@fixed>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v937 
=== Succesors ===
trueSuccessor: v939 
falseSuccessor: v938 
=== Usages ===
=== Predecessor ===
v982 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v937 #trueSuccessor: v939 #falseSuccessor: v938  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v942 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v942  <|@  <|@
f <@*|@fixed>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v943 
=== Predecessor ===
v939 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j944 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v943 
values: j230 j953 
=== Succesors ===
=== Usages ===
v945 v1134 j953 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v943 values: j230 j953  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v942 
=== Succesors ===
next: v951 
=== Usages ===
j944 v950 v954 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v942 #next: v951  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j944 
y: j929 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j944 y: j929  <|@  <|@
f <@*|@fixed>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v945 
=== Succesors ===
trueSuccessor: v946 
falseSuccessor: v950 
=== Usages ===
=== Predecessor ===
v943 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v945 #trueSuccessor: v946 #falseSuccessor: v950  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v983 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v983  <|@  <|@
f <@~|@floating>@ <|@
tid v1134 <|@
result [v56|QWORD + v65|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: j944 
=== Succesors ===
=== Usages ===
v983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: j944  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1134 
lastLocationAccess: - 
value: j725 
stateAfter: - 
=== Succesors ===
next: v954 
=== Usages ===
=== Predecessor ===
v946 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1134 lastLocationAccess: - value: j725 stateAfter: - #next: v954  <|@  <|@
f <@~|@floating>@ <|@
tid j953 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: i64
=== Inputs ===
x: j944 
y: j818 
=== Succesors ===
=== Usages ===
j944 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j944 y: j818  <|@  <|@
f <@*|@fixed>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
loopBegin: v943 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v983 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v943  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v943 
=== Succesors ===
next: v949 
=== Usages ===
=== Predecessor ===
v951 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v943 #next: v949  <|@  <|@
f <@*|@fixed>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
v950 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: v941 
=== Usages ===
=== Predecessor ===
v940 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v941  <|@  <|@
f <@~|@floating>@ <|@
tid v1135 <|@
result [v56|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j975 
index: - 
=== Succesors ===
=== Usages ===
v941 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1135 
lastLocationAccess: - 
length: j965 
=== Succesors ===
next: v947 
=== Usages ===
=== Predecessor ===
v938 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v1135 lastLocationAccess: - length: j965 #next: v947  <|@  <|@
f <@*|@fixed>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v948 
=== Predecessor ===
v941 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v947 v949 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v947 v949 #next: v955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
next: a956 
=== Usages ===
=== Predecessor ===
v948 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a956  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a956 <|@
result v68|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j975 
=== Succesors ===
next: v959 
=== Usages ===
a973 
=== Predecessor ===
v955 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j975 #next: v959  <|@  <|@
f <@*|@fixed>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v960 
=== Predecessor ===
a956 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a973 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v960 
values: a956 a957 
=== Succesors ===
=== Usages ===
a217 v768 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v960 values: a956 a957  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 83]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v959 v961 
=== Succesors ===
next: v766 
=== Usages ===
a973 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v959 v961 #next: v766  <|@  <|@
f <@~|@floating>@ <|@
tid v1077 <|@
result [v0|QWORD[.] + 68] <|@
d <@d|@=== Debug Properties ===
displacement: 68
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v220 v766 v768 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
precise: true
stamp: void
=== Inputs ===
address: v1077 
value: - 
stateBefore: - 
=== Succesors ===
next: v220 
=== Usages ===
=== Predecessor ===
v960 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v1077 value: - stateBefore: - #next: v220  <|@  <|@
f <@~|@floating>@ <|@
tid a217 <|@
result v72|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
op: Compress
stamp: n!# java.util.regex.IntHashSet[]
=== Inputs ===
value: a973 
=== Succesors ===
=== Usages ===
v220 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a973  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.localsPos
location: Matcher.localsPos
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1077 
lastLocationAccess: - 
value: a217 
stateAfter: - 
=== Succesors ===
next: v768 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1077 lastLocationAccess: - value: a217 stateAfter: - #next: v768  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
precise: false
stamp: void
=== Inputs ===
address: v1077 
value: a973 
object: a1 
=== Succesors ===
next: v130 
=== Usages ===
=== Predecessor ===
v220 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v1077 value: a973 object: a1 #next: v130  <|@  <|@
f <@~|@floating>@ <|@
tid i286 <|@
result int[2147483647|0x7fffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 2147483647
stableDimension: 0
stamp: i32 [2147483647]
stampKind: i32
value: int[2147483647|0x7fffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
x: i59 
y: i286 
=== Succesors ===
=== Usages ===
v360 v130 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: i59 y: i286  <|@  <|@
f <@~|@floating>@ <|@
tid i540 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i32 [4]
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i565 i563 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i430 <|@
result int[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 3
stableDimension: 0
stamp: i32 [3]
stampKind: i32
value: int[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
v431 v474 i562 i564 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: PROFILED designatedSuccessorProbability: 0.04763539526237903
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v129 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v128 #falseSuccessor: v129  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v128 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1015 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1015  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i228 
=== Succesors ===
=== Usages ===
v1015 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1015 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v1011 
falseSuccessor: v1014 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v1011 #falseSuccessor: v1014  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1009 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1009  <|@  <|@
f <@*|@fixed>@ <|@
tid v1009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1011 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1023 
=== Usages ===
=== Predecessor ===
v1015 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1023  <|@  <|@
f <@~|@floating>@ <|@
tid i345 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i60 
y: i8 
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i60 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
value: i345 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i345  <|@  <|@
f <@~|@floating>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j319 
y: j312 
=== Succesors ===
=== Usages ===
v1023 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j319 y: j312  <|@  <|@
f <@*|@fixed>@ <|@
tid v1023 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v320 
=== Succesors ===
trueSuccessor: v1022 
falseSuccessor: v1019 
=== Usages ===
=== Predecessor ===
v1014 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v320 #trueSuccessor: v1022 #falseSuccessor: v1019  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1022 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1010 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1010  <|@  <|@
f <@*|@fixed>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1008 
=== Predecessor ===
v1022 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1009 v1010 
=== Succesors ===
next: v360 
=== Usages ===
v327 v424 v669 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1009 v1010 #next: v360  <|@  <|@
f <@*|@fixed>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v287 
=== Succesors ===
trueSuccessor: v359 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v287 #trueSuccessor: v359 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@~|@floating>@ <|@
tid i724 <|@
result int[-73755|0xfffffffffffedfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -73755
stableDimension: 0
stamp: i32 [-73755]
stampKind: i32
value: int[-73755|0xfffffffffffedfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
v359 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v233 
=== Usages ===
v233 
=== Predecessor ===
v360 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v233  <|@  <|@
f <@~|@floating>@ <|@
tid v1078 <|@
result [v32|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a830 
index: - 
=== Succesors ===
=== Usages ===
v233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v233 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v357 
address: v1078 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v357 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v357 address: v1078 lastLocationAccess: - value: i8 stateAfter: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i60 
y: i430 
=== Succesors ===
=== Usages ===
i432 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i60 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid i432 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
condition: v431 
trueValue: i60 
falseValue: i228 
=== Succesors ===
=== Usages ===
v73 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v431 trueValue: i60 falseValue: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
v233 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i144 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v68 
values: i20 i80 
=== Succesors ===
=== Usages ===
i80 v73 j290 i396 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v68 values: i20 i80  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 13
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v67 
=== Succesors ===
next: v77 
=== Usages ===
i144 v74 v81 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v67 #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i144 
y: i432 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i144 y: i432  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v73 
=== Succesors ===
trueSuccessor: v76 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v73 #trueSuccessor: v76 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v241 
=== Usages ===
v327 
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v241  <|@  <|@
f <@~|@floating>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1008 v76 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1008 v76  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i144 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i144  <|@  <|@
f <@~|@floating>@ <|@
tid v1079 <|@
result [v32|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j290 
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j290  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v327 
address: v1079 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v327 address: v1079 lastLocationAccess: - value: i8 stateAfter: - #next: v81  <|@  <|@
f <@~|@floating>@ <|@
tid i80 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i144 
y: i20 
=== Succesors ===
=== Usages ===
i144 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i144 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v68 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v68  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v68 
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v68 #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid i691 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i32 [-16]
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i692 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i692 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i60 
y: i691 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i60 y: i691  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i396 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v389 
values: i144 i688 
=== Succesors ===
=== Usages ===
v390 i394 j402 i416 i516 i562 i563 i604 i606 i608 i609 i676 i677 i679 i681 i683 i685 i687 i688 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v389 values: i144 i688  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 68
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 16
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v405 
=== Succesors ===
next: v393 
=== Usages ===
v391 v395 i396 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v405 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i396 
y: i692 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i396 y: i692  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.19971162262162956
stamp: void
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v391 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v392 #falseSuccessor: v391  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
v669 
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1008 v392 
=== Succesors ===
=== Usages ===
v597 v622 v488 v628 v591 v635 v530 v641 v584 v649 v401 v655 v578 v661 v536 v667 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1008 v392  <|@  <|@
f <@~|@floating>@ <|@
tid j402 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i396 
=== Succesors ===
=== Usages ===
v1088 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i396  <|@  <|@
f <@~|@floating>@ <|@
tid v1088 <|@
result [v32|QWORD[.] + v81|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j402 
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j402  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1088 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1088 lastLocationAccess: - value: i8 stateAfter: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i394 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i20 
=== Succesors ===
=== Usages ===
j489 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i394 
=== Succesors ===
=== Usages ===
v1092 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i394  <|@  <|@
f <@~|@floating>@ <|@
tid v1092 <|@
result [v32|QWORD[.] + v82|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j489 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j489  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1092 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1092 lastLocationAccess: - value: i8 stateAfter: - #next: v530  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i228 
=== Succesors ===
=== Usages ===
j531 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i516 
=== Succesors ===
=== Usages ===
v1094 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i516  <|@  <|@
f <@~|@floating>@ <|@
tid v1094 <|@
result [v32|QWORD[.] + v83|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j531 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j531  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1094 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1094 lastLocationAccess: - value: i8 stateAfter: - #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid i562 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i430 
=== Succesors ===
=== Usages ===
j537 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid j537 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i562 
=== Succesors ===
=== Usages ===
v1095 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i562  <|@  <|@
f <@~|@floating>@ <|@
tid v1095 <|@
result [v32|QWORD[.] + v84|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j537 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j537  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1095 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v578 
=== Usages ===
=== Predecessor ===
v530 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1095 lastLocationAccess: - value: i8 stateAfter: - #next: v578  <|@  <|@
f <@~|@floating>@ <|@
tid i563 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i540 
=== Succesors ===
=== Usages ===
j579 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i540  <|@  <|@
f <@~|@floating>@ <|@
tid j579 <|@
result v85|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i563 
=== Succesors ===
=== Usages ===
v1098 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i563  <|@  <|@
f <@~|@floating>@ <|@
tid v1098 <|@
result [v32|QWORD[.] + v85|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j579 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1098 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v584 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1098 lastLocationAccess: - value: i8 stateAfter: - #next: v584  <|@  <|@
f <@~|@floating>@ <|@
tid i603 <|@
result int[5|0x5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 5
stableDimension: 0
stamp: i32 [5]
stampKind: i32
value: int[5|0x5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i604 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i604 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i603 
=== Succesors ===
=== Usages ===
j585 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i603  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
result v86|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i604 
=== Succesors ===
=== Usages ===
v1099 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i604  <|@  <|@
f <@~|@floating>@ <|@
tid v1099 <|@
result [v32|QWORD[.] + v86|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j585 
=== Succesors ===
=== Usages ===
v584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1099 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1099 lastLocationAccess: - value: i8 stateAfter: - #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid i605 <|@
result int[6|0x6] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 6
stableDimension: 0
stamp: i32 [6]
stampKind: i32
value: int[6|0x6]
=== Inputs ===
=== Succesors ===
=== Usages ===
i606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i606 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i605 
=== Succesors ===
=== Usages ===
j592 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i605  <|@  <|@
f <@~|@floating>@ <|@
tid j592 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i606 
=== Succesors ===
=== Usages ===
v1100 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i606  <|@  <|@
f <@~|@floating>@ <|@
tid v1100 <|@
result [v32|QWORD[.] + v87|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j592 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j592  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1100 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v584 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1100 lastLocationAccess: - value: i8 stateAfter: - #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid i607 <|@
result int[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 7
stableDimension: 0
stamp: i32 [7]
stampKind: i32
value: int[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i608 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i608 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i607 
=== Succesors ===
=== Usages ===
j598 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i607  <|@  <|@
f <@~|@floating>@ <|@
tid j598 <|@
result v88|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i608 
=== Succesors ===
=== Usages ===
v1101 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i608  <|@  <|@
f <@~|@floating>@ <|@
tid v1101 <|@
result [v32|QWORD[.] + v88|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j598 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j598  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1101 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v622 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1101 lastLocationAccess: - value: i8 stateAfter: - #next: v622  <|@  <|@
f <@~|@floating>@ <|@
tid i602 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i609 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i609 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i602 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i602  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i609 
=== Succesors ===
=== Usages ===
v1102 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i609  <|@  <|@
f <@~|@floating>@ <|@
tid v1102 <|@
result [v32|QWORD[.] + v89|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j623 
=== Succesors ===
=== Usages ===
v622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j623  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1102 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v628 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1102 lastLocationAccess: - value: i8 stateAfter: - #next: v628  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 9
stableDimension: 0
stamp: i32 [9]
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
i676 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i676 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i675 
=== Succesors ===
=== Usages ===
j629 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i675  <|@  <|@
f <@~|@floating>@ <|@
tid j629 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i676 
=== Succesors ===
=== Usages ===
v1103 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i676  <|@  <|@
f <@~|@floating>@ <|@
tid v1103 <|@
result [v32|QWORD[.] + v90|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j629 
=== Succesors ===
=== Usages ===
v628 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j629  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v628 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1103 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v622 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1103 lastLocationAccess: - value: i8 stateAfter: - #next: v635  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i29 
=== Succesors ===
=== Usages ===
j636 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i29  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i677 
=== Succesors ===
=== Usages ===
v1104 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i677  <|@  <|@
f <@~|@floating>@ <|@
tid v1104 <|@
result [v32|QWORD[.] + v91|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j636 
=== Succesors ===
=== Usages ===
v635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1104 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v641 
=== Usages ===
=== Predecessor ===
v628 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1104 lastLocationAccess: - value: i8 stateAfter: - #next: v641  <|@  <|@
f <@~|@floating>@ <|@
tid i678 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 11
stableDimension: 0
stamp: i32 [11]
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
i679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i678 
=== Succesors ===
=== Usages ===
j642 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i678  <|@  <|@
f <@~|@floating>@ <|@
tid j642 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i679 
=== Succesors ===
=== Usages ===
v1105 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i679  <|@  <|@
f <@~|@floating>@ <|@
tid v1105 <|@
result [v32|QWORD[.] + v92|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j642 
=== Succesors ===
=== Usages ===
v641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1105 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v649 
=== Usages ===
=== Predecessor ===
v635 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1105 lastLocationAccess: - value: i8 stateAfter: - #next: v649  <|@  <|@
f <@~|@floating>@ <|@
tid i680 <|@
result int[12|0xc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 12
stableDimension: 0
stamp: i32 [12]
stampKind: i32
value: int[12|0xc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i681 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i680 
=== Succesors ===
=== Usages ===
j650 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i680  <|@  <|@
f <@~|@floating>@ <|@
tid j650 <|@
result v93|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i681 
=== Succesors ===
=== Usages ===
v1106 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i681  <|@  <|@
f <@~|@floating>@ <|@
tid v1106 <|@
result [v32|QWORD[.] + v93|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j650 
=== Succesors ===
=== Usages ===
v649 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1106 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v655 
=== Usages ===
=== Predecessor ===
v641 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1106 lastLocationAccess: - value: i8 stateAfter: - #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid i682 <|@
result int[13|0xd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 13
stableDimension: 0
stamp: i32 [13]
stampKind: i32
value: int[13|0xd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i683 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i683 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i682 
=== Succesors ===
=== Usages ===
j656 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i682  <|@  <|@
f <@~|@floating>@ <|@
tid j656 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i683 
=== Succesors ===
=== Usages ===
v1107 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i683  <|@  <|@
f <@~|@floating>@ <|@
tid v1107 <|@
result [v32|QWORD[.] + v94|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j656 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1107 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v661 
=== Usages ===
=== Predecessor ===
v649 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1107 lastLocationAccess: - value: i8 stateAfter: - #next: v661  <|@  <|@
f <@~|@floating>@ <|@
tid i684 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 14
stableDimension: 0
stamp: i32 [14]
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
i685 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i685 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i684 
=== Succesors ===
=== Usages ===
j662 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i684  <|@  <|@
f <@~|@floating>@ <|@
tid j662 <|@
result v95|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i685 
=== Succesors ===
=== Usages ===
v1108 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i685  <|@  <|@
f <@~|@floating>@ <|@
tid v1108 <|@
result [v32|QWORD[.] + v95|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j662 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j662  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1108 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v667 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1108 lastLocationAccess: - value: i8 stateAfter: - #next: v667  <|@  <|@
f <@~|@floating>@ <|@
tid i686 <|@
result int[15|0xf] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 15
stableDimension: 0
stamp: i32 [15]
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
i687 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i687 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i686 
=== Succesors ===
=== Usages ===
j668 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i686  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i687 
=== Succesors ===
=== Usages ===
v1109 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i687  <|@  <|@
f <@~|@floating>@ <|@
tid v1109 <|@
result [v32|QWORD[.] + v96|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j668 
=== Succesors ===
=== Usages ===
v667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j668  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v669 
address: v1109 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v661 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v669 address: v1109 lastLocationAccess: - value: i8 stateAfter: - #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i674 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i688 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i688 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i396 
y: i674 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i396 y: i674  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v389 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v667 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v389  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v389 
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v389 #next: v425  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i416 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v409 
values: i396 i414 
=== Succesors ===
=== Usages ===
v410 i414 j422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v409 values: i396 i414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 68
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 19.992793163401544
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v425 
=== Succesors ===
next: v413 
=== Usages ===
v411 v415 i416 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v425 #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i416 
y: i60 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i416 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 23]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v410 
=== Succesors ===
trueSuccessor: v412 
falseSuccessor: v411 
=== Usages ===
=== Predecessor ===
v409 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v410 #trueSuccessor: v412 #falseSuccessor: v411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 26]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
v424 
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1008 v412 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1008 v412  <|@  <|@
f <@~|@floating>@ <|@
tid j422 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i416 
=== Succesors ===
=== Usages ===
v1089 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i416  <|@  <|@
f <@~|@floating>@ <|@
tid v1089 <|@
result [v32|QWORD[.] + v98|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a830 
index: j422 
=== Succesors ===
=== Usages ===
v421 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a830 index: j422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v424 
address: v1089 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v412 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v424 address: v1089 lastLocationAccess: - value: i8 stateAfter: - #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid i414 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 33]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i416 
y: i20 
=== Succesors ===
=== Usages ===
i416 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i416 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:451) [bci: 17]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v409 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v421 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v409 
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v409 #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
v411 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v138 v139 
=== Succesors ===
next: v149 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v138 v139 #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1044 
y: i5 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1044 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: PROFILED designatedSuccessorProbability: 0.14455854068526564
stamp: void
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v147 
falseSuccessor: v148 
=== Usages ===
=== Predecessor ===
v137 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v147 #falseSuccessor: v148  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v147 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v148 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1031  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1044 
y: i228 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1044 y: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v1027 
falseSuccessor: v1030 
=== Usages ===
=== Predecessor ===
v148 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v1027 #falseSuccessor: v1030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1025 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1025  <|@  <|@
f <@*|@fixed>@ <|@
tid v1025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
v1027 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1039 
=== Usages ===
=== Predecessor ===
v1031 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1039  <|@  <|@
f <@~|@floating>@ <|@
tid i348 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1044 
y: i8 
=== Succesors ===
=== Usages ===
j334 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1044 y: i8  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i348 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i348  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j334 
y: j328 
=== Succesors ===
=== Usages ===
v1039 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j334 y: j328  <|@  <|@
f <@*|@fixed>@ <|@
tid v1039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v1038 
falseSuccessor: v1035 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v1038 #falseSuccessor: v1035  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1038 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1026 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1026  <|@  <|@
f <@*|@fixed>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1024 
=== Predecessor ===
v1038 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1024 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1025 v1026 
=== Succesors ===
next: v249 
=== Usages ===
v342 v468 v560 v249 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v1025 v1026 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v1080 <|@
result [v50|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a901 
index: - 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v1024 
address: v1080 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v1024 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1024 address: v1080 lastLocationAccess: - value: i8 stateAfter: - #next: v82  <|@  <|@
f <@~|@floating>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1044 
y: i430 
=== Succesors ===
=== Usages ===
i475 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i1044 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid i475 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v474 
trueValue: i1044 
falseValue: i228 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v474 trueValue: i1044 falseValue: i228  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
v249 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i163 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v83 
values: i20 i95 
=== Succesors ===
=== Usages ===
i95 v88 j294 i440 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v83 values: i20 i95  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 32
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: PRE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 2
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v82 
=== Succesors ===
next: v92 
=== Usages ===
i163 v89 v96 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v82 #next: v92  <|@  <|@
f <@~|@floating>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i163 
y: i475 
=== Succesors ===
=== Usages ===
v92 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i163 y: i475  <|@  <|@
f <@*|@fixed>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v88 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v89 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v88 #trueSuccessor: v91 #falseSuccessor: v89  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v257 
=== Usages ===
v342 
=== Predecessor ===
v92 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v257  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1024 v91 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1024 v91  <|@  <|@
f <@~|@floating>@ <|@
tid j294 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i163 
=== Succesors ===
=== Usages ===
v1081 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i163  <|@  <|@
f <@~|@floating>@ <|@
tid v1081 <|@
result [v50|QWORD[.] + v103|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j294 
=== Succesors ===
=== Usages ===
v257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v342 
address: v1081 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v91 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v342 address: v1081 lastLocationAccess: - value: i8 stateAfter: - #next: v96  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v104|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i163 
y: i20 
=== Succesors ===
=== Usages ===
i163 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i163 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v83 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v257 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v83 
=== Succesors ===
next: v449 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v83 #next: v449  <|@  <|@
f <@~|@floating>@ <|@
tid i694 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i32 [-4]
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
i695 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i695 <|@
result v105|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
x: i1044 
y: i694 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1044 y: i694  <|@  <|@
f <@*|@fixed>@ <|@
tid v449 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
v89 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i440 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v433 
values: i163 i565 
=== Succesors ===
=== Usages ===
v434 i438 j446 i460 i517 i564 i565 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v433 values: i163 i565  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 83
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: MAIN_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 4
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v449 
=== Succesors ===
next: v437 
=== Usages ===
v435 v439 i440 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v449 #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i440 
y: i695 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i440 y: i695  <|@  <|@
f <@*|@fixed>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.3240517437578174
stamp: void
=== Inputs ===
condition: v434 
=== Succesors ===
trueSuccessor: v436 
falseSuccessor: v435 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v434 #trueSuccessor: v436 #falseSuccessor: v435  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
v560 
=== Predecessor ===
v437 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1024 v436 
=== Succesors ===
=== Usages ===
v508 v552 v445 v558 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1024 v436  <|@  <|@
f <@~|@floating>@ <|@
tid j446 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i440 
=== Succesors ===
=== Usages ===
v1090 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i440  <|@  <|@
f <@~|@floating>@ <|@
tid v1090 <|@
result [v50|QWORD[.] + v106|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j446 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1090 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1090 lastLocationAccess: - value: i8 stateAfter: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid i438 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i20 
=== Succesors ===
=== Usages ===
j509 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i20  <|@  <|@
f <@~|@floating>@ <|@
tid j509 <|@
result v107|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i438 
=== Succesors ===
=== Usages ===
v1093 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i438  <|@  <|@
f <@~|@floating>@ <|@
tid v1093 <|@
result [v50|QWORD[.] + v107|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j509 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j509  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1093 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v552 
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1093 lastLocationAccess: - value: i8 stateAfter: - #next: v552  <|@  <|@
f <@~|@floating>@ <|@
tid i517 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i228 
=== Succesors ===
=== Usages ===
j553 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i228  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i517 
=== Succesors ===
=== Usages ===
v1096 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i517  <|@  <|@
f <@~|@floating>@ <|@
tid v1096 <|@
result [v50|QWORD[.] + v108|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j553 
=== Succesors ===
=== Usages ===
v552 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1096 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v558 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1096 lastLocationAccess: - value: i8 stateAfter: - #next: v558  <|@  <|@
f <@~|@floating>@ <|@
tid i564 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i430 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i430  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i564 
=== Succesors ===
=== Usages ===
v1097 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i564  <|@  <|@
f <@~|@floating>@ <|@
tid v1097 <|@
result [v50|QWORD[.] + v109|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j559 
=== Succesors ===
=== Usages ===
v558 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v560 
address: v1097 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v552 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v560 address: v1097 lastLocationAccess: - value: i8 stateAfter: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid i565 <|@
result v110|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i440 
y: i540 
=== Succesors ===
=== Usages ===
i440 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i440 y: i540  <|@  <|@
f <@*|@fixed>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v433 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v558 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v433 
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v433 #next: v469  <|@  <|@
f <@*|@fixed>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
v435 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i460 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v453 
values: i440 i458 
=== Succesors ===
=== Usages ===
v454 i458 j466 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v453 values: i440 i458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 83
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 5.917612721182696
loopType: POST_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
osrLoop: false
peelings: 1
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v469 
=== Succesors ===
next: v457 
=== Usages ===
v455 v459 i460 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v469 #next: v457  <|@  <|@
f <@~|@floating>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i460 
y: i1044 
=== Succesors ===
=== Usages ===
v457 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i460 y: i1044  <|@  <|@
f <@*|@fixed>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 47]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 0.01
stamp: void
=== Inputs ===
condition: v454 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v455 
=== Usages ===
=== Predecessor ===
v453 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v454 #trueSuccessor: v456 #falseSuccessor: v455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 50]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v465 
=== Usages ===
v468 
=== Predecessor ===
v457 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v465  <|@  <|@
f <@~|@floating>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
guards: v1024 v456 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@MultiGuard|@jdk.graal.compiler.nodes.extended.MultiGuardNode>@ guards: v1024 v456  <|@  <|@
f <@~|@floating>@ <|@
tid j466 <|@
result v111|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i460 
=== Succesors ===
=== Usages ===
v1091 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i460  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
result [v50|QWORD[.] + v111|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a901 
index: j466 
=== Succesors ===
=== Usages ===
v465 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a901 index: j466  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v465 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: int
location: Array: int
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v468 
address: v1091 
lastLocationAccess: - 
value: i8 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v468 address: v1091 lastLocationAccess: - value: i8 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid i458 <|@
result v112|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 57]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i460 
y: i20 
=== Succesors ===
=== Usages ===
i460 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i460 y: i20  <|@  <|@
f <@*|@fixed>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 41]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
loopBegin: v453 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v465 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v453 
=== Succesors ===
next: v157 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v453 #next: v157  <|@  <|@
f <@*|@fixed>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v156 
=== Predecessor ===
v455 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v157 v158 
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v157 v158 #next: v1046  <|@  <|@
tid ?161 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?162 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?162 <|@
d <@d|@=== Debug Properties ===
bci: 63
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 455
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?161 
values: a1 
=== Succesors ===
=== Usages ===
v746 v1046 i1048 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?161 values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v1140 <|@
result [v2|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-67339|0xfffffffffffef8f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?162 
guard: - 
address: v1140 
lastLocationAccess: - 
=== Succesors ===
next: v376 
=== Usages ===
v1007 
=== Predecessor ===
v156 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?162 guard: - address: v1140 lastLocationAccess: - #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v1006 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1007 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1046 
y: v1006 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v1046 y: v1006  <|@  <|@
f <@*|@fixed>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v373 
falseSuccessor: v375 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v373 #falseSuccessor: v375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: a1047 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a1047  <|@  <|@
f <@~|@floating>@ <|@
tid v1083 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
a1047 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1047 <|@
result v113|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.value
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 1]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1083 
lastLocationAccess: - 
=== Succesors ===
next: i1048 
=== Usages ===
v1084 
=== Predecessor ===
v373 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1083 lastLocationAccess: - #next: i1048  <|@  <|@
f <@~|@floating>@ <|@
tid v1084 <|@
result [v113|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a1047 
=== Succesors ===
=== Usages ===
i1048 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a1047  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1048 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-68875|0xfffffffffffef2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 4]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?162 
guard: - 
address: v1084 
lastLocationAccess: - 
=== Succesors ===
next: v387 
=== Usages ===
i123 
=== Predecessor ===
a1047 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?162 guard: - address: v1084 lastLocationAccess: - #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1045 
y: i5 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i1045 y: i5  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v385 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
i1048 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v385 #falseSuccessor: v386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:459) [bci: 98]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v262 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v262  <|@  <|@
f <@~|@floating>@ <|@
tid v1082 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.from
location: Matcher.from
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:460) [bci: 105]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1082 
lastLocationAccess: - 
value: i5 
stateAfter: - 
=== Succesors ===
next: i1049 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1082 lastLocationAccess: - value: i5 stateAfter: - #next: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid v1085 <|@
result [v2|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a3 
index: - 
=== Succesors ===
=== Usages ===
i1049 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a3 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1049 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: String.coder
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1085 
lastLocationAccess: - 
=== Succesors ===
next: v277 
=== Usages ===
i275 
=== Predecessor ===
v262 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1085 lastLocationAccess: - #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v1086 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i275 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at java.lang.String.coder(String.java:4813) [bci: 7]
at java.lang.String.length(String.java:1519) [bci: 6]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
resultBits: 32
stamp: i32 [-128 - 127]
=== Inputs ===
value: i1049 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i1049  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:1519) [bci: 9]
at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i1048 
y: i275 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i1048 y: i275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.to
location: Matcher.to
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 113]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1086 
lastLocationAccess: - 
value: i123 
stateAfter: - 
=== Succesors ===
next: i1050 
=== Usages ===
=== Predecessor ===
i1049 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1086 lastLocationAccess: - value: i123 stateAfter: - #next: i1050  <|@  <|@
f <@~|@floating>@ <|@
tid v1087 <|@
result [v0|QWORD[.] + 44] <|@
d <@d|@=== Debug Properties ===
displacement: 44
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i1050 v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1050 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 118]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
i108 
=== Predecessor ===
v277 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid i108 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 122]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32
=== Inputs ===
x: i1050 
y: i20 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i1050 y: i20  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Matcher.modCount
location: Matcher.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:462) [bci: 123]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v1087 
lastLocationAccess: - 
value: i108 
stateAfter: - 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
i1050 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v1087 lastLocationAccess: - value: i108 stateAfter: - #next: v58  <|@  <|@
f <@*|@fixed>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:257) [bci: 94]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 71]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 80]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i753 <|@
result int[-98323|0xfffffffffffe7fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -98323
stableDimension: 0
stamp: i32 [-98323]
stampKind: i32
value: int[-98323|0xfffffffffffe7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v749 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v749  <|@  <|@
f <@~|@floating>@ <|@
tid j751 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j745 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i750 <|@
result int[-67635|0xfffffffffffef7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -67635
stableDimension: 0
stamp: i32 [-67635]
stampKind: i32
value: int[-67635|0xfffffffffffef7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i744 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v375 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i744 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [-98323 - -67635] bits:1...10x111x11111x01101
valueDescription: i32
=== Inputs ===
merge: v741 
values: i750 i753 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v741 values: i750 i753  <|@  <|@
f <@~|@floating>@ <|@
tid j745 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v741 
values: j751 j214 
=== Succesors ===
=== Usages ===
v746 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v741 values: j751 j214  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v749 v752 
=== Succesors ===
next: v746 
=== Usages ===
i744 j745 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v749 v752 #next: v746  <|@  <|@
f <@*|@fixed>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.getTextLength(Matcher.java:1808) [bci: 4]
at java.util.regex.Matcher.reset(Matcher.java:461) [bci: 110]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateBefore: ?162 
actionAndReason: i744 
speculation: j745 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?162 actionAndReason: i744 speculation: j745  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1035 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1053 
=== Usages ===
=== Predecessor ===
v1039 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v1053  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 90
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
?143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 39
bytecode: iconst_0
code: ResolvedJavaMethodBytecode<Matcher.reset()>
localsSize: 2
locksSize: 0
sourceFile: Matcher.java
sourceLine: 453
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?142 
values: a1 
=== Succesors ===
=== Usages ===
v1053 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?142 values: a1  <|@  <|@
f <@*|@fixed>@ <|@
tid v1053 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 251
mayConvertToGuard: true
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:454) [bci: 56]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
reason: BoundsCheckException
speculation: {0x0000000000000818[index: 64, len: 24, hash: 0x2f363014]: GuardMovement@3[HotSpotMethod<Matcher.reset()>, 41, BoundsCheckException]}
stamp: void
=== Inputs ===
stateBefore: ?143 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1035 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1019 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v1023 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@~|@floating>@ <|@
tid j731 <|@
result long[1304|0x518] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: 1304
stableDimension: 0
stamp: i64 [1304]
stampKind: i64
value: long[1304|0x518]
=== Inputs ===
=== Succesors ===
=== Usages ===
j727 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i730 <|@
result int[-60187|0xffffffffffff14e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
rawvalue: -60187
stableDimension: 0
stamp: i32 [-60187]
stampKind: i32
value: int[-60187|0xffffffffffff14e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i726 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
v1019 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i726 <|@
result v119|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i32 [-73755 - -60187] bits:1...1xxx01x1xx11100101
valueDescription: i32
=== Inputs ===
merge: v722 
values: i724 i730 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v722 values: i724 i730  <|@  <|@
f <@~|@floating>@ <|@
tid j727 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: i64 [0 - 1304] bits:0...0x0x000xx000
valueDescription: i64
=== Inputs ===
merge: v722 
values: j725 j731 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v722 values: j725 j731  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v723 v729 
=== Succesors ===
next: v728 
=== Usages ===
i726 j727 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v723 v729 #next: v728  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 89
bytecode: aload_0
code: ResolvedJavaMethodBytecode<Matcher.<init>(Pattern, CharSequence)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 86]
sourceFile: Matcher.java
sourceLine: 256
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 - i59 
=== Succesors ===
=== Usages ===
v728 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 - i59  <|@  <|@
f <@*|@fixed>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Matcher.reset(Matcher.java:452) [bci: 32]
at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
stamp: void
=== Inputs ===
stateBefore: ?54 
actionAndReason: i726 
speculation: j727 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?54 actionAndReason: i726 speculation: j727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr   -1  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr   -1  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr   -1  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr   -1  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr   -1  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1894  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1930  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1964  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1894  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1930  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1964  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[1892, 1894[[1928, 1930[[1962, 1964[[1992, 1993[[2018, 2019[[2044, 2045[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v115|d [0, 286[[1846, 1849[[1990, 1993[[2016, 2019[[2042, 2045[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v4|d [0, 284[[1890, 1892[[1926, 1928[[1960, 1962[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 278[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v121|q [0, 282[[1888, 1892[[1924, 1928[[1958, 1962[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1992, 1993[[2018, 2019[[2044, 2045[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [282, 1852[[1856, 2079[[2080, 2111[[2112, 2153[282 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 322 MustHaveRegister 594 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister 1118 MustHaveRegister 1122 MustHaveRegister 1124 MustHaveRegister 1842 MustHaveRegister 1850 MustHaveRegister 1852 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|d [284, 1192[[1866, 2048[[2112, 2153[284 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|q [286, 1844[[1856, 2048[286 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 1792 MustHaveRegister 1808 MustHaveRegister 1844 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [288, 330[288 MustHaveRegister 326 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [290, 1762[[1856, 2048[290 MustHaveRegister 604 ShouldHaveRegister 658 MustHaveRegister 1532 MustHaveRegister 1544 ShouldHaveRegister 1560 ShouldHaveRegister 1602 ShouldHaveRegister 1604 MustHaveRegister 1652 MustHaveRegister 1742 MustHaveRegister 1761 LiveAtLoopEnd 1890 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [292, 1812[[1856, 2048[292 MustHaveRegister 874 ShouldHaveRegister 928 MustHaveRegister 1812 MustHaveRegister 1926 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[v7|q]" v7|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[v8|d]" v8|d v1|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[v10|q]" v10|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[v11|q]" v11|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[v12|q]" v12|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v13|d DWORD "[v13|d]" v13|d v2|q [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[v15|q]" v15|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[v16|q]" v16|q -1 [324, 458[[1996, 2022[324 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 MustHaveRegister 432 MustHaveRegister 437 LiveAtLoopEnd 458 ShouldHaveRegister 2018 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d v3|d [330, 1192[[1866, 2048[[2112, 2153[330 MustHaveRegister 332 ShouldHaveRegister 1126 ShouldHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d -1 [328, 331[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d v17|d [332, 1512[[1866, 2048[332 MustHaveRegister 334 ShouldHaveRegister 388 MustHaveRegister 1138 ShouldHaveRegister 1154 ShouldHaveRegister 1208 ShouldHaveRegister 1210 MustHaveRegister 1258 MustHaveRegister 1492 MustHaveRegister 1511 LiveAtLoopEnd 1960 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|d [334, 1158[[1866, 2048[334 MustHaveRegister 336 MustHaveRegister 1158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v20|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [340, 438[340 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 390 MustHaveRegister 414 MustHaveRegister 437 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [342, 376[342 MustHaveRegister 344 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q rax|q [1964, 1969[1964 MustHaveRegister 1966 MustHaveRegister 1968 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q -1 [390, 394[[1996, 2016[390 MustHaveRegister 392 ShouldHaveRegister 2016 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v29|q [404, 434[414 ShouldHaveRegister 432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v28|q [434, 437[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v16|q [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v31|q [462, 1512[[1866, 1936[[1970, 1996[[2022, 2048[596 MustHaveRegister 600 MustHaveRegister 1206 MustHaveRegister 1238 MustHaveRegister 1243 LiveAtLoopEnd 1406 MustHaveRegister 1410 MustHaveRegister 1414 MustHaveRegister 1418 MustHaveRegister 1422 MustHaveRegister 1426 MustHaveRegister 1430 MustHaveRegister 1434 MustHaveRegister 1438 MustHaveRegister 1442 MustHaveRegister 1446 MustHaveRegister 1450 MustHaveRegister 1454 MustHaveRegister 1458 MustHaveRegister 1462 MustHaveRegister 1466 MustHaveRegister 1471 LiveAtLoopEnd 1506 MustHaveRegister 1511 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[v34|q]" v34|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[v35|d]" v35|d v32|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[v37|q]" v37|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v38|q QWORD "[v38|q]" v38|q -1 [602, 728[[2022, 2048[602 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister 702 MustHaveRegister 707 LiveAtLoopEnd 728 ShouldHaveRegister 2044 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v4|d [604, 1564[[1856, 1936[[1970, 1996[[2022, 2048[604 MustHaveRegister 606 MustHaveRegister 1564 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|q [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [608, 610[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v41|q [610, 708[610 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 660 MustHaveRegister 684 MustHaveRegister 707 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [612, 646[612 MustHaveRegister 614 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [1894, 1899[1894 MustHaveRegister 1896 MustHaveRegister 1898 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [660, 664[[2022, 2042[660 MustHaveRegister 662 ShouldHaveRegister 2042 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v47|q [674, 704[684 ShouldHaveRegister 702 MustHaveRegister 704 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v46|q [704, 707[704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v38|q [728, 731[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v49|q [732, 1762[[1856, 1866[[1900, 1936[[1970, 1996[866 MustHaveRegister 870 MustHaveRegister 1600 MustHaveRegister 1632 MustHaveRegister 1637 LiveAtLoopEnd 1704 MustHaveRegister 1708 MustHaveRegister 1712 MustHaveRegister 1716 MustHaveRegister 1721 LiveAtLoopEnd 1756 MustHaveRegister 1761 LiveAtLoopEnd  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v52|q QWORD "[v52|q]" v52|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v53|d DWORD "[v53|d]" v53|d v50|q [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[v55|q]" v55|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[v56|q]" v56|q -1 [872, 998[[1970, 1996[872 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 924 MustHaveRegister 926 MustHaveRegister 928 MustHaveRegister 972 MustHaveRegister 977 LiveAtLoopEnd 998 ShouldHaveRegister 1992 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v5|d [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v57|q [876, 878[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|q [880, 978[880 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 930 MustHaveRegister 954 MustHaveRegister 977 LiveAtLoopEnd  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v60|q [882, 916[882 MustHaveRegister 884 MustHaveRegister 916 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q -1 [1922, 1924[1922 MustHaveRegister 1924 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q rax|q [1930, 1935[1930 MustHaveRegister 1932 MustHaveRegister 1934 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [930, 934[[1970, 1990[930 MustHaveRegister 932 ShouldHaveRegister 1990 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v66|q [944, 974[954 ShouldHaveRegister 972 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|q [974, 977[974 MustHaveRegister 976 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v56|q [998, 1001[998 MustHaveRegister 1000 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q v68|q [1002, 1125[1120 MustHaveRegister 1124 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[v71|q]" v71|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[v72|d]" v72|d v69|q [1120, 1122[1120 MustHaveRegister 1122 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[v74|q]" v74|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[v75|d]" v75|d v19|d [1154, 1156[1154 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [1156, 1158[1156 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[v77|d]" v77|d -1 [1210, 1244[1210 MustHaveRegister 1224 MustHaveRegister 1243 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d v79|d [1214, 1240[[1244, 1261[1224 ShouldHaveRegister 1238 MustHaveRegister 1240 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[v79|d]" v79|d v78|d [1240, 1243[1240 MustHaveRegister 1242 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[v80|d]" v80|d -1 [1258, 1472[1258 MustHaveRegister 1272 MustHaveRegister 1471 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[v81|d]" v81|d v78|d [1262, 1468[[1472, 1481[1272 ShouldHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister 1412 MustHaveRegister 1416 MustHaveRegister 1420 MustHaveRegister 1424 MustHaveRegister 1428 MustHaveRegister 1432 MustHaveRegister 1436 MustHaveRegister 1440 MustHaveRegister 1444 MustHaveRegister 1448 MustHaveRegister 1452 MustHaveRegister 1456 MustHaveRegister 1460 MustHaveRegister 1464 MustHaveRegister 1468 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[v82|d]" v82|d v81|d [1408, 1410[1408 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[v83|d]" v83|d -1 [1412, 1414[1412 MustHaveRegister 1414 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[v85|d]" v85|d -1 [1420, 1422[1420 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[v86|d]" v86|d -1 [1424, 1426[1424 MustHaveRegister 1426 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[v87|d]" v87|d -1 [1428, 1430[1428 MustHaveRegister 1430 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[v88|d]" v88|d -1 [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[v89|d]" v89|d -1 [1436, 1438[1436 MustHaveRegister 1438 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[v90|d]" v90|d -1 [1440, 1442[1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[v91|d]" v91|d -1 [1444, 1446[1444 MustHaveRegister 1446 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[v92|d]" v92|d -1 [1448, 1450[1448 MustHaveRegister 1450 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[v93|d]" v93|d -1 [1452, 1454[1452 MustHaveRegister 1454 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[v94|d]" v94|d -1 [1456, 1458[1456 MustHaveRegister 1458 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[v95|d]" v95|d -1 [1460, 1462[1460 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[v96|d]" v96|d -1 [1464, 1466[1464 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[v97|d]" v97|d -1 [1468, 1471[1468 MustHaveRegister 1470 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[v98|d]" v98|d v81|d [1482, 1508[1492 ShouldHaveRegister 1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[v99|d]" v99|d v98|d [1508, 1511[1508 MustHaveRegister 1510 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[v100|d]" v100|d v4|d [1560, 1562[1560 MustHaveRegister 1562 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[v101|q]" v101|q -1 [1562, 1564[1562 MustHaveRegister 1564 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[v102|d]" v102|d -1 [1604, 1638[1604 MustHaveRegister 1618 MustHaveRegister 1637 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[v103|d]" v103|d v104|d [1608, 1634[[1638, 1655[1618 ShouldHaveRegister 1632 MustHaveRegister 1634 ShouldHaveRegister 1654 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[v104|d]" v104|d v103|d [1634, 1637[1634 MustHaveRegister 1636 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[v105|d]" v105|d -1 [1652, 1722[1652 MustHaveRegister 1666 MustHaveRegister 1721 LiveAtLoopEnd  "NoSpillStore"
  v106|d DWORD "[v106|d]" v106|d v103|d [1656, 1718[[1722, 1731[1666 ShouldHaveRegister 1704 MustHaveRegister 1706 ShouldHaveRegister 1710 MustHaveRegister 1714 MustHaveRegister 1718 MustHaveRegister 1730 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[v107|d]" v107|d v106|d [1706, 1708[1706 MustHaveRegister 1708 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[v108|d]" v108|d -1 [1710, 1712[1710 MustHaveRegister 1712 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[v109|d]" v109|d -1 [1714, 1716[1714 MustHaveRegister 1716 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[v110|d]" v110|d -1 [1718, 1721[1718 MustHaveRegister 1720 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[v111|d]" v111|d v106|d [1732, 1758[1742 ShouldHaveRegister 1756 MustHaveRegister 1758 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[v112|d]" v112|d v111|d [1758, 1761[1758 MustHaveRegister 1760 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[v113|d]" v113|d -1 [1808, 1810[1808 MustHaveRegister 1810 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[v114|d]" v114|d -1 [1810, 1848[1810 MustHaveRegister 1848 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[v115|d]" v115|d -1 [1844, 1846[1844 MustHaveRegister 1846 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[v116|d]" v116|d v114|d [1848, 1850[1848 MustHaveRegister 1850 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[v117|d]" v117|d -1 [2090, 2106[2106 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[v118|q]" v118|q -1 [2090, 2108[2108 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[v119|d]" v119|d -1 [2132, 2148[2148 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[v120|q]" v120|q -1 [2132, 2150[2150 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[v121|q]" v121|q -1 [1868, 1888[1868 MustHaveRegister 1888 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[v122|q]" v122|q -1 [1938, 1958[1938 MustHaveRegister 1958 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[1892, 1894[[1928, 1930[[1962, 1964[[1992, 1993[[2018, 2019[[2044, 2045[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v115|d [0, 286[[1846, 1849[[1990, 1993[[2016, 2019[[2042, 2045[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v4|d [0, 284[[1890, 1892[[1926, 1928[[1960, 1962[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 278[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v121|q [0, 282[[1888, 1892[[1924, 1928[[1958, 1962[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1992, 1993[[2018, 2019[[2044, 2045[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [282, 1852[[1856, 1970[282 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 322 MustHaveRegister 594 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister 1118 MustHaveRegister 1122 MustHaveRegister 1124 MustHaveRegister 1842 MustHaveRegister 1850 MustHaveRegister 1852 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [284, 732[284 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[r8|q]" v2|q rcx|q [286, 1844[[1856, 2048[286 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 1792 MustHaveRegister 1808 MustHaveRegister 1844 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [288, 330[288 MustHaveRegister 326 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [290, 1762[[1856, 2048[290 MustHaveRegister 604 ShouldHaveRegister 658 MustHaveRegister 1532 MustHaveRegister 1544 ShouldHaveRegister 1560 ShouldHaveRegister 1602 ShouldHaveRegister 1604 MustHaveRegister 1652 MustHaveRegister 1742 MustHaveRegister 1761 LiveAtLoopEnd 1890 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [292, 1812[[1856, 2048[292 MustHaveRegister 874 ShouldHaveRegister 928 MustHaveRegister 1812 MustHaveRegister 1926 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rdx|q]" v7|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[rsi|d]" v8|d v1|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rdx|q]" v10|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[rsi|q]" v11|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[rdx|q]" v12|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v13|d DWORD "[rsi|d]" v13|d v2|q [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[rdx|q]" v15|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[rdx|q]" v16|q -1 [324, 458[[1996, 2022[324 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 MustHaveRegister 432 MustHaveRegister 437 LiveAtLoopEnd 458 ShouldHaveRegister 2018 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rbp|d]" v17|d v3|d [330, 1192[[1866, 2048[[2112, 2153[330 MustHaveRegister 332 ShouldHaveRegister 1126 ShouldHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d -1 [328, 331[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v17|d [332, 1512[[1866, 2048[332 MustHaveRegister 334 ShouldHaveRegister 388 MustHaveRegister 1138 ShouldHaveRegister 1154 ShouldHaveRegister 1208 ShouldHaveRegister 1210 MustHaveRegister 1258 MustHaveRegister 1492 MustHaveRegister 1511 LiveAtLoopEnd 1960 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r14|q]" v20|q v19|d [334, 1158[[1866, 2048[334 MustHaveRegister 336 MustHaveRegister 1158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q v20|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|q [340, 438[340 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 390 MustHaveRegister 414 MustHaveRegister 437 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v23|q [342, 376[342 MustHaveRegister 344 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [1964, 1969[1964 MustHaveRegister 1966 MustHaveRegister 1968 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q -1 [390, 394[[1996, 2016[390 MustHaveRegister 392 ShouldHaveRegister 2016 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v29|q [404, 434[414 ShouldHaveRegister 432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|q [434, 437[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v16|q [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [462, 1512[596 MustHaveRegister 600 MustHaveRegister 1206 MustHaveRegister 1238 MustHaveRegister 1243 LiveAtLoopEnd 1406 MustHaveRegister 1410 MustHaveRegister 1414 MustHaveRegister 1418 MustHaveRegister 1422 MustHaveRegister 1426 MustHaveRegister 1430 MustHaveRegister 1434 MustHaveRegister 1438 MustHaveRegister 1442 MustHaveRegister 1446 MustHaveRegister 1450 MustHaveRegister 1454 MustHaveRegister 1458 MustHaveRegister 1462 MustHaveRegister 1466 MustHaveRegister 1471 LiveAtLoopEnd 1506 MustHaveRegister 1511 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[rsi|q]" v34|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[rcx|d]" v35|d v32|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[rsi|q]" v37|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v38|q QWORD "[rsi|q]" v38|q -1 [602, 728[[2022, 2048[602 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister 702 MustHaveRegister 707 LiveAtLoopEnd 728 ShouldHaveRegister 2044 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdi|q]" v39|q v4|d [604, 1564[[1856, 1936[604 MustHaveRegister 606 MustHaveRegister 1564 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v39|q [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [608, 610[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q v41|q [610, 708[610 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 660 MustHaveRegister 684 MustHaveRegister 707 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [612, 646[612 MustHaveRegister 614 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [1894, 1899[1894 MustHaveRegister 1896 MustHaveRegister 1898 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [660, 664[[2022, 2042[660 MustHaveRegister 662 ShouldHaveRegister 2042 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v47|q [674, 704[684 ShouldHaveRegister 702 MustHaveRegister 704 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [704, 707[704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q v38|q [728, 731[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v49|q [732, 1762[[1856, 1866[866 MustHaveRegister 870 MustHaveRegister 1600 MustHaveRegister 1632 MustHaveRegister 1637 LiveAtLoopEnd 1704 MustHaveRegister 1708 MustHaveRegister 1712 MustHaveRegister 1716 MustHaveRegister 1721 LiveAtLoopEnd 1756 MustHaveRegister 1761 LiveAtLoopEnd  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v52|q QWORD "[rax|q]" v52|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v53|d DWORD "[rcx|d]" v53|d v50|q [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[rax|q]" v55|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[rax|q]" v56|q -1 [872, 998[[1970, 1991[872 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 924 MustHaveRegister 926 MustHaveRegister 928 MustHaveRegister 972 MustHaveRegister 977 LiveAtLoopEnd 998 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rcx|q]" v57|q v5|d [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q v57|q [876, 878[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rcx|q]" v59|q -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|q [880, 978[880 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 930 MustHaveRegister 954 MustHaveRegister 977 LiveAtLoopEnd  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q v60|q [882, 916[882 MustHaveRegister 884 MustHaveRegister 916 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q -1 [1922, 1924[1922 MustHaveRegister 1924 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rax|q]" v63|q rax|q [1930, 1935[1930 MustHaveRegister 1932 MustHaveRegister 1934 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[r11|q]" v64|q -1 [930, 934[[1970, 1990[930 MustHaveRegister 932 ShouldHaveRegister 1990 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[r11|q]" v65|q v66|q [944, 974[954 ShouldHaveRegister 972 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q v65|q [974, 977[974 MustHaveRegister 976 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v56|q [998, 1001[998 MustHaveRegister 1000 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q v68|q [1002, 1125[1120 MustHaveRegister 1124 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[r11|q]" v71|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[rcx|d]" v72|d v69|q [1120, 1122[1120 MustHaveRegister 1122 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rcx|q]" v73|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[r11|q]" v74|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[rcx|d]" v75|d v19|d [1154, 1156[1154 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rcx|q]" v76|q -1 [1156, 1158[1156 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rcx|d]" v77|d -1 [1210, 1244[1210 MustHaveRegister 1224 MustHaveRegister 1243 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d v79|d [1214, 1240[[1244, 1261[1224 ShouldHaveRegister 1238 MustHaveRegister 1240 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rax|d]" v79|d v78|d [1240, 1243[1240 MustHaveRegister 1242 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d -1 [1258, 1472[1258 MustHaveRegister 1272 MustHaveRegister 1471 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[rax|d]" v81|d v78|d [1262, 1468[[1472, 1481[1272 ShouldHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister 1412 MustHaveRegister 1416 MustHaveRegister 1420 MustHaveRegister 1424 MustHaveRegister 1428 MustHaveRegister 1432 MustHaveRegister 1436 MustHaveRegister 1440 MustHaveRegister 1444 MustHaveRegister 1448 MustHaveRegister 1452 MustHaveRegister 1456 MustHaveRegister 1460 MustHaveRegister 1464 MustHaveRegister 1468 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[r11|d]" v82|d v81|d [1408, 1410[1408 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r11|d]" v83|d -1 [1412, 1414[1412 MustHaveRegister 1414 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[r11|d]" v84|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d -1 [1420, 1422[1420 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r11|d]" v86|d -1 [1424, 1426[1424 MustHaveRegister 1426 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [1428, 1430[1428 MustHaveRegister 1430 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r11|d]" v88|d -1 [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r11|d]" v89|d -1 [1436, 1438[1436 MustHaveRegister 1438 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[r11|d]" v90|d -1 [1440, 1442[1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[r11|d]" v91|d -1 [1444, 1446[1444 MustHaveRegister 1446 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[r11|d]" v92|d -1 [1448, 1450[1448 MustHaveRegister 1450 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[r11|d]" v93|d -1 [1452, 1454[1452 MustHaveRegister 1454 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r11|d]" v94|d -1 [1456, 1458[1456 MustHaveRegister 1458 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r11|d]" v95|d -1 [1460, 1462[1460 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[r11|d]" v96|d -1 [1464, 1466[1464 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rax|d]" v97|d -1 [1468, 1471[1468 MustHaveRegister 1470 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v81|d [1482, 1508[1492 ShouldHaveRegister 1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d v98|d [1508, 1511[1508 MustHaveRegister 1510 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rcx|d]" v100|d v4|d [1560, 1562[1560 MustHaveRegister 1562 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[rcx|q]" v101|q -1 [1562, 1564[1562 MustHaveRegister 1564 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rcx|d]" v102|d -1 [1604, 1638[1604 MustHaveRegister 1618 MustHaveRegister 1637 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v104|d [1608, 1634[[1638, 1655[1618 ShouldHaveRegister 1632 MustHaveRegister 1634 ShouldHaveRegister 1654 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rdx|d]" v104|d v103|d [1634, 1637[1634 MustHaveRegister 1636 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d -1 [1652, 1722[1652 MustHaveRegister 1666 MustHaveRegister 1721 LiveAtLoopEnd  "NoSpillStore"
  v106|d DWORD "[rdx|d]" v106|d v103|d [1656, 1718[[1722, 1731[1666 ShouldHaveRegister 1704 MustHaveRegister 1706 ShouldHaveRegister 1710 MustHaveRegister 1714 MustHaveRegister 1718 MustHaveRegister 1730 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d v106|d [1706, 1708[1706 MustHaveRegister 1708 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [1710, 1712[1710 MustHaveRegister 1712 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d -1 [1714, 1716[1714 MustHaveRegister 1716 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rdx|d]" v110|d -1 [1718, 1721[1718 MustHaveRegister 1720 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rdx|d]" v111|d v106|d [1732, 1758[1742 ShouldHaveRegister 1756 MustHaveRegister 1758 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[rdx|d]" v112|d v111|d [1758, 1761[1758 MustHaveRegister 1760 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d -1 [1808, 1810[1808 MustHaveRegister 1810 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[rsi|d]" v114|d -1 [1810, 1848[1810 MustHaveRegister 1848 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[rcx|d]" v115|d -1 [1844, 1846[1844 MustHaveRegister 1846 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rsi|d]" v116|d v114|d [1848, 1850[1848 MustHaveRegister 1850 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[r10|d]" v117|d -1 [2090, 2106[2106 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r11|q]" v118|q -1 [2090, 2108[2108 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d -1 [2132, 2148[2148 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[r11|q]" v120|q -1 [2132, 2150[2150 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[rsi|q]" v121|q -1 [1868, 1888[1868 MustHaveRegister 1888 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rsi|q]" v122|q -1 [1938, 1958[1938 MustHaveRegister 1958 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[rdx|q]" v32|q v32|q [1866, 1889[ "NoSpillStore"
  v124|q QWORD "[rdi|q]" v39|q v39|q [1970, 1991[ "NoSpillStore"
  v125|q QWORD "[rsi|q]" v50|q v50|q [1900, 1923[ "NoSpillStore"
  v126|q QWORD "[r11|q]" v56|q v56|q [1991, 1996[1992 MustHaveRegister  "NoSpillStore"
  v127|q QWORD "[r9|q]" v1|q v1|q [2132, 2153[ "OneSpillStore"
  v128|q QWORD "[vstack:0|q]" v1|q v1|q [732, 1192[[1866, 2048[[2112, 2132[ "OneSpillStore"
  v129|q QWORD "[rcx|q]" v32|q v32|q [1889, 1936[ "NoSpillStore"
  v130|q QWORD "[rdx|q]" v32|q v32|q [1970, 1996[[2022, 2048[ "NoSpillStore"
  v131|q QWORD "[r11|q]" v50|q v50|q [1923, 1936[ "NoSpillStore"
  v132|q QWORD "[rsi|q]" v50|q v50|q [1970, 1996[ "NoSpillStore"
  v133|q QWORD "[r10|q]" v39|q v39|q [1991, 1996[[2022, 2048[ "NoSpillStore"
  v134|q QWORD "[r8|q]" v0|q v0|q [2132, 2153[ "OneSpillStore"
  v135|q QWORD "[vstack:1|q]" v0|q v0|q [1970, 2079[[2080, 2111[[2112, 2132[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1894  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1930  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1964  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: v56|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[1892, 1894[[1928, 1930[[1962, 1964[[1992, 1993[[2018, 2019[[2044, 2045[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v115|d [0, 286[[1846, 1849[[1990, 1993[[2016, 2019[[2042, 2045[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v4|d [0, 284[[1890, 1892[[1926, 1928[[1960, 1962[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 278[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v121|q [0, 282[[1888, 1892[[1924, 1928[[1958, 1962[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1992, 1993[[2018, 2019[[2044, 2045[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [282, 1852[[1856, 1970[282 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 322 MustHaveRegister 594 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister 1118 MustHaveRegister 1122 MustHaveRegister 1124 MustHaveRegister 1842 MustHaveRegister 1850 MustHaveRegister 1852 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [284, 732[284 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[r8|q]" v2|q rcx|q [286, 1844[[1856, 2048[286 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 1792 MustHaveRegister 1808 MustHaveRegister 1844 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [288, 330[288 MustHaveRegister 326 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [290, 1762[[1856, 2048[290 MustHaveRegister 604 ShouldHaveRegister 658 MustHaveRegister 1532 MustHaveRegister 1544 ShouldHaveRegister 1560 ShouldHaveRegister 1602 ShouldHaveRegister 1604 MustHaveRegister 1652 MustHaveRegister 1742 MustHaveRegister 1761 LiveAtLoopEnd 1890 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [292, 1812[[1856, 2048[292 MustHaveRegister 874 ShouldHaveRegister 928 MustHaveRegister 1812 MustHaveRegister 1926 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rdx|q]" v7|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[rsi|d]" v8|d v1|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rdx|q]" v10|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[rsi|q]" v11|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[rdx|q]" v12|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v13|d DWORD "[rsi|d]" v13|d v2|q [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[rdx|q]" v15|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[rdx|q]" v16|q -1 [324, 458[[1996, 2022[324 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 MustHaveRegister 432 MustHaveRegister 437 LiveAtLoopEnd 458 ShouldHaveRegister 2018 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rbp|d]" v17|d v3|d [330, 1192[[1866, 2048[[2112, 2153[330 MustHaveRegister 332 ShouldHaveRegister 1126 ShouldHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d -1 [328, 331[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v17|d [332, 1512[[1866, 2048[332 MustHaveRegister 334 ShouldHaveRegister 388 MustHaveRegister 1138 ShouldHaveRegister 1154 ShouldHaveRegister 1208 ShouldHaveRegister 1210 MustHaveRegister 1258 MustHaveRegister 1492 MustHaveRegister 1511 LiveAtLoopEnd 1960 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r14|q]" v20|q v19|d [334, 1158[[1866, 2048[334 MustHaveRegister 336 MustHaveRegister 1158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q v20|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|q [340, 438[340 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 390 MustHaveRegister 414 MustHaveRegister 437 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v23|q [342, 376[342 MustHaveRegister 344 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [1964, 1969[1964 MustHaveRegister 1966 MustHaveRegister 1968 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q -1 [390, 394[[1996, 2016[390 MustHaveRegister 392 ShouldHaveRegister 2016 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v29|q [404, 434[414 ShouldHaveRegister 432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|q [434, 437[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v16|q [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [462, 1512[596 MustHaveRegister 600 MustHaveRegister 1206 MustHaveRegister 1238 MustHaveRegister 1243 LiveAtLoopEnd 1406 MustHaveRegister 1410 MustHaveRegister 1414 MustHaveRegister 1418 MustHaveRegister 1422 MustHaveRegister 1426 MustHaveRegister 1430 MustHaveRegister 1434 MustHaveRegister 1438 MustHaveRegister 1442 MustHaveRegister 1446 MustHaveRegister 1450 MustHaveRegister 1454 MustHaveRegister 1458 MustHaveRegister 1462 MustHaveRegister 1466 MustHaveRegister 1471 LiveAtLoopEnd 1506 MustHaveRegister 1511 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[rsi|q]" v34|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[rcx|d]" v35|d v32|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[rsi|q]" v37|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v38|q QWORD "[rsi|q]" v38|q -1 [602, 728[[2022, 2048[602 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister 702 MustHaveRegister 707 LiveAtLoopEnd 728 ShouldHaveRegister 2044 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdi|q]" v39|q v4|d [604, 1564[[1856, 1936[604 MustHaveRegister 606 MustHaveRegister 1564 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v39|q [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [608, 610[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q v41|q [610, 708[610 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 660 MustHaveRegister 684 MustHaveRegister 707 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [612, 646[612 MustHaveRegister 614 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [1894, 1899[1894 MustHaveRegister 1896 MustHaveRegister 1898 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [660, 664[[2022, 2042[660 MustHaveRegister 662 ShouldHaveRegister 2042 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v47|q [674, 704[684 ShouldHaveRegister 702 MustHaveRegister 704 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [704, 707[704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q v38|q [728, 731[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v49|q [732, 1762[[1856, 1866[866 MustHaveRegister 870 MustHaveRegister 1600 MustHaveRegister 1632 MustHaveRegister 1637 LiveAtLoopEnd 1704 MustHaveRegister 1708 MustHaveRegister 1712 MustHaveRegister 1716 MustHaveRegister 1721 LiveAtLoopEnd 1756 MustHaveRegister 1761 LiveAtLoopEnd  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v52|q QWORD "[rax|q]" v52|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v53|d DWORD "[rcx|d]" v53|d v50|q [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[rax|q]" v55|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[rax|q]" v56|q -1 [872, 998[[1970, 1991[872 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 924 MustHaveRegister 926 MustHaveRegister 928 MustHaveRegister 972 MustHaveRegister 977 LiveAtLoopEnd 998 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rcx|q]" v57|q v5|d [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q v57|q [876, 878[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rcx|q]" v59|q -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|q [880, 978[880 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 930 MustHaveRegister 954 MustHaveRegister 977 LiveAtLoopEnd  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q v60|q [882, 916[882 MustHaveRegister 884 MustHaveRegister 916 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q -1 [1922, 1924[1922 MustHaveRegister 1924 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rax|q]" v63|q rax|q [1930, 1935[1930 MustHaveRegister 1932 MustHaveRegister 1934 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[r11|q]" v64|q -1 [930, 934[[1970, 1990[930 MustHaveRegister 932 ShouldHaveRegister 1990 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[r11|q]" v65|q v66|q [944, 974[954 ShouldHaveRegister 972 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q v65|q [974, 977[974 MustHaveRegister 976 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v56|q [998, 1001[998 MustHaveRegister 1000 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q v68|q [1002, 1125[1120 MustHaveRegister 1124 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[r11|q]" v71|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[rcx|d]" v72|d v69|q [1120, 1122[1120 MustHaveRegister 1122 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rcx|q]" v73|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[r11|q]" v74|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[rcx|d]" v75|d v19|d [1154, 1156[1154 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rcx|q]" v76|q -1 [1156, 1158[1156 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rcx|d]" v77|d -1 [1210, 1244[1210 MustHaveRegister 1224 MustHaveRegister 1243 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d v79|d [1214, 1240[[1244, 1261[1224 ShouldHaveRegister 1238 MustHaveRegister 1240 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rax|d]" v79|d v78|d [1240, 1243[1240 MustHaveRegister 1242 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d -1 [1258, 1472[1258 MustHaveRegister 1272 MustHaveRegister 1471 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[rax|d]" v81|d v78|d [1262, 1468[[1472, 1481[1272 ShouldHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister 1412 MustHaveRegister 1416 MustHaveRegister 1420 MustHaveRegister 1424 MustHaveRegister 1428 MustHaveRegister 1432 MustHaveRegister 1436 MustHaveRegister 1440 MustHaveRegister 1444 MustHaveRegister 1448 MustHaveRegister 1452 MustHaveRegister 1456 MustHaveRegister 1460 MustHaveRegister 1464 MustHaveRegister 1468 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[r11|d]" v82|d v81|d [1408, 1410[1408 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r11|d]" v83|d -1 [1412, 1414[1412 MustHaveRegister 1414 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[r11|d]" v84|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d -1 [1420, 1422[1420 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r11|d]" v86|d -1 [1424, 1426[1424 MustHaveRegister 1426 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [1428, 1430[1428 MustHaveRegister 1430 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r11|d]" v88|d -1 [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r11|d]" v89|d -1 [1436, 1438[1436 MustHaveRegister 1438 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[r11|d]" v90|d -1 [1440, 1442[1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[r11|d]" v91|d -1 [1444, 1446[1444 MustHaveRegister 1446 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[r11|d]" v92|d -1 [1448, 1450[1448 MustHaveRegister 1450 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[r11|d]" v93|d -1 [1452, 1454[1452 MustHaveRegister 1454 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r11|d]" v94|d -1 [1456, 1458[1456 MustHaveRegister 1458 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r11|d]" v95|d -1 [1460, 1462[1460 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[r11|d]" v96|d -1 [1464, 1466[1464 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rax|d]" v97|d -1 [1468, 1471[1468 MustHaveRegister 1470 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v81|d [1482, 1508[1492 ShouldHaveRegister 1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d v98|d [1508, 1511[1508 MustHaveRegister 1510 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rcx|d]" v100|d v4|d [1560, 1562[1560 MustHaveRegister 1562 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[rcx|q]" v101|q -1 [1562, 1564[1562 MustHaveRegister 1564 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rcx|d]" v102|d -1 [1604, 1638[1604 MustHaveRegister 1618 MustHaveRegister 1637 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v104|d [1608, 1634[[1638, 1655[1618 ShouldHaveRegister 1632 MustHaveRegister 1634 ShouldHaveRegister 1654 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rdx|d]" v104|d v103|d [1634, 1637[1634 MustHaveRegister 1636 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d -1 [1652, 1722[1652 MustHaveRegister 1666 MustHaveRegister 1721 LiveAtLoopEnd  "NoSpillStore"
  v106|d DWORD "[rdx|d]" v106|d v103|d [1656, 1718[[1722, 1731[1666 ShouldHaveRegister 1704 MustHaveRegister 1706 ShouldHaveRegister 1710 MustHaveRegister 1714 MustHaveRegister 1718 MustHaveRegister 1730 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d v106|d [1706, 1708[1706 MustHaveRegister 1708 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [1710, 1712[1710 MustHaveRegister 1712 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d -1 [1714, 1716[1714 MustHaveRegister 1716 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rdx|d]" v110|d -1 [1718, 1721[1718 MustHaveRegister 1720 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rdx|d]" v111|d v106|d [1732, 1758[1742 ShouldHaveRegister 1756 MustHaveRegister 1758 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[rdx|d]" v112|d v111|d [1758, 1761[1758 MustHaveRegister 1760 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d -1 [1808, 1810[1808 MustHaveRegister 1810 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[rsi|d]" v114|d -1 [1810, 1848[1810 MustHaveRegister 1848 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[rcx|d]" v115|d -1 [1844, 1846[1844 MustHaveRegister 1846 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rsi|d]" v116|d v114|d [1848, 1850[1848 MustHaveRegister 1850 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[r10|d]" v117|d -1 [2090, 2106[2106 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r11|q]" v118|q -1 [2090, 2108[2108 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d -1 [2132, 2148[2148 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[r11|q]" v120|q -1 [2132, 2150[2150 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[rsi|q]" v121|q -1 [1868, 1888[1868 MustHaveRegister 1888 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rsi|q]" v122|q -1 [1938, 1958[1938 MustHaveRegister 1958 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[rdx|q]" v32|q v32|q [1866, 1889[ "NoSpillStore"
  v124|q QWORD "[rdi|q]" v39|q v39|q [1970, 1991[ "NoSpillStore"
  v125|q QWORD "[rsi|q]" v50|q v50|q [1900, 1923[ "NoSpillStore"
  v126|q QWORD "[r11|q]" v56|q v56|q [1991, 1996[1992 MustHaveRegister  "NoSpillStore"
  v127|q QWORD "[r9|q]" v1|q v1|q [2132, 2153[ "OneSpillStore"
  v128|q QWORD "[vstack:0|q]" v1|q v1|q [732, 1192[[1866, 2048[[2112, 2132[ "OneSpillStore"
  v129|q QWORD "[rcx|q]" v32|q v32|q [1889, 1936[ "NoSpillStore"
  v130|q QWORD "[rdx|q]" v32|q v32|q [1970, 1996[[2022, 2048[ "NoSpillStore"
  v131|q QWORD "[r11|q]" v50|q v50|q [1923, 1936[ "NoSpillStore"
  v132|q QWORD "[rsi|q]" v50|q v50|q [1970, 1996[ "NoSpillStore"
  v133|q QWORD "[r10|q]" v39|q v39|q [1991, 1996[[2022, 2048[ "NoSpillStore"
  v134|q QWORD "[r8|q]" v0|q v0|q [2132, 2153[ "OneSpillStore"
  v135|q QWORD "[vstack:1|q]" v0|q v0|q [1970, 2079[[2080, 2111[[2112, 2132[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [v29|QWORD] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [v31|QWORD[.]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [v47|QWORD] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [v49|QWORD[.]] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [v66|QWORD] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [v68|QWORD[.]] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [v79|DWORD] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [v78|DWORD] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [v97|DWORD] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [v81|DWORD] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [v99|DWORD] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [v104|DWORD] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [v103|DWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [v110|DWORD] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [v106|DWORD] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [v112|DWORD] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1868  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1894  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1930  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1938  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1964  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [v26|QWORD[.]] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: v56|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [int[-98323|0xfffffffffffe7fed], long[20|0x14]] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [int[-67635|0xfffffffffffef7cd], long[660|0x294]] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [int[-60187|0xffffffffffff14e5], long[1304|0x518]] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [int[-73755|0xfffffffffffedfe5], long[0|0x0]] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[1892, 1894[[1928, 1930[[1962, 1964[[1992, 1993[[2018, 2019[[2044, 2045[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v115|d [0, 286[[1846, 1849[[1990, 1993[[2016, 2019[[2042, 2045[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v4|d [0, 284[[1890, 1892[[1926, 1928[[1960, 1962[ "NoOptimization"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 278[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v121|q [0, 282[[1888, 1892[[1924, 1928[[1958, 1962[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[1992, 1993[[2018, 2019[[2044, 2045[ "NoDefinitionFound"
  v0|q QWORD "[r10|q]" v0|q rsi|q [282, 1852[[1856, 1970[282 MustHaveRegister 294 MustHaveRegister 296 MustHaveRegister 298 MustHaveRegister 300 MustHaveRegister 302 MustHaveRegister 304 MustHaveRegister 306 MustHaveRegister 308 MustHaveRegister 312 MustHaveRegister 314 MustHaveRegister 316 MustHaveRegister 320 MustHaveRegister 322 MustHaveRegister 594 MustHaveRegister 598 MustHaveRegister 600 MustHaveRegister 864 MustHaveRegister 868 MustHaveRegister 870 MustHaveRegister 1118 MustHaveRegister 1122 MustHaveRegister 1124 MustHaveRegister 1842 MustHaveRegister 1850 MustHaveRegister 1852 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[r11|q]" v1|q rdx|d [284, 732[284 MustHaveRegister 288 MustHaveRegister 290 MustHaveRegister 292 MustHaveRegister 310 MustHaveRegister 314 MustHaveRegister  "OneSpillStore"
  v2|q QWORD "[r8|q]" v2|q rcx|q [286, 1844[[1856, 2048[286 MustHaveRegister 318 MustHaveRegister 322 MustHaveRegister 1792 MustHaveRegister 1808 MustHaveRegister 1844 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rcx|d]" v3|d -1 [288, 330[288 MustHaveRegister 326 ShouldHaveRegister 330 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [290, 1762[[1856, 2048[290 MustHaveRegister 604 ShouldHaveRegister 658 MustHaveRegister 1532 MustHaveRegister 1544 ShouldHaveRegister 1560 ShouldHaveRegister 1602 ShouldHaveRegister 1604 MustHaveRegister 1652 MustHaveRegister 1742 MustHaveRegister 1761 LiveAtLoopEnd 1890 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [292, 1812[[1856, 2048[292 MustHaveRegister 874 ShouldHaveRegister 928 MustHaveRegister 1812 MustHaveRegister 1926 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v7|q QWORD "[rdx|q]" v7|q -1 [308, 309[308 MustHaveRegister  "NoDefinitionFound"
  v8|d DWORD "[rsi|d]" v8|d v1|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v10|q QWORD "[rdx|q]" v10|q -1 [314, 315[314 MustHaveRegister  "NoDefinitionFound"
  v11|q QWORD "[rsi|q]" v11|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v12|q QWORD "[rdx|q]" v12|q -1 [316, 317[316 MustHaveRegister  "NoDefinitionFound"
  v13|d DWORD "[rsi|d]" v13|d v2|q [318, 320[318 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rsi|q]" v14|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v15|q QWORD "[rdx|q]" v15|q -1 [322, 323[322 MustHaveRegister  "NoDefinitionFound"
  v16|q QWORD "[rdx|q]" v16|q -1 [324, 458[[1996, 2022[324 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 386 MustHaveRegister 388 MustHaveRegister 432 MustHaveRegister 437 LiveAtLoopEnd 458 ShouldHaveRegister 2018 MustHaveRegister  "NoSpillStore"
  v17|d DWORD "[rbp|d]" v17|d v3|d [330, 1192[[1866, 2048[[2112, 2153[330 MustHaveRegister 332 ShouldHaveRegister 1126 ShouldHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rsi|d]" v18|d -1 [328, 331[328 MustHaveRegister 330 MustHaveRegister  "NoSpillStore"
  v19|d DWORD "[r13|d]" v19|d v17|d [332, 1512[[1866, 2048[332 MustHaveRegister 334 ShouldHaveRegister 388 MustHaveRegister 1138 ShouldHaveRegister 1154 ShouldHaveRegister 1208 ShouldHaveRegister 1210 MustHaveRegister 1258 MustHaveRegister 1492 MustHaveRegister 1511 LiveAtLoopEnd 1960 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[r14|q]" v20|q v19|d [334, 1158[[1866, 2048[334 MustHaveRegister 336 MustHaveRegister 1158 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q v20|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rcx|q]" v22|q -1 [338, 340[338 MustHaveRegister 340 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q v22|q [340, 438[340 MustHaveRegister 342 ShouldHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister 390 MustHaveRegister 414 MustHaveRegister 437 LiveAtLoopEnd  "NoSpillStore"
  v24|q QWORD "[rsi|q]" v24|q v23|q [342, 376[342 MustHaveRegister 344 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q rax|q [1964, 1969[1964 MustHaveRegister 1966 MustHaveRegister 1968 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q -1 [390, 394[[1996, 2016[390 MustHaveRegister 392 ShouldHaveRegister 2016 ShouldHaveRegister  "NoSpillStore"
  v28|q QWORD "[rsi|q]" v28|q v29|q [404, 434[414 ShouldHaveRegister 432 MustHaveRegister 434 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rsi|q]" v29|q v28|q [434, 437[434 MustHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdx|q]" v31|q v16|q [458, 461[458 MustHaveRegister 460 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdx|q]" v32|q v31|q [462, 1512[596 MustHaveRegister 600 MustHaveRegister 1206 MustHaveRegister 1238 MustHaveRegister 1243 LiveAtLoopEnd 1406 MustHaveRegister 1410 MustHaveRegister 1414 MustHaveRegister 1418 MustHaveRegister 1422 MustHaveRegister 1426 MustHaveRegister 1430 MustHaveRegister 1434 MustHaveRegister 1438 MustHaveRegister 1442 MustHaveRegister 1446 MustHaveRegister 1450 MustHaveRegister 1454 MustHaveRegister 1458 MustHaveRegister 1462 MustHaveRegister 1466 MustHaveRegister 1471 LiveAtLoopEnd 1506 MustHaveRegister 1511 LiveAtLoopEnd  "NoSpillStore"
  v33|q QWORD "[rcx|q]" v33|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v34|q QWORD "[rsi|q]" v34|q -1 [594, 595[594 MustHaveRegister  "NoDefinitionFound"
  v35|d DWORD "[rcx|d]" v35|d v32|q [596, 598[596 MustHaveRegister 598 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v37|q QWORD "[rsi|q]" v37|q -1 [600, 601[600 MustHaveRegister  "NoDefinitionFound"
  v38|q QWORD "[rsi|q]" v38|q -1 [602, 728[[2022, 2048[602 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 654 MustHaveRegister 656 MustHaveRegister 658 MustHaveRegister 702 MustHaveRegister 707 LiveAtLoopEnd 728 ShouldHaveRegister 2044 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdi|q]" v39|q v4|d [604, 1564[[1856, 1936[604 MustHaveRegister 606 MustHaveRegister 1564 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v39|q [606, 608[606 MustHaveRegister 608 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [608, 610[608 MustHaveRegister 610 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q v41|q [610, 708[610 MustHaveRegister 612 ShouldHaveRegister 648 MustHaveRegister 650 MustHaveRegister 652 MustHaveRegister 660 MustHaveRegister 684 MustHaveRegister 707 LiveAtLoopEnd  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [612, 646[612 MustHaveRegister 614 MustHaveRegister 646 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [1894, 1899[1894 MustHaveRegister 1896 MustHaveRegister 1898 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q -1 [660, 664[[2022, 2042[660 MustHaveRegister 662 ShouldHaveRegister 2042 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v47|q [674, 704[684 ShouldHaveRegister 702 MustHaveRegister 704 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|q [704, 707[704 MustHaveRegister 706 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q v38|q [728, 731[728 MustHaveRegister 730 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v49|q [732, 1762[[1856, 1866[866 MustHaveRegister 870 MustHaveRegister 1600 MustHaveRegister 1632 MustHaveRegister 1637 LiveAtLoopEnd 1704 MustHaveRegister 1708 MustHaveRegister 1712 MustHaveRegister 1716 MustHaveRegister 1721 LiveAtLoopEnd 1756 MustHaveRegister 1761 LiveAtLoopEnd  "NoSpillStore"
  v51|q QWORD "[rcx|q]" v51|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v52|q QWORD "[rax|q]" v52|q -1 [864, 865[864 MustHaveRegister  "NoDefinitionFound"
  v53|d DWORD "[rcx|d]" v53|d v50|q [866, 868[866 MustHaveRegister 868 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rcx|q]" v54|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v55|q QWORD "[rax|q]" v55|q -1 [870, 871[870 MustHaveRegister  "NoDefinitionFound"
  v56|q QWORD "[rax|q]" v56|q -1 [872, 998[[1970, 1991[872 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 924 MustHaveRegister 926 MustHaveRegister 928 MustHaveRegister 972 MustHaveRegister 977 LiveAtLoopEnd 998 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rcx|q]" v57|q v5|d [874, 876[874 MustHaveRegister 876 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q v57|q [876, 878[876 MustHaveRegister 878 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rcx|q]" v59|q -1 [878, 880[878 MustHaveRegister 880 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q v59|q [880, 978[880 MustHaveRegister 882 ShouldHaveRegister 918 MustHaveRegister 920 MustHaveRegister 922 MustHaveRegister 930 MustHaveRegister 954 MustHaveRegister 977 LiveAtLoopEnd  "NoSpillStore"
  v61|q QWORD "[r11|q]" v61|q v60|q [882, 916[882 MustHaveRegister 884 MustHaveRegister 916 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q -1 [1922, 1924[1922 MustHaveRegister 1924 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rax|q]" v63|q rax|q [1930, 1935[1930 MustHaveRegister 1932 MustHaveRegister 1934 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[r11|q]" v64|q -1 [930, 934[[1970, 1990[930 MustHaveRegister 932 ShouldHaveRegister 1990 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[r11|q]" v65|q v66|q [944, 974[954 ShouldHaveRegister 972 MustHaveRegister 974 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r11|q]" v66|q v65|q [974, 977[974 MustHaveRegister 976 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v56|q [998, 1001[998 MustHaveRegister 1000 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q v68|q [1002, 1125[1120 MustHaveRegister 1124 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rcx|q]" v70|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v71|q QWORD "[r11|q]" v71|q -1 [1118, 1119[1118 MustHaveRegister  "NoDefinitionFound"
  v72|d DWORD "[rcx|d]" v72|d v69|q [1120, 1122[1120 MustHaveRegister 1122 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rcx|q]" v73|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v74|q QWORD "[r11|q]" v74|q -1 [1124, 1125[1124 MustHaveRegister  "NoDefinitionFound"
  v75|d DWORD "[rcx|d]" v75|d v19|d [1154, 1156[1154 MustHaveRegister 1156 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rcx|q]" v76|q -1 [1156, 1158[1156 MustHaveRegister 1158 ShouldHaveRegister  "NoSpillStore"
  v77|d DWORD "[rcx|d]" v77|d -1 [1210, 1244[1210 MustHaveRegister 1224 MustHaveRegister 1243 LiveAtLoopEnd  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d v79|d [1214, 1240[[1244, 1261[1224 ShouldHaveRegister 1238 MustHaveRegister 1240 ShouldHaveRegister 1260 ShouldHaveRegister  "NoSpillStore"
  v79|d DWORD "[rax|d]" v79|d v78|d [1240, 1243[1240 MustHaveRegister 1242 ShouldHaveRegister  "NoSpillStore"
  v80|d DWORD "[rcx|d]" v80|d -1 [1258, 1472[1258 MustHaveRegister 1272 MustHaveRegister 1471 LiveAtLoopEnd  "NoSpillStore"
  v81|d DWORD "[rax|d]" v81|d v78|d [1262, 1468[[1472, 1481[1272 ShouldHaveRegister 1406 MustHaveRegister 1408 ShouldHaveRegister 1412 MustHaveRegister 1416 MustHaveRegister 1420 MustHaveRegister 1424 MustHaveRegister 1428 MustHaveRegister 1432 MustHaveRegister 1436 MustHaveRegister 1440 MustHaveRegister 1444 MustHaveRegister 1448 MustHaveRegister 1452 MustHaveRegister 1456 MustHaveRegister 1460 MustHaveRegister 1464 MustHaveRegister 1468 MustHaveRegister 1480 ShouldHaveRegister  "NoSpillStore"
  v82|d DWORD "[r11|d]" v82|d v81|d [1408, 1410[1408 MustHaveRegister 1410 MustHaveRegister  "NoSpillStore"
  v83|d DWORD "[r11|d]" v83|d -1 [1412, 1414[1412 MustHaveRegister 1414 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[r11|d]" v84|d -1 [1416, 1418[1416 MustHaveRegister 1418 MustHaveRegister  "NoSpillStore"
  v85|d DWORD "[r11|d]" v85|d -1 [1420, 1422[1420 MustHaveRegister 1422 MustHaveRegister  "NoSpillStore"
  v86|d DWORD "[r11|d]" v86|d -1 [1424, 1426[1424 MustHaveRegister 1426 MustHaveRegister  "NoSpillStore"
  v87|d DWORD "[r11|d]" v87|d -1 [1428, 1430[1428 MustHaveRegister 1430 MustHaveRegister  "NoSpillStore"
  v88|d DWORD "[r11|d]" v88|d -1 [1432, 1434[1432 MustHaveRegister 1434 MustHaveRegister  "NoSpillStore"
  v89|d DWORD "[r11|d]" v89|d -1 [1436, 1438[1436 MustHaveRegister 1438 MustHaveRegister  "NoSpillStore"
  v90|d DWORD "[r11|d]" v90|d -1 [1440, 1442[1440 MustHaveRegister 1442 MustHaveRegister  "NoSpillStore"
  v91|d DWORD "[r11|d]" v91|d -1 [1444, 1446[1444 MustHaveRegister 1446 MustHaveRegister  "NoSpillStore"
  v92|d DWORD "[r11|d]" v92|d -1 [1448, 1450[1448 MustHaveRegister 1450 MustHaveRegister  "NoSpillStore"
  v93|d DWORD "[r11|d]" v93|d -1 [1452, 1454[1452 MustHaveRegister 1454 MustHaveRegister  "NoSpillStore"
  v94|d DWORD "[r11|d]" v94|d -1 [1456, 1458[1456 MustHaveRegister 1458 MustHaveRegister  "NoSpillStore"
  v95|d DWORD "[r11|d]" v95|d -1 [1460, 1462[1460 MustHaveRegister 1462 MustHaveRegister  "NoSpillStore"
  v96|d DWORD "[r11|d]" v96|d -1 [1464, 1466[1464 MustHaveRegister 1466 MustHaveRegister  "NoSpillStore"
  v97|d DWORD "[rax|d]" v97|d -1 [1468, 1471[1468 MustHaveRegister 1470 ShouldHaveRegister  "NoSpillStore"
  v98|d DWORD "[rax|d]" v98|d v81|d [1482, 1508[1492 ShouldHaveRegister 1506 MustHaveRegister 1508 ShouldHaveRegister  "NoSpillStore"
  v99|d DWORD "[rax|d]" v99|d v98|d [1508, 1511[1508 MustHaveRegister 1510 ShouldHaveRegister  "NoSpillStore"
  v100|d DWORD "[rcx|d]" v100|d v4|d [1560, 1562[1560 MustHaveRegister 1562 ShouldHaveRegister  "NoSpillStore"
  v101|q QWORD "[rcx|q]" v101|q -1 [1562, 1564[1562 MustHaveRegister 1564 ShouldHaveRegister  "NoSpillStore"
  v102|d DWORD "[rcx|d]" v102|d -1 [1604, 1638[1604 MustHaveRegister 1618 MustHaveRegister 1637 LiveAtLoopEnd  "NoSpillStore"
  v103|d DWORD "[rdx|d]" v103|d v104|d [1608, 1634[[1638, 1655[1618 ShouldHaveRegister 1632 MustHaveRegister 1634 ShouldHaveRegister 1654 ShouldHaveRegister  "NoSpillStore"
  v104|d DWORD "[rdx|d]" v104|d v103|d [1634, 1637[1634 MustHaveRegister 1636 ShouldHaveRegister  "NoSpillStore"
  v105|d DWORD "[rcx|d]" v105|d -1 [1652, 1722[1652 MustHaveRegister 1666 MustHaveRegister 1721 LiveAtLoopEnd  "NoSpillStore"
  v106|d DWORD "[rdx|d]" v106|d v103|d [1656, 1718[[1722, 1731[1666 ShouldHaveRegister 1704 MustHaveRegister 1706 ShouldHaveRegister 1710 MustHaveRegister 1714 MustHaveRegister 1718 MustHaveRegister 1730 ShouldHaveRegister  "NoSpillStore"
  v107|d DWORD "[rax|d]" v107|d v106|d [1706, 1708[1706 MustHaveRegister 1708 MustHaveRegister  "NoSpillStore"
  v108|d DWORD "[rax|d]" v108|d -1 [1710, 1712[1710 MustHaveRegister 1712 MustHaveRegister  "NoSpillStore"
  v109|d DWORD "[rax|d]" v109|d -1 [1714, 1716[1714 MustHaveRegister 1716 MustHaveRegister  "NoSpillStore"
  v110|d DWORD "[rdx|d]" v110|d -1 [1718, 1721[1718 MustHaveRegister 1720 ShouldHaveRegister  "NoSpillStore"
  v111|d DWORD "[rdx|d]" v111|d v106|d [1732, 1758[1742 ShouldHaveRegister 1756 MustHaveRegister 1758 ShouldHaveRegister  "NoSpillStore"
  v112|d DWORD "[rdx|d]" v112|d v111|d [1758, 1761[1758 MustHaveRegister 1760 ShouldHaveRegister  "NoSpillStore"
  v113|d DWORD "[rcx|d]" v113|d -1 [1808, 1810[1808 MustHaveRegister 1810 MustHaveRegister  "NoSpillStore"
  v114|d DWORD "[rsi|d]" v114|d -1 [1810, 1848[1810 MustHaveRegister 1848 ShouldHaveRegister  "NoSpillStore"
  v115|d DWORD "[rcx|d]" v115|d -1 [1844, 1846[1844 MustHaveRegister 1846 ShouldHaveRegister  "NoSpillStore"
  v116|d DWORD "[rsi|d]" v116|d v114|d [1848, 1850[1848 MustHaveRegister 1850 MustHaveRegister  "NoSpillStore"
  v117|d DWORD "[r10|d]" v117|d -1 [2090, 2106[2106 MustHaveRegister  "NoSpillStore"
  v118|q QWORD "[r11|q]" v118|q -1 [2090, 2108[2108 MustHaveRegister  "NoSpillStore"
  v119|d DWORD "[r10|d]" v119|d -1 [2132, 2148[2148 MustHaveRegister  "NoSpillStore"
  v120|q QWORD "[r11|q]" v120|q -1 [2132, 2150[2150 MustHaveRegister  "NoSpillStore"
  v121|q QWORD "[rsi|q]" v121|q -1 [1868, 1888[1868 MustHaveRegister 1888 ShouldHaveRegister  "NoSpillStore"
  v122|q QWORD "[rsi|q]" v122|q -1 [1938, 1958[1938 MustHaveRegister 1958 ShouldHaveRegister  "NoSpillStore"
  v123|q QWORD "[rdx|q]" v32|q v32|q [1866, 1889[ "NoSpillStore"
  v124|q QWORD "[rdi|q]" v39|q v39|q [1970, 1991[ "NoSpillStore"
  v125|q QWORD "[rsi|q]" v50|q v50|q [1900, 1923[ "NoSpillStore"
  v126|q QWORD "[r11|q]" v56|q v56|q [1991, 1996[1992 MustHaveRegister  "NoSpillStore"
  v127|q QWORD "[r9|q]" v1|q v1|q [2132, 2153[ "OneSpillStore"
  v128|q QWORD "[vstack:0|q]" v1|q v1|q [732, 1192[[1866, 2048[[2112, 2132[ "OneSpillStore"
  v129|q QWORD "[rcx|q]" v32|q v32|q [1889, 1936[ "NoSpillStore"
  v130|q QWORD "[rdx|q]" v32|q v32|q [1970, 1996[[2022, 2048[ "NoSpillStore"
  v131|q QWORD "[r11|q]" v50|q v50|q [1923, 1936[ "NoSpillStore"
  v132|q QWORD "[rsi|q]" v50|q v50|q [1970, 1996[ "NoSpillStore"
  v133|q QWORD "[r10|q]" v39|q v39|q [1991, 1996[[2022, 2048[ "NoSpillStore"
  v134|q QWORD "[r8|q]" v0|q v0|q [2132, 2153[ "OneSpillStore"
  v135|q QWORD "[vstack:1|q]" v0|q v0|q [1970, 2079[[2080, 2111[[2112, 2132[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [v28|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [v32|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [v46|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [v50|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [v65|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [v69|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [v78|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [v81|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [v98|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [v103|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [v106|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [v111|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1868  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1894  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1930  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1938  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1964  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: v56|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: v126|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v133|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVE input: v39|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v133|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] // MoveResolver resolve mapping <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [v117|DWORD, v118|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [v119|DWORD, v120|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: v0|QWORD[.] Object[null] v2|QWORD[.] - 
>@ <|@ instruction v3|DWORD = MOV input: [v1|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction v4|DWORD = MOV input: [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [v0|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [v0|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [v0|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [v0|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [v0|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [v0|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [v0|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 52], ~expectedObject: -) {temp: v6|QWORD, temp2: v7|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction v8|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [v0|QWORD[.] + 52], y: v8|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v1|QWORD[.]) {temp: v9|QWORD, temp2: v10|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 60], ~expectedObject: -) {temp: v11|QWORD, temp2: v12|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [v0|QWORD[.] + 60], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v2|QWORD[.]) {temp: v14|QWORD, temp2: v15|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction v16|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: v3|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction v18|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction v17|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v18|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction v19|DWORD = SHL value: v17|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction v20|QWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction v21|QWORD = SHL x: v20|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction v22|QWORD = LEA address: [v21|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction v23|QWORD = AND x: v22|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction v24|QWORD = ADD (x: v23|QWORD, y: v16|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: v24|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: v24|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [v23|QWORD + v16|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [v16|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [v16|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [v16|QWORD + 12], y: v19|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction v27|QWORD = LEA address: [v23|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: v27|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: v23|QWORD, y: v28|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [v16|QWORD + v28|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction v29|QWORD = LEA address: [v28|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction v31|QWORD[.] = MOVE input: v16|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 56], ~expectedObject: -) {temp: v33|QWORD, temp2: v34|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction v35|DWORD[_] = COMPRESSPOINTER (input: v32|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [v0|QWORD[.] + 56], y: v35|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v32|QWORD[.]) {temp: v36|QWORD, temp2: v37|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction v38|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction v39|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction v40|QWORD = SHL x: v39|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction v41|QWORD = LEA address: [v40|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction v42|QWORD = AND x: v41|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction v43|QWORD = ADD (x: v42|QWORD, y: v38|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: v43|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: v43|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [v42|QWORD + v38|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [v38|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [v38|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [v38|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction v45|QWORD = LEA address: [v42|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: v45|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: v42|QWORD, y: v46|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [v38|QWORD + v46|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction v47|QWORD = LEA address: [v46|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction v49|QWORD[.] = MOVE input: v38|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 64], ~expectedObject: -) {temp: v51|QWORD, temp2: v52|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction v53|DWORD[_] = COMPRESSPOINTER (input: v50|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [v0|QWORD[.] + 64], y: v53|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v50|QWORD[.]) {temp: v54|QWORD, temp2: v55|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction v56|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction v57|QWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction v58|QWORD = SHL x: v57|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction v59|QWORD = LEA address: [v58|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction v60|QWORD = AND x: v59|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction v61|QWORD = ADD (x: v60|QWORD, y: v56|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: v61|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: v61|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [v60|QWORD + v56|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [v56|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [v56|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [v56|QWORD + 12], y: v5|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction v64|QWORD = LEA address: [v60|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: v64|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: v60|QWORD, y: v65|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [v56|QWORD + v65|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction v66|QWORD = LEA address: [v65|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction v68|QWORD[.] = MOVE input: v56|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v0|QWORD[.] + 68], ~expectedObject: -) {temp: v70|QWORD, temp2: v71|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction v72|DWORD[_] = COMPRESSPOINTER (input: v69|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [v0|QWORD[.] + 68], y: v72|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v0|QWORD[.], ~newValue: v69|QWORD[.]) {temp: v73|QWORD, temp2: v74|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: v19|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction v75|DWORD = DEC value: v19|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction v76|QWORD = MOVSXD value: v75|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v76|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: v17|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [v32|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: v19|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction v77|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v19|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: v77|DWORD, y: v78|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [v32|QWORD[.] + v78|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction v79|DWORD = INC value: v78|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction v80|DWORD = LEA address: [v19|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: v80|DWORD, y: v81|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [v32|QWORD[.] + v81|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction v82|DWORD = INC value: v81|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [v32|QWORD[.] + v82|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction v83|DWORD = LEA address: [v81|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [v32|QWORD[.] + v83|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction v84|DWORD = LEA address: [v81|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [v32|QWORD[.] + v84|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction v85|DWORD = LEA address: [v81|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [v32|QWORD[.] + v85|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction v86|DWORD = LEA address: [v81|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [v32|QWORD[.] + v86|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction v87|DWORD = LEA address: [v81|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [v32|QWORD[.] + v87|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction v88|DWORD = LEA address: [v81|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [v32|QWORD[.] + v88|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction v89|DWORD = LEA address: [v81|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [v32|QWORD[.] + v89|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction v90|DWORD = LEA address: [v81|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [v32|QWORD[.] + v90|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction v91|DWORD = LEA address: [v81|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [v32|QWORD[.] + v91|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction v92|DWORD = LEA address: [v81|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [v32|QWORD[.] + v92|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction v93|DWORD = LEA address: [v81|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [v32|QWORD[.] + v93|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction v94|DWORD = LEA address: [v81|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [v32|QWORD[.] + v94|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction v95|DWORD = LEA address: [v81|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [v32|QWORD[.] + v95|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction v96|DWORD = LEA address: [v81|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [v32|QWORD[.] + v96|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction v97|DWORD = LEA address: [v81|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: v19|DWORD, y: v98|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [v32|QWORD[.] + v98|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction v99|DWORD = INC value: v98|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: v4|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction v100|DWORD = DEC value: v4|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction v101|QWORD = MOVSXD value: v100|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: v39|QWORD, y: v101|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [v50|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: v4|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction v102|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: v4|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: v102|DWORD, y: v103|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [v50|QWORD[.] + v103|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction v104|DWORD = INC value: v103|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction v105|DWORD = LEA address: [v4|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: v105|DWORD, y: v106|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [v50|QWORD[.] + v106|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction v107|DWORD = INC value: v106|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [v50|QWORD[.] + v107|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction v108|DWORD = LEA address: [v106|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [v50|QWORD[.] + v108|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction v109|DWORD = LEA address: [v106|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [v50|QWORD[.] + v109|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction v110|DWORD = LEA address: [v106|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: v4|DWORD, y: v111|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [v50|QWORD[.] + v111|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction v112|DWORD = INC value: v111|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [v2|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction v113|DWORD[_] = MOV input: [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction v114|DWORD = MOV input: [v113|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: v5|DWORD, y: v5|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [v0|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction v115|DWORD = MOVSXB input: [v2|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = MOVE input: v115|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction v116|DWORD = SHR (x: v114|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [v0|QWORD[.] + 16], y: v116|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [v0|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1868  <|@ instruction v121|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr 1888  <|@ instruction rsi|QWORD = MOVE input: v121|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v123|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1894  <|@ instruction v44|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v44|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v44|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v129|QWORD[.] = MOVE input: v32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction v62|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v131|QWORD[.] = MOVE input: v125|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: v62|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: v5|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1930  <|@ instruction v63|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction NULLCHECK address: [v63|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE input: v131|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v129|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1938  <|@ instruction v122|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD = MOVE input: v122|QWORD moveKind: QWORD <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: v19|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1964  <|@ instruction v26|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v26|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: v64|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVE input: v124|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v126|QWORD = MOVE input: v56|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [v56|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE input: v126|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v133|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: v27|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [v16|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v128|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v133|QWORD = MOVE input: v39|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: v45|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [v38|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v133|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v118|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] // MoveResolver resolve mapping <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v117|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v118|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: v0|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v135|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v119|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v127|QWORD[.] = MOVE input: v128|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = MOVE input: v135|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v119|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v120|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: v0|QWORD[.] v1|QWORD[.] - v17|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1848  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1868  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1938  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vstack:1|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] // MoveResolver resolve mapping <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vstack:1|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  378  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  380  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  384  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  386  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  388  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  392  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  402  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  434  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  436  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  460  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  596  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  598  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  600  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  602  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  604  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  608  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  610  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  612  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  614  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  648  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  650  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  652  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  654  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  656  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  658  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  660  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  662  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  672  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  686  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  704  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  706  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  708  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  730  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  866  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  868  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  870  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  872  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  874  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  876  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr  878  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  880  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  882  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  884  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  918  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  920  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  922  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  924  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr  926  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr  928  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr  930  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  932  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  942  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  956  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  974  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  976  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  978  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1002  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1120  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1122  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1124  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1126  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1156  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1158  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1208  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1210  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1212  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1214  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction NOP <|@ <|@
      nr 1234  <|@ instruction NOP <|@ <|@
      nr 1236  <|@ instruction NOP <|@ <|@
      nr 1238  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1240  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1242  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1260  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1274  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1408  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1412  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1414  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1416  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1418  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1420  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1422  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1424  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1426  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1428  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1430  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1432  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1434  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1436  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1440  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1442  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1444  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1446  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1448  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1450  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1452  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1456  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1458  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1460  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1464  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1466  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1468  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1482  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1508  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1510  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1522  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1562  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1564  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1602  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1604  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1634  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1636  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1654  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1656  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction NOP <|@ <|@
      nr 1674  <|@ instruction NOP <|@ <|@
      nr 1676  <|@ instruction NOP <|@ <|@
      nr 1678  <|@ instruction NOP <|@ <|@
      nr 1680  <|@ instruction NOP <|@ <|@
      nr 1682  <|@ instruction NOP <|@ <|@
      nr 1684  <|@ instruction NOP <|@ <|@
      nr 1686  <|@ instruction NOP <|@ <|@
      nr 1688  <|@ instruction NOP <|@ <|@
      nr 1690  <|@ instruction NOP <|@ <|@
      nr 1692  <|@ instruction NOP <|@ <|@
      nr 1694  <|@ instruction NOP <|@ <|@
      nr 1696  <|@ instruction NOP <|@ <|@
      nr 1698  <|@ instruction NOP <|@ <|@
      nr 1700  <|@ instruction NOP <|@ <|@
      nr 1702  <|@ instruction NOP <|@ <|@
      nr 1704  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1720  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1722  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1724  <|@ instruction NOP <|@ <|@
      nr 1726  <|@ instruction NOP <|@ <|@
      nr 1728  <|@ instruction NOP <|@ <|@
      nr 1730  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 1732  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1734  <|@ instruction NOP <|@ <|@
      nr 1736  <|@ instruction NOP <|@ <|@
      nr 1738  <|@ instruction NOP <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1746  <|@ instruction NOP <|@ <|@
      nr 1748  <|@ instruction NOP <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1758  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1760  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 1762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1774  <|@ instruction NOP <|@ <|@
      nr 1776  <|@ instruction NOP <|@ <|@
      nr 1778  <|@ instruction NOP <|@ <|@
      nr 1780  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction NOP <|@ <|@
      nr 1788  <|@ instruction NOP <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1794  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction NOP <|@ <|@
      nr 1800  <|@ instruction NOP <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 1810  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 1812  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction NOP <|@ <|@
      nr 1822  <|@ instruction NOP <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction NOP <|@ <|@
      nr 1832  <|@ instruction NOP <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 1844  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1848  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1852  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 1854  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction NOP <|@ <|@
      nr 1862  <|@ instruction NOP <|@ <|@
      nr 1864  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1866  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1868  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction NOP <|@ <|@
      nr 1878  <|@ instruction NOP <|@ <|@
      nr 1880  <|@ instruction NOP <|@ <|@
      nr 1882  <|@ instruction NOP <|@ <|@
      nr 1884  <|@ instruction NOP <|@ <|@
      nr 1886  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1890  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr 1896  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1898  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1900  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction NOP <|@ <|@
      nr 1912  <|@ instruction NOP <|@ <|@
      nr 1914  <|@ instruction NOP <|@ <|@
      nr 1916  <|@ instruction NOP <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1924  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1926  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1928  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1932  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1934  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1936  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1938  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction NOP <|@ <|@
      nr 1946  <|@ instruction NOP <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr 1966  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1968  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1970  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction NOP <|@ <|@
      nr 1984  <|@ instruction NOP <|@ <|@
      nr 1986  <|@ instruction NOP <|@ <|@
      nr 1988  <|@ instruction NOP <|@ <|@
      nr 1990  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1992  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1994  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1996  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1998  <|@ instruction NOP <|@ <|@
      nr 2000  <|@ instruction NOP <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction NOP <|@ <|@
      nr 2010  <|@ instruction NOP <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 2018  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2020  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction NOP <|@ <|@
      nr 2036  <|@ instruction NOP <|@ <|@
      nr 2038  <|@ instruction NOP <|@ <|@
      nr 2040  <|@ instruction NOP <|@ <|@
      nr 2042  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 2044  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2046  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2048  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction NOP <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] // MoveResolver resolve mapping <|@ <|@
      nr 2056  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2058  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2060  <|@ instruction NOP <|@ <|@
      nr 2062  <|@ instruction NOP <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2076  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vstack:1|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2082  <|@ instruction NOP <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] // MoveResolver resolve mapping <|@ <|@
      nr 2088  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2108  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2110  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vstack:1|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2112  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2114  <|@ instruction NOP <|@ <|@
      nr 2116  <|@ instruction NOP <|@ <|@
      nr 2118  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2120  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2124  <|@ instruction NOP <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 2130  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2134  <|@ instruction NOP <|@ <|@
      nr 2136  <|@ instruction NOP <|@ <|@
      nr 2138  <|@ instruction NOP <|@ <|@
      nr 2140  <|@ instruction NOP <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2150  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2152  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] vstack:0|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] vstack:0|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r11|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: vstack:1|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: vstack:1|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2214  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2216  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction vstack:1|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: vstack:1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [348, 2214[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[vstack:1|q]" vstack:1|q -1 [490, 2216[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [348, 2214[ "NOT_SUPPORTED"
  vstack:1|q QWORD "[stack:40|q]" vstack:1|q -1 [490, 2216[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2214  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2216  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2214  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2216  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  514  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  516  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r10:0, r11:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr  280  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0]
locals: r10|QWORD[.] Object[null] r8|QWORD[.] - 
>@ <|@ instruction rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0] <|@ <|@
      nr  290  <|@ instruction r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  292  <|@ instruction rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  294  <|@ instruction MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD <|@ <|@
      nr  296  <|@ instruction MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD <|@ <|@
      nr  298  <|@ instruction MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD <|@ <|@
      nr  300  <|@ instruction MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD <|@ <|@
      nr  302  <|@ instruction MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD <|@ <|@
      nr  304  <|@ instruction MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE <|@ <|@
      nr  308  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  310  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  312  <|@ instruction MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  314  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  316  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  318  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  320  <|@ instruction MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr  322  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  324  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  326  <|@ instruction CMP x: rcx|DWORD y: 10 size: DWORD <|@ <|@
      nr  328  <|@ instruction rsi|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr  330  <|@ instruction rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: < <|@ <|@
      nr  332  <|@ instruction r13|DWORD = SHL value: rbp|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD <|@ <|@
      nr  338  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  340  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  344  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B7" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  420  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  422  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  424  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr  426  <|@ instruction rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  428  <|@ instruction CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction rsi|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B4" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  472  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  474  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" "B5" 
    successors "B5" "B6" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B8" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" "B6" 
    successors "B9" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  532  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B1" 
    successors "B10" "B11" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction NOP <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  668  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr  670  <|@ instruction MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  672  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr  674  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  676  <|@ instruction rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD <|@ <|@
      nr  680  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr  682  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr  684  <|@ instruction rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B12" "B16" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction NOP <|@ <|@
      nr  732  <|@ instruction NOP <|@ <|@
      nr  734  <|@ instruction NOP <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD <|@ <|@
      nr  758  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  760  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  762  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  764  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  766  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed} <|@ <|@
      nr  768  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  770  <|@ instruction rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr  772  <|@ instruction CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rax|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  784  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B13" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  816  <|@ instruction rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  818  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" 
    successors "B14" "B15" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B17" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr  868  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  880  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B10" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction NOP <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1018  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1020  <|@ instruction MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1022  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1024  <|@ instruction rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1026  <|@ instruction rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD <|@ <|@
      nr 1030  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD <|@ <|@
      nr 1032  <|@ instruction rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD <|@ <|@
      nr 1034  <|@ instruction r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 1036  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" "B25" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1112  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1114  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1116  <|@ instruction AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1118  <|@ instruction MOV x: [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1120  <|@ instruction MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed} <|@ <|@
      nr 1122  <|@ instruction MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD <|@ <|@
      nr 1124  <|@ instruction r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD <|@ <|@
      nr 1126  <|@ instruction CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B22" 
    xhandlers
    flags 
    probability 4607003175534848062
    begin_IR
      LIR
      nr 1128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1130  <|@ instruction NOP <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction r11|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr 1138  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B22" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4636528289147554203
    begin_IR
      LIR
      nr 1152  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1154  <|@ instruction NOP <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr 1170  <|@ instruction r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1172  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B23" 
    successors "B23" "B24" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4636597257553722731
    begin_IR
      LIR
      nr 1140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B26" 
    xhandlers
    flags 
    probability 4607003175534848063
    begin_IR
      LIR
      nr 1174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction NOP <|@ <|@
      nr 1180  <|@ instruction NOP <|@ <|@
      nr 1182  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4607092346807469999
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1234  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" "B19" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1238  <|@ instruction NOP <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction NOP <|@ <|@
      nr 1250  <|@ instruction NOP <|@ <|@
      nr 1252  <|@ instruction NOP <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction NOP <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1354  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3 <|@ <|@
      nr 1356  <|@ instruction MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr 1358  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e <|@ <|@
      nr 1360  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1372  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B68" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1394  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction rcx|DWORD = DEC value: r13|DWORD size: DWORD <|@ <|@
      nr 1410  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1412  <|@ instruction CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B32 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1456  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction NOP <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1472  <|@ instruction CMP x: r13|DWORD y: 3 size: DWORD <|@ <|@
      nr 1474  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<| <|@ <|@
      nr 1476  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1478  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1494  <|@ instruction NOP <|@ <|@
      nr 1496  <|@ instruction NOP <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1506  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1508  <|@ instruction JUMP ~outgoingValues: [] destination: B37 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B37" 
    successors "B37" "B38" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1480  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction NOP <|@ <|@
      nr 1486  <|@ instruction NOP <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1510  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction NOP <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD <|@ <|@
      nr 1526  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B39" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4597730702739284525
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction NOP <|@ <|@
      nr 1576  <|@ instruction NOP <|@ <|@
      nr 1578  <|@ instruction NOP <|@ <|@
      nr 1580  <|@ instruction NOP <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction NOP <|@ <|@
      nr 1604  <|@ instruction NOP <|@ <|@
      nr 1606  <|@ instruction NOP <|@ <|@
      nr 1608  <|@ instruction NOP <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction NOP <|@ <|@
      nr 1626  <|@ instruction NOP <|@ <|@
      nr 1628  <|@ instruction NOP <|@ <|@
      nr 1630  <|@ instruction NOP <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction NOP <|@ <|@
      nr 1648  <|@ instruction NOP <|@ <|@
      nr 1650  <|@ instruction NOP <|@ <|@
      nr 1652  <|@ instruction NOP <|@ <|@
      nr 1654  <|@ instruction NOP <|@ <|@
      nr 1656  <|@ instruction NOP <|@ <|@
      nr 1658  <|@ instruction NOP <|@ <|@
      nr 1660  <|@ instruction NOP <|@ <|@
      nr 1662  <|@ instruction NOP <|@ <|@
      nr 1664  <|@ instruction NOP <|@ <|@
      nr 1666  <|@ instruction NOP <|@ <|@
      nr 1668  <|@ instruction NOP <|@ <|@
      nr 1670  <|@ instruction NOP <|@ <|@
      nr 1672  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1674  <|@ instruction r11|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1676  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1678  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1682  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD <|@ <|@
      nr 1684  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1686  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD <|@ <|@
      nr 1688  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1690  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD <|@ <|@
      nr 1692  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1694  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD <|@ <|@
      nr 1696  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD <|@ <|@
      nr 1700  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1702  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD <|@ <|@
      nr 1704  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1706  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD <|@ <|@
      nr 1708  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1710  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD <|@ <|@
      nr 1712  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1714  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD <|@ <|@
      nr 1716  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1718  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD <|@ <|@
      nr 1720  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1722  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD <|@ <|@
      nr 1724  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1726  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD <|@ <|@
      nr 1728  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1730  <|@ instruction r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD <|@ <|@
      nr 1732  <|@ instruction MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1734  <|@ instruction rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD <|@ <|@
      nr 1736  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B40" "B41" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4608038223357757749
    begin_IR
      LIR
      nr 1528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1738  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1740  <|@ instruction NOP <|@ <|@
      nr 1742  <|@ instruction NOP <|@ <|@
      nr 1744  <|@ instruction NOP <|@ <|@
      nr 1746  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B42" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4576699084574126183
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1762  <|@ instruction NOP <|@ <|@
      nr 1764  <|@ instruction NOP <|@ <|@
      nr 1766  <|@ instruction NOP <|@ <|@
      nr 1768  <|@ instruction NOP <|@ <|@
      nr 1770  <|@ instruction NOP <|@ <|@
      nr 1772  <|@ instruction MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1774  <|@ instruction rax|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr 1776  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B43" 
    successors "B43" "B44" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4606840005159452577
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1750  <|@ instruction NOP <|@ <|@
      nr 1752  <|@ instruction NOP <|@ <|@
      nr 1754  <|@ instruction NOP <|@ <|@
      nr 1756  <|@ instruction NOP <|@ <|@
      nr 1758  <|@ instruction CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4606753357303310815
    begin_IR
      LIR
      nr 1778  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1780  <|@ instruction NOP <|@ <|@
      nr 1782  <|@ instruction NOP <|@ <|@
      nr 1784  <|@ instruction NOP <|@ <|@
      nr 1786  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" "B28" 
    successors "B46" "B47" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1788  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1790  <|@ instruction NOP <|@ <|@
      nr 1792  <|@ instruction NOP <|@ <|@
      nr 1794  <|@ instruction NOP <|@ <|@
      nr 1796  <|@ instruction NOP <|@ <|@
      nr 1798  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1810  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1812  <|@ instruction NOP <|@ <|@
      nr 1814  <|@ instruction NOP <|@ <|@
      nr 1816  <|@ instruction NOP <|@ <|@
      nr 1818  <|@ instruction NOP <|@ <|@
      nr 1820  <|@ instruction CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B67" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1834  <|@ instruction NOP <|@ <|@
      nr 1836  <|@ instruction NOP <|@ <|@
      nr 1838  <|@ instruction NOP <|@ <|@
      nr 1840  <|@ instruction NOP <|@ <|@
      nr 1842  <|@ instruction NOP <|@ <|@
      nr 1844  <|@ instruction NOP <|@ <|@
      nr 1846  <|@ instruction rcx|DWORD = DEC value: r9|DWORD size: DWORD <|@ <|@
      nr 1848  <|@ instruction rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD <|@ <|@
      nr 1850  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1852  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1854  <|@ instruction NOP <|@ <|@
      nr 1856  <|@ instruction NOP <|@ <|@
      nr 1858  <|@ instruction NOP <|@ <|@
      nr 1860  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B48" "B50" 
    successors "B52" 
    xhandlers
    flags 
    probability 4605880351220090638
    begin_IR
      LIR
      nr 1862  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1864  <|@ instruction NOP <|@ <|@
      nr 1866  <|@ instruction NOP <|@ <|@
      nr 1868  <|@ instruction NOP <|@ <|@
      nr 1870  <|@ instruction NOP <|@ <|@
      nr 1872  <|@ instruction NOP <|@ <|@
      nr 1874  <|@ instruction NOP <|@ <|@
      nr 1876  <|@ instruction MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr 1878  <|@ instruction CMP x: r9|DWORD y: 3 size: DWORD <|@ <|@
      nr 1880  <|@ instruction rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<| <|@ <|@
      nr 1882  <|@ instruction rdx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1884  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B52" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4576134717005175766
    begin_IR
      LIR
      nr 1898  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1900  <|@ instruction NOP <|@ <|@
      nr 1902  <|@ instruction NOP <|@ <|@
      nr 1904  <|@ instruction NOP <|@ <|@
      nr 1906  <|@ instruction NOP <|@ <|@
      nr 1908  <|@ instruction NOP <|@ <|@
      nr 1910  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1912  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1914  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B53" 
    successors "B53" "B54" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4605958180832967550
    begin_IR
      LIR
      nr 1886  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1888  <|@ instruction NOP <|@ <|@
      nr 1890  <|@ instruction NOP <|@ <|@
      nr 1892  <|@ instruction NOP <|@ <|@
      nr 1894  <|@ instruction NOP <|@ <|@
      nr 1896  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 1916  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1918  <|@ instruction NOP <|@ <|@
      nr 1920  <|@ instruction NOP <|@ <|@
      nr 1922  <|@ instruction NOP <|@ <|@
      nr 1924  <|@ instruction NOP <|@ <|@
      nr 1926  <|@ instruction NOP <|@ <|@
      nr 1928  <|@ instruction NOP <|@ <|@
      nr 1930  <|@ instruction rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD <|@ <|@
      nr 1932  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B55" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4601059349176911661
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1948  <|@ instruction NOP <|@ <|@
      nr 1950  <|@ instruction NOP <|@ <|@
      nr 1952  <|@ instruction NOP <|@ <|@
      nr 1954  <|@ instruction NOP <|@ <|@
      nr 1956  <|@ instruction NOP <|@ <|@
      nr 1958  <|@ instruction NOP <|@ <|@
      nr 1960  <|@ instruction NOP <|@ <|@
      nr 1962  <|@ instruction NOP <|@ <|@
      nr 1964  <|@ instruction NOP <|@ <|@
      nr 1966  <|@ instruction NOP <|@ <|@
      nr 1968  <|@ instruction NOP <|@ <|@
      nr 1970  <|@ instruction NOP <|@ <|@
      nr 1972  <|@ instruction NOP <|@ <|@
      nr 1974  <|@ instruction NOP <|@ <|@
      nr 1976  <|@ instruction NOP <|@ <|@
      nr 1978  <|@ instruction NOP <|@ <|@
      nr 1980  <|@ instruction NOP <|@ <|@
      nr 1982  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1984  <|@ instruction rax|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 1986  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1988  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD <|@ <|@
      nr 1990  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1992  <|@ instruction rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD <|@ <|@
      nr 1994  <|@ instruction MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 1996  <|@ instruction rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD <|@ <|@
      nr 1998  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B56" 
    successors "B56" "B57" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4608378317324805459
    begin_IR
      LIR
      nr 1934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1936  <|@ instruction NOP <|@ <|@
      nr 1938  <|@ instruction NOP <|@ <|@
      nr 1940  <|@ instruction NOP <|@ <|@
      nr 1942  <|@ instruction NOP <|@ <|@
      nr 1944  <|@ instruction CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4605880351220090639
    begin_IR
      LIR
      nr 2000  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2002  <|@ instruction NOP <|@ <|@
      nr 2004  <|@ instruction NOP <|@ <|@
      nr 2006  <|@ instruction NOP <|@ <|@
      nr 2008  <|@ instruction JUMP ~outgoingValues: [] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B58" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4576134717005175767
    begin_IR
      LIR
      nr 2022  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 2024  <|@ instruction NOP <|@ <|@
      nr 2026  <|@ instruction NOP <|@ <|@
      nr 2028  <|@ instruction NOP <|@ <|@
      nr 2030  <|@ instruction NOP <|@ <|@
      nr 2032  <|@ instruction NOP <|@ <|@
      nr 2034  <|@ instruction MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = INC value: rdx|DWORD size: DWORD <|@ <|@
      nr 2038  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" "B59" 
    successors "B59" "B60" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4605958180832967551
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 2012  <|@ instruction NOP <|@ <|@
      nr 2014  <|@ instruction NOP <|@ <|@
      nr 2016  <|@ instruction NOP <|@ <|@
      nr 2018  <|@ instruction NOP <|@ <|@
      nr 2020  <|@ instruction CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4605880351220090640
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2042  <|@ instruction NOP <|@ <|@
      nr 2044  <|@ instruction NOP <|@ <|@
      nr 2046  <|@ instruction NOP <|@ <|@
      nr 2048  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B46" 
    successors "B62" "B65" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2050  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2052  <|@ instruction NOP <|@ <|@
      nr 2054  <|@ instruction NOP <|@ <|@
      nr 2056  <|@ instruction NOP <|@ <|@
      nr 2058  <|@ instruction NOP <|@ <|@
      nr 2060  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B63" "B64" 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2064  <|@ instruction NOP <|@ <|@
      nr 2066  <|@ instruction NOP <|@ <|@
      nr 2068  <|@ instruction NOP <|@ <|@
      nr 2070  <|@ instruction NOP <|@ <|@
      nr 2072  <|@ instruction NOP <|@ <|@
      nr 2074  <|@ instruction NOP <|@ <|@
      nr 2076  <|@ instruction rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD <|@ <|@
      nr 2078  <|@ st <@st|@reference-map: [r8:0, r10:0]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: r10|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90] <|@ <|@
      nr 2080  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017409
    begin_IR
      LIR
      nr 2082  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2084  <|@ instruction NOP <|@ <|@
      nr 2086  <|@ instruction NOP <|@ <|@
      nr 2088  <|@ instruction NOP <|@ <|@
      nr 2090  <|@ instruction NOP <|@ <|@
      nr 2092  <|@ instruction NOP <|@ <|@
      nr 2094  <|@ instruction NOP <|@ <|@
      nr 2096  <|@ instruction NOP <|@ <|@
      nr 2098  <|@ instruction NOP <|@ <|@
      nr 2100  <|@ instruction NOP <|@ <|@
      nr 2102  <|@ instruction NOP <|@ <|@
      nr 2104  <|@ instruction NOP <|@ <|@
      nr 2106  <|@ instruction NOP <|@ <|@
      nr 2108  <|@ instruction NOP <|@ <|@
      nr 2110  <|@ instruction MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD <|@ <|@
      nr 2112  <|@ instruction rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 2114  <|@ instruction rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2116  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2118  <|@ instruction INC value: [r10|QWORD[.] + 44] size: DWORD <|@ <|@
      nr 2120  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B33" 
    xhandlers
    flags 
    probability 4602249757675940319
    begin_IR
      LIR
      nr 1384  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B51" 
    xhandlers
    flags 
    probability 4601376751592720142
    begin_IR
      LIR
      nr 1822  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1824  <|@ instruction NOP <|@ <|@
      nr 1826  <|@ instruction NOP <|@ <|@
      nr 1828  <|@ instruction NOP <|@ <|@
      nr 1830  <|@ instruction JUMP ~outgoingValues: [] destination: B48 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B61" 
    xhandlers
    flags 
    probability 4594376290610242504
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1802  <|@ instruction NOP <|@ <|@
      nr 1804  <|@ instruction NOP <|@ <|@
      nr 1806  <|@ instruction NOP <|@ <|@
      nr 1808  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B45" 
    xhandlers
    flags 
    probability 4587025804983099920
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  692  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction NOP <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  714  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  716  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68] <|@ <|@
      nr  718  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:68] <|@ <|@
      nr  720  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  724  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr 1038  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1040  <|@ instruction rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>} <|@ <|@
      nr 1064  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1066  <|@ instruction rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1070  <|@ st <@st|@reference-map: [rcx:0, r8:0, r10:0, r11:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78] <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rax:0, rcx:0, r8:0, r10:0, r11:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78]
locals: r10|QWORD[.] stack:32|QWORD[.] - rbp|DWORD 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:78] <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B19 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  346  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  348  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD <|@ <|@
      nr  372  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49] <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [rax:0, r8:0, r10:0, stack:16]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49]
locals: r10|QWORD[.] stack:32|QWORD[.] r8|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:49] <|@ <|@
      nr  376  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  380  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B26" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr 1184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1186  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1188  <|@ instruction NOP <|@ <|@
      nr 1190  <|@ instruction NOP <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1208  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr 1214  <|@ instruction rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD <|@ <|@
      nr 1216  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr 1218  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1220  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  488  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  490  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction NOP <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  518  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B17" 
    xhandlers
    flags 
    probability 4576860583228857338
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  832  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  834  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD <|@ <|@
      nr  858  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  864  <|@ instruction r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2122  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2124  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2126  <|@ instruction NOP <|@ <|@
      nr 2128  <|@ instruction NOP <|@ <|@
      nr 2130  <|@ instruction NOP <|@ <|@
      nr 2132  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] <|@ <|@
      nr 2134  <|@ instruction r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed] <|@ <|@
      nr 2136  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" "B64" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 2156  <|@ instruction NOP <|@ <|@
      nr 2158  <|@ instruction NOP <|@ <|@
      nr 2160  <|@ instruction NOP <|@ <|@
      nr 2162  <|@ instruction NOP <|@ <|@
      nr 2164  <|@ instruction NOP <|@ <|@
      nr 2166  <|@ instruction NOP <|@ <|@
      nr 2168  <|@ instruction NOP <|@ <|@
      nr 2170  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2172  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2174  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1448  <|@ instruction r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5] <|@ <|@
      nr 1454  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B34" "B68" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1450  <|@ instruction r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1452  <|@ instruction r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2222  <|@ instruction NOP <|@ <|@
      nr 2224  <|@ instruction NOP <|@ <|@
      nr 2226  <|@ instruction NOP <|@ <|@
      nr 2228  <|@ instruction NOP <|@ <|@
      nr 2230  <|@ instruction NOP <|@ <|@
      nr 2232  <|@ instruction NOP <|@ <|@
      nr 2234  <|@ instruction NOP <|@ <|@
      nr 2236  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2238  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ st <@st|@reference-map: [r8:0, r9:0]
live-base-pointers: []
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89]
locals: r8|QWORD[.] r9|QWORD[.] - rbp|DWORD 
>@ <|@ instruction DEOPT info [bci:89] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2178  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction NOP <|@ <|@
      nr 2182  <|@ instruction NOP <|@ <|@
      nr 2184  <|@ instruction NOP <|@ <|@
      nr 2186  <|@ instruction NOP <|@ <|@
      nr 2188  <|@ instruction NOP <|@ <|@
      nr 2190  <|@ instruction NOP <|@ <|@
      nr 2192  <|@ instruction NOP <|@ <|@
      nr 2194  <|@ instruction MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD <|@ <|@
      nr 2196  <|@ instruction MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD <|@ <|@
      nr 2198  <|@ st <@st|@reference-map: [stack:8]
live-base-pointers: []
java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39]
locals: stack:40|QWORD[.] - 
java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:39, 90] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B66" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2140  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2142  <|@ instruction NOP <|@ <|@
      nr 2144  <|@ instruction NOP <|@ <|@
      nr 2146  <|@ instruction NOP <|@ <|@
      nr 2148  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] <|@ <|@
      nr 2150  <|@ instruction r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd] <|@ <|@
      nr 2152  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 2202  <|@ instruction stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2204  <|@ instruction NOP <|@ <|@
      nr 2206  <|@ instruction NOP <|@ <|@
      nr 2208  <|@ instruction NOP <|@ <|@
      nr 2210  <|@ instruction r11|QWORD = MOVE input: long[1304|0x518] <|@ <|@
      nr 2212  <|@ instruction r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5] <|@ <|@
      nr 2218  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokespecial #0          // java.lang.Object.<init>:()void
     4: aload_0       
     5: iconst_0      
     6: putfield      #1          // acceptMode:int
     9: aload_0       
    10: iconst_m1     
    11: putfield      #2          // first:int
    14: aload_0       
    15: iconst_0      
    16: putfield      #3          // last:int
    19: aload_0       
    20: iconst_m1     
    21: putfield      #4          // oldLast:int
    24: aload_0       
    25: iconst_0      
    26: putfield      #5          // lastAppendPosition:int
    29: aload_0       
    30: iconst_0      
    31: putfield      #6          // transparentBounds:boolean
    34: aload_0       
    35: iconst_1      
    36: putfield      #7          // anchoringBounds:boolean
    39: aload_0       
    40: aload_1       
    41: putfield      #8          // parentPattern:java.util.regex.Pattern
    44: aload_0       
    45: aload_2       
    46: putfield      #9          // text:java.lang.CharSequence
    49: aload_1       
    50: getfield      #10         // java.util.regex.Pattern.capturingGroupCount:int
    53: bipush        10
    55: invokestatic  #11         // java.lang.Math.max:(int, int)int
    58: istore_3      
    59: aload_0       
    60: iload_3       
    61: iconst_2      
    62: imul          
    63: newarray      int
    65: putfield      #12         // groups:int[]
    68: aload_0       
    69: aload_1       
    70: getfield      #13         // java.util.regex.Pattern.localCount:int
    73: newarray      int
    75: putfield      #14         // locals:int[]
    78: aload_0       
    79: aload_1       
    80: getfield      #15         // java.util.regex.Pattern.localTCNCount:int
    83: anewarray     #64         // java.util.regex.IntHashSet
    86: putfield      #16         // localsPos:java.util.regex.IntHashSet[]
    89: aload_0       
    90: invokevirtual #17         // reset:()java.util.regex.Matcher
    93: pop           
    94: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f85b00c000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048896c24204c8bd64c8bda4c8bc1418b4b18458b4b1c418b5b1441c742180000000041c7421cffffffff41c742200000000041c74224ffffffff41c742280000000041c642320041c642330141807f40000f842e000000418b523448c1e2034885d20f841d000000498b77284883fe000f84c00b00004883ee084989772849037738488916498bf348c1ee0341897234498bf24933f348c1ee160f844b0000004d85db0f8442000000498bf248c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84690b00004883ea08498957484903575848893241807f40000f842e000000418b523c48c1e2034885d20f841d000000498b77284883fe000f843f0b00004883ee084989772849037738488916498bf048c1ee034189723c498bf24933f048c1ee160f844b0000004d85c00f8442000000498bf248c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84e80a00004883ea084989574849035758488932498b97b801000083f90abe0a0000008be90f4cee448bed41d1e5458bf5498bce48c1e102488d49174883e1f8488bf14803f2493bb7c80100000f87c508000090909090909090909090909090904989b7b80100000f188411000100000f188411400100000f1884118001000048c70201000000c74208addeadde44896a0c488d79f04881ff000800000f83dd08000090909048c7c610000000e9270000006666660f1f840000000000666666900f1f4400009090909090909048c7043200000000488d760890909090483bce77e490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000418b723848c1e6034885f60f841d000000498b4f284883f9000f84a80900004883e90849894f2849034f38488931488bca48c1e90341894a38498bca4833ca48c1e9160f8442000000498bca48c1e90948be00e0368d787f00004803ce8039027429f083042400803900741fc60100498b77484885f60f845a0900004883ee08498977484903775848890e498bb7b8010000418bf9488bcf48c1e102488d49174883e1f8488bc14803c6493b87c80100000f87bb0600009090909090909090909090909090498987b80100000f188431000100000f188431400100000f1884318001000048c70601000000c74608addeadde44894e0c488d41f04881f8000800000f836907000090909048c7c010000000e92e0000006666660f1f840000000000666666900f1f840000000000666666909090909090909048c7040600000000488d400890909090483bc877e4909090909090904c895c2410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000418b424048c1e0034885c00f841d000000498b4f284883f9000f84210800004883e90849894f2849034f38488901488bce48c1e90341894a40498bca4833ce48c1e9160f8442000000498bca48c1e90948b800e0368d787f00004803c88039027429f083042400803900741fc60100498b47484885c00f84d30700004883e8084989474849034758488908498b87b80100008bcb48c1e102488d49174883e1f84c8bd94c03d84d3b9fc80100000f875205000090909090909090909090909090904d899fb80100000f188401000100000f188401400100000f1884018001000048c70001000000c74008addeadde89580c4c8d59f04981fb000800000f837305000090909049c7c310000000e92e0000006666660f1f840000000000666666900f1f84000000000066666690909090909090904ac70418000000004d8d5b0890909090493bcb77e49090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000458b5a4449c1e3034d85db0f841d000000498b4f284883f9000f84ac0600004883e90849894f2849034f384c8919488bc848c1e90341894a44498bca4833c848c1e9160f8442000000498bca48c1e90949bb00e0368d787f00004903cb8039027429f083042400803900741fc601004d8b5f484d85db0f845e0600004983eb084d895f484d035f5849890bf7c5ffffff7f0f849b030000909090904183fd020f8278030000909090909090418bcdffc94863c94c3bf10f866d05000090909090909090f7c5ffffff7f0f84d0040000909090909090c74210ffffffff4183fd03b902000000410f42cdb801000000e915000000660f1f4400009090909090c7448210ffffffffffc0909090903bc87fe9909090909090418d4df0e92b0100006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090c7448210ffffffff448bd841ffc342c7449a10ffffffff448d580242c7449a10ffffffff448d580342c7449a10ffffffff448d580442c7449a10ffffffff448d580542c7449a10ffffffff448d580642c7449a10ffffffff448d580742c7449a10ffffffff448d580842c7449a10ffffffff448d580942c7449a10ffffffff448d580a42c7449a10ffffffff448d580b42c7449a10ffffffff448d580c42c7449a10ffffffff448d580d42c7449a10ffffffff448d580e42c7449a10ffffffff448d580f42c7449a10ffffffff8d4010909090903bc80f8fe3feffff909090e92a0000006666660f1f840000000000666666900f1f840000000000666666909090909090c7448210ffffffffffc090909090443be87fe8909090909090904585c90f848c010000909090904183f9020f8276010000909090909090418bc9ffc94863c9483bf90f861a030000909090909090909090c74610ffffffff4183f903b902000000410f42c9ba01000000e91b0000000f1f840000000000666666909090909090c7449610ffffffffffc2909090903bca7fe9909090909090418d49fce9580000006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090c7449610ffffffff8bc2ffc0c7448610ffffffff8d4202c7448610ffffffff8d4203c7448610ffffffff8d5204909090903bca7fba909090e9210000006666660f1f840000000000666666906666909090909090c7449610ffffffffffc290909090443bca7fe89090909090909041817808addeadde0f8549020000909090909090418b48148b34cd0c00000085db0f85890100009090909090909090909090909041c7420c00000000410fbe4810d3ee4189721041ff422c488b6c24204883c428493ba7500400000f87d0020000c5f877c3909090e99afcffff909090e99cfeffff909090eb82909090e95afeffff4c895c241048beaddeaddeaddeadde909090909090909090488bca418bd1e8000000000f1f8400000000008500488bf0488bd1e9aff9ffff488bca9090909090909090909048baaddeaddeaddeadde4c8bde488bf28bd3e8000000000f1f8400000000008500498bf3488bd1e911fbffff4c895c241048beaddeaddeaddeadde909090909090909090418bd5e8000000000f1f8400000000008500488bd04c8b5c2410e99af7ffff4c89542408909090909090909090498bcb4c8bd74c8bd8498d7b104833c0f348aa498bc3498bfa4c8b542408e9a5faffff4c895c24104c89542408909090909090909090488bcf488d7a104833c0f348aae940f7ffff4c895c24104c895424084c8bd7909090909090909090488bc8488d7e104833c0f348aa498bfa4c8b542408e9b0f8ffff4c8954240890909049c7c31400000041baed7ffeff90909090909090458997840400004d899f90040000e8000000000f1f8400000000004c8954240890909049c7c30000000041bae5dffeff4c8b4c24104c8b44240890909090909090458997840400004d899f90040000e8000000000f1f8400000000004c895424089090909090909041c78784040000e504ffff49c7879004000018080000e8000000000f1f8400000000004c8954240890909049c7c39402000041bacdf7feffe954ffffff4c8954240890909049c7c31805000041bae514ffffe971ffffff48896c2420e800000000e941f3fffff448891424e800000000e941f4fffff448893424e800000000e998f4fffff448891424e800000000e9c2f4fffff448893424e800000000e919f5fffff448893424e800000000e959f6fffff448890c24e800000000e9a7f6fffff448890424e800000000e9e0f7fffff448890c24e800000000e92ef8fffff44c891c24e800000000e955f9fffff448890c24e800000000e9a3f9fffff4488d0d1cfdffff49898f68040000e95df2fffff441c78784040000f537ffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f8feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f2feff49c7879004000000000000e8000000000f1f84000000000041c787840400008f6afcff49c7879004000000000000e8000000000f1f84000000000041c787840400008f22fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008fb1fcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 NOP  <||@
  Comment 111 108 NOP  <||@
  Comment 112 110 NOP  <||@
  Comment 113 112 NOP  <||@
  Comment 114 114 NOP  <||@
  Comment 115 116 NOP  <||@
  Comment 116 118 NOP  <||@
  Comment 117 120 NOP  <||@
  Comment 118 122 NOP  <||@
  Comment 119 124 NOP  <||@
  Comment 120 126 NOP  <||@
  Comment 121 128 NOP  <||@
  Comment 122 130 NOP  <||@
  Comment 123 132 NOP  <||@
  Comment 124 134 NOP  <||@
  Comment 125 136 NOP  <||@
  Comment 126 138 NOP  <||@
  Comment 127 140 NOP  <||@
  Comment 128 142 NOP  <||@
  Comment 129 144 NOP  <||@
  Comment 130 146 NOP  <||@
  Comment 131 148 NOP  <||@
  Comment 132 150 NOP  <||@
  Comment 133 152 NOP  <||@
  Comment 134 154 NOP  <||@
  Comment 135 156 NOP  <||@
  Comment 136 158 NOP  <||@
  Comment 137 160 NOP  <||@
  Comment 138 162 NOP  <||@
  Comment 139 164 NOP  <||@
  Comment 140 166 NOP  <||@
  Comment 141 168 NOP  <||@
  Comment 142 170 NOP  <||@
  Comment 143 172 NOP  <||@
  Comment 144 174 NOP  <||@
  Comment 145 176 NOP  <||@
  Comment 146 178 NOP  <||@
  Comment 147 180 NOP  <||@
  Comment 148 182 NOP  <||@
  Comment 149 184 NOP  <||@
  Comment 150 186 NOP  <||@
  Comment 151 188 NOP  <||@
  Comment 152 190 NOP  <||@
  Comment 153 192 NOP  <||@
  Comment 154 194 NOP  <||@
  Comment 155 196 NOP  <||@
  Comment 156 198 NOP  <||@
  Comment 157 200 NOP  <||@
  Comment 158 202 NOP  <||@
  Comment 159 204 NOP  <||@
  Comment 160 206 NOP  <||@
  Comment 161 208 NOP  <||@
  Comment 162 210 NOP  <||@
  Comment 163 212 NOP  <||@
  Comment 164 214 NOP  <||@
  Comment 165 216 NOP  <||@
  Comment 166 218 NOP  <||@
  Comment 167 220 NOP  <||@
  Comment 168 222 NOP  <||@
  Comment 169 224 NOP  <||@
  Comment 170 226 NOP  <||@
  Comment 171 228 NOP  <||@
  Comment 172 230 NOP  <||@
  Comment 173 232 NOP  <||@
  Comment 174 234 NOP  <||@
  Comment 175 236 NOP  <||@
  Comment 176 238 NOP  <||@
  Comment 177 240 NOP  <||@
  Comment 178 242 NOP  <||@
  Comment 179 244 NOP  <||@
  Comment 180 246 NOP  <||@
  Comment 181 248 NOP  <||@
  Comment 182 250 NOP  <||@
  Comment 183 252 NOP  <||@
  Comment 184 254 NOP  <||@
  Comment 185 256 NOP  <||@
  Comment 186 258 NOP  <||@
  Comment 187 260 NOP  <||@
  Comment 188 262 NOP  <||@
  Comment 189 264 NOP  <||@
  Comment 190 266 NOP  <||@
  Comment 191 268 NOP  <||@
  Comment 192 270 NOP  <||@
  Comment 193 272 NOP  <||@
  Comment 194 274 NOP  <||@
  Comment 195 276 NOP  <||@
  Comment 196 278 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 201 280 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD  <||@
  Comment 201 282 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 204 284 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 207 286 r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 210 288 rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 210 [r8:0, r10:0, r11:0]at java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            |3 
     locals:  |r10|QWORD[.]  |Object[null]  |r8|QWORD[.]  |-   <||@
  Comment 210 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 214 290 r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD  <||@
  Comment 218 292 rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 222 294 MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 230 296 MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 238 298 MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 246 300 MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 254 302 MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 262 304 MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE  <||@
  Comment 267 306 MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE  <||@
  Comment 272 308 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 329 310 rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 336 312 MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 340 314 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 431 316 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 488 318 rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 495 320 MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 499 322 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 590 324 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 597 326 CMP x: rcx|DWORD y: 10 size: DWORD  <||@
  Comment 600 328 rsi|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 605 330 rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: <  <||@
  Comment 610 332 r13|DWORD = SHL value: rbp|DWORD size: DWORD  <||@
  Comment 616 334 r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 619 336 rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD  <||@
  Comment 626 338 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 630 340 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 634 342 rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 640 344 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 653 block B2 null  <||@
  Comment 653 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 653 384 NOP  <||@
  Comment 654 386 NOP  <||@
  Comment 655 388 NOP  <||@
  Comment 656 390 NOP  <||@
  Comment 657 392 NOP  <||@
  Comment 658 394 NOP  <||@
  Comment 659 396 NOP  <||@
  Comment 660 398 NOP  <||@
  Comment 661 400 NOP  <||@
  Comment 662 402 NOP  <||@
  Comment 663 404 NOP  <||@
  Comment 664 406 NOP  <||@
  Comment 665 408 NOP  <||@
  Comment 666 410 NOP  <||@
  Comment 667 412 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 674 414 AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 682 416 AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 690 418 AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 698 420 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 705 422 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 705 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 712 424 MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 716 426 rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 720 428 CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 733 block B3 null  <||@
  Comment 733 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 733 432 NOP  <||@
  Comment 734 434 NOP  <||@
  Comment 735 436 NOP  <||@
  Comment 736 438 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 743 440 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 748 block B5 loop 0 depth 1 header:791|LoopBegin  <||@
  Comment 748 454 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 456 NOP  <||@
  Comment 769 458 NOP  <||@
  Comment 770 460 NOP  <||@
  Comment 771 462 NOP  <||@
  Comment 772 464 NOP  <||@
  Comment 773 466 NOP  <||@
  Comment 774 468 NOP  <||@
  Comment 775 470 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 783 472 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 787 474 JUMP ~outgoingValues: [] destination: B5 -> B4  <||@
  Comment 787 block B4 loop 0 depth 1 header:791|LoopBegin  <||@
  Comment 787 442 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 787 444 NOP  <||@
  Comment 788 446 NOP  <||@
  Comment 789 448 NOP  <||@
  Comment 790 450 NOP  <||@
  Comment 791 452 CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 796 block B6 null  <||@
  Comment 796 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 796 478 NOP  <||@
  Comment 797 480 NOP  <||@
  Comment 798 482 NOP  <||@
  Comment 799 484 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 799 block B8 null  <||@
  Comment 799 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 522 NOP  <||@
  Comment 800 524 NOP  <||@
  Comment 801 526 NOP  <||@
  Comment 802 528 NOP  <||@
  Comment 803 530 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 803 532 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 803 block B9 null  <||@
  Comment 803 534 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 803 536 NOP  <||@
  Comment 804 538 NOP  <||@
  Comment 805 540 NOP  <||@
  Comment 806 542 NOP  <||@
  Comment 807 544 NOP  <||@
  Comment 808 546 NOP  <||@
  Comment 809 548 NOP  <||@
  Comment 810 550 NOP  <||@
  Comment 811 552 NOP  <||@
  Comment 812 554 NOP  <||@
  Comment 813 556 NOP  <||@
  Comment 814 558 NOP  <||@
  Comment 815 560 NOP  <||@
  Comment 816 562 NOP  <||@
  Comment 817 564 NOP  <||@
  Comment 818 566 NOP  <||@
  Comment 819 568 NOP  <||@
  Comment 820 570 NOP  <||@
  Comment 821 572 NOP  <||@
  Comment 822 574 NOP  <||@
  Comment 823 576 NOP  <||@
  Comment 824 578 NOP  <||@
  Comment 825 580 NOP  <||@
  Comment 826 582 NOP  <||@
  Comment 827 584 NOP  <||@
  Comment 828 586 NOP  <||@
  Comment 829 588 NOP  <||@
  Comment 830 590 NOP  <||@
  Comment 831 592 NOP  <||@
  Comment 832 594 NOP  <||@
  Comment 833 596 NOP  <||@
  Comment 834 598 NOP  <||@
  Comment 835 600 NOP  <||@
  Comment 836 602 NOP  <||@
  Comment 837 604 NOP  <||@
  Comment 838 606 NOP  <||@
  Comment 839 608 NOP  <||@
  Comment 840 610 NOP  <||@
  Comment 841 612 NOP  <||@
  Comment 842 614 NOP  <||@
  Comment 843 616 NOP  <||@
  Comment 844 618 NOP  <||@
  Comment 845 620 NOP  <||@
  Comment 846 622 NOP  <||@
  Comment 847 624 NOP  <||@
  Comment 848 626 NOP  <||@
  Comment 849 628 NOP  <||@
  Comment 850 630 NOP  <||@
  Comment 851 632 NOP  <||@
  Comment 852 634 NOP  <||@
  Comment 853 636 NOP  <||@
  Comment 854 638 NOP  <||@
  Comment 855 640 NOP  <||@
  Comment 856 642 NOP  <||@
  Comment 857 644 NOP  <||@
  Comment 858 646 NOP  <||@
  Comment 859 648 NOP  <||@
  Comment 860 650 NOP  <||@
  Comment 861 652 NOP  <||@
  Comment 862 654 NOP  <||@
  Comment 863 656 NOP  <||@
  Comment 864 658 NOP  <||@
  Comment 865 660 NOP  <||@
  Comment 866 662 NOP  <||@
  Comment 867 664 NOP  <||@
  Comment 868 666 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 925 668 rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 932 670 MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 936 672 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1018 674 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1025 676 rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1028 678 rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD  <||@
  Comment 1035 680 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 1039 682 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 1043 684 rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1049 686 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 1062 block B11 null  <||@
  Comment 1062 726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1062 728 NOP  <||@
  Comment 1063 730 NOP  <||@
  Comment 1064 732 NOP  <||@
  Comment 1065 734 NOP  <||@
  Comment 1066 736 NOP  <||@
  Comment 1067 738 NOP  <||@
  Comment 1068 740 NOP  <||@
  Comment 1069 742 NOP  <||@
  Comment 1070 744 NOP  <||@
  Comment 1071 746 NOP  <||@
  Comment 1072 748 NOP  <||@
  Comment 1073 750 NOP  <||@
  Comment 1074 752 NOP  <||@
  Comment 1075 754 NOP  <||@
  Comment 1076 756 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 1083 758 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1091 760 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1099 762 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1107 764 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1114 766 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 1114 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 1121 768 MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1125 770 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 1129 772 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1142 block B12 null  <||@
  Comment 1142 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1142 776 NOP  <||@
  Comment 1143 778 NOP  <||@
  Comment 1144 780 NOP  <||@
  Comment 1145 782 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1152 784 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 1157 block B14 loop 1 depth 1 header:871|LoopBegin  <||@
  Comment 1157 798 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1184 800 NOP  <||@
  Comment 1185 802 NOP  <||@
  Comment 1186 804 NOP  <||@
  Comment 1187 806 NOP  <||@
  Comment 1188 808 NOP  <||@
  Comment 1189 810 NOP  <||@
  Comment 1190 812 NOP  <||@
  Comment 1191 814 MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1199 816 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 1203 818 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 1203 block B13 loop 1 depth 1 header:871|LoopBegin  <||@
  Comment 1203 786 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1203 788 NOP  <||@
  Comment 1204 790 NOP  <||@
  Comment 1205 792 NOP  <||@
  Comment 1206 794 NOP  <||@
  Comment 1207 796 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 1212 block B15 null  <||@
  Comment 1212 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1212 822 NOP  <||@
  Comment 1213 824 NOP  <||@
  Comment 1214 826 NOP  <||@
  Comment 1215 828 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1215 block B17 null  <||@
  Comment 1215 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1215 870 NOP  <||@
  Comment 1216 872 NOP  <||@
  Comment 1217 874 NOP  <||@
  Comment 1218 876 NOP  <||@
  Comment 1219 878 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 1219 880 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 882 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1224 block B18 null  <||@
  Comment 1224 884 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1224 886 NOP  <||@
  Comment 1225 888 NOP  <||@
  Comment 1226 890 NOP  <||@
  Comment 1227 892 NOP  <||@
  Comment 1228 894 NOP  <||@
  Comment 1229 896 NOP  <||@
  Comment 1230 898 NOP  <||@
  Comment 1231 900 NOP  <||@
  Comment 1232 902 NOP  <||@
  Comment 1233 904 NOP  <||@
  Comment 1234 906 NOP  <||@
  Comment 1235 908 NOP  <||@
  Comment 1236 910 NOP  <||@
  Comment 1237 912 NOP  <||@
  Comment 1238 914 NOP  <||@
  Comment 1239 916 NOP  <||@
  Comment 1240 918 NOP  <||@
  Comment 1241 920 NOP  <||@
  Comment 1242 922 NOP  <||@
  Comment 1243 924 NOP  <||@
  Comment 1244 926 NOP  <||@
  Comment 1245 928 NOP  <||@
  Comment 1246 930 NOP  <||@
  Comment 1247 932 NOP  <||@
  Comment 1248 934 NOP  <||@
  Comment 1249 936 NOP  <||@
  Comment 1250 938 NOP  <||@
  Comment 1251 940 NOP  <||@
  Comment 1252 942 NOP  <||@
  Comment 1253 944 NOP  <||@
  Comment 1254 946 NOP  <||@
  Comment 1255 948 NOP  <||@
  Comment 1256 950 NOP  <||@
  Comment 1257 952 NOP  <||@
  Comment 1258 954 NOP  <||@
  Comment 1259 956 NOP  <||@
  Comment 1260 958 NOP  <||@
  Comment 1261 960 NOP  <||@
  Comment 1262 962 NOP  <||@
  Comment 1263 964 NOP  <||@
  Comment 1264 966 NOP  <||@
  Comment 1265 968 NOP  <||@
  Comment 1266 970 NOP  <||@
  Comment 1267 972 NOP  <||@
  Comment 1268 974 NOP  <||@
  Comment 1269 976 NOP  <||@
  Comment 1270 978 NOP  <||@
  Comment 1271 980 NOP  <||@
  Comment 1272 982 NOP  <||@
  Comment 1273 984 NOP  <||@
  Comment 1274 986 NOP  <||@
  Comment 1275 988 NOP  <||@
  Comment 1276 990 NOP  <||@
  Comment 1277 992 NOP  <||@
  Comment 1278 994 NOP  <||@
  Comment 1279 996 NOP  <||@
  Comment 1280 998 NOP  <||@
  Comment 1281 1000 NOP  <||@
  Comment 1282 1002 NOP  <||@
  Comment 1283 1004 NOP  <||@
  Comment 1284 1006 NOP  <||@
  Comment 1285 1008 NOP  <||@
  Comment 1286 1010 NOP  <||@
  Comment 1287 1012 NOP  <||@
  Comment 1288 1014 NOP  <||@
  Comment 1289 1016 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1346 1018 rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 1353 1020 MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1357 1022 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1439 1024 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1446 1026 rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1448 1028 rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD  <||@
  Comment 1452 1030 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 1456 1032 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 1460 1034 r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1466 1036 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 1479 block B20 null  <||@
  Comment 1479 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1479 1082 NOP  <||@
  Comment 1480 1084 NOP  <||@
  Comment 1481 1086 NOP  <||@
  Comment 1482 1088 NOP  <||@
  Comment 1483 1090 NOP  <||@
  Comment 1484 1092 NOP  <||@
  Comment 1485 1094 NOP  <||@
  Comment 1486 1096 NOP  <||@
  Comment 1487 1098 NOP  <||@
  Comment 1488 1100 NOP  <||@
  Comment 1489 1102 NOP  <||@
  Comment 1490 1104 NOP  <||@
  Comment 1491 1106 NOP  <||@
  Comment 1492 1108 NOP  <||@
  Comment 1493 1110 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 1500 1112 AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1508 1114 AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1516 1116 AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1524 1118 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1531 1120 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}  <||@
  Comment 1531 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}}  <||@
  Comment 1538 1122 MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1541 1124 r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 1545 1126 CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1558 block B21 null  <||@
  Comment 1558 1128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1558 1130 NOP  <||@
  Comment 1559 1132 NOP  <||@
  Comment 1560 1134 NOP  <||@
  Comment 1561 1136 r11|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1568 1138 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1573 block B23 loop 2 depth 1 header:943|LoopBegin  <||@
  Comment 1573 1152 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1600 1154 NOP  <||@
  Comment 1601 1156 NOP  <||@
  Comment 1602 1158 NOP  <||@
  Comment 1603 1160 NOP  <||@
  Comment 1604 1162 NOP  <||@
  Comment 1605 1164 NOP  <||@
  Comment 1606 1166 NOP  <||@
  Comment 1607 1168 MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1615 1170 r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD  <||@
  Comment 1619 1172 JUMP ~outgoingValues: [] destination: B23 -> B22  <||@
  Comment 1619 block B22 loop 2 depth 1 header:943|LoopBegin  <||@
  Comment 1619 1140 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1619 1142 NOP  <||@
  Comment 1620 1144 NOP  <||@
  Comment 1621 1146 NOP  <||@
  Comment 1622 1148 NOP  <||@
  Comment 1623 1150 CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 1628 block B24 null  <||@
  Comment 1628 1174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1628 1176 NOP  <||@
  Comment 1629 1178 NOP  <||@
  Comment 1630 1180 NOP  <||@
  Comment 1631 1182 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 1631 block B26 null  <||@
  Comment 1631 1222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1631 1224 NOP  <||@
  Comment 1632 1226 NOP  <||@
  Comment 1633 1228 NOP  <||@
  Comment 1634 1230 NOP  <||@
  Comment 1635 1232 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1635 1234 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 1635 block B27 null  <||@
  Comment 1635 1236 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1635 1238 NOP  <||@
  Comment 1636 1240 NOP  <||@
  Comment 1637 1242 NOP  <||@
  Comment 1638 1244 NOP  <||@
  Comment 1639 1246 NOP  <||@
  Comment 1640 1248 NOP  <||@
  Comment 1641 1250 NOP  <||@
  Comment 1642 1252 NOP  <||@
  Comment 1643 1254 NOP  <||@
  Comment 1644 1256 NOP  <||@
  Comment 1645 1258 NOP  <||@
  Comment 1646 1260 NOP  <||@
  Comment 1647 1262 NOP  <||@
  Comment 1648 1264 NOP  <||@
  Comment 1649 1266 NOP  <||@
  Comment 1650 1268 NOP  <||@
  Comment 1651 1270 NOP  <||@
  Comment 1652 1272 NOP  <||@
  Comment 1653 1274 NOP  <||@
  Comment 1654 1276 NOP  <||@
  Comment 1655 1278 NOP  <||@
  Comment 1656 1280 NOP  <||@
  Comment 1657 1282 NOP  <||@
  Comment 1658 1284 NOP  <||@
  Comment 1659 1286 NOP  <||@
  Comment 1660 1288 NOP  <||@
  Comment 1661 1290 NOP  <||@
  Comment 1662 1292 NOP  <||@
  Comment 1663 1294 NOP  <||@
  Comment 1664 1296 NOP  <||@
  Comment 1665 1298 NOP  <||@
  Comment 1666 1300 NOP  <||@
  Comment 1667 1302 NOP  <||@
  Comment 1668 1304 NOP  <||@
  Comment 1669 1306 NOP  <||@
  Comment 1670 1308 NOP  <||@
  Comment 1671 1310 NOP  <||@
  Comment 1672 1312 NOP  <||@
  Comment 1673 1314 NOP  <||@
  Comment 1674 1316 NOP  <||@
  Comment 1675 1318 NOP  <||@
  Comment 1676 1320 NOP  <||@
  Comment 1677 1322 NOP  <||@
  Comment 1678 1324 NOP  <||@
  Comment 1679 1326 NOP  <||@
  Comment 1680 1328 NOP  <||@
  Comment 1681 1330 NOP  <||@
  Comment 1682 1332 NOP  <||@
  Comment 1683 1334 NOP  <||@
  Comment 1684 1336 NOP  <||@
  Comment 1685 1338 NOP  <||@
  Comment 1686 1340 NOP  <||@
  Comment 1687 1342 NOP  <||@
  Comment 1688 1344 NOP  <||@
  Comment 1689 1346 NOP  <||@
  Comment 1690 1348 NOP  <||@
  Comment 1691 1350 NOP  <||@
  Comment 1692 1352 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1749 1354 rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 1756 1356 MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1760 1358 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1842 1360 TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD  <||@
  Comment 1854 block B29 null  <||@
  Comment 1854 1372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1854 1374 NOP  <||@
  Comment 1855 1376 NOP  <||@
  Comment 1856 1378 NOP  <||@
  Comment 1857 1380 NOP  <||@
  Comment 1858 1382 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1868 block B31 null  <||@
  Comment 1868 1394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1868 1396 NOP  <||@
  Comment 1869 1398 NOP  <||@
  Comment 1870 1400 NOP  <||@
  Comment 1871 1402 NOP  <||@
  Comment 1872 1404 NOP  <||@
  Comment 1873 1406 NOP  <||@
  Comment 1874 1408 rcx|DWORD = DEC value: r13|DWORD size: DWORD  <||@
  Comment 1879 1410 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 1882 1412 CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD  <||@
  Comment 1891 block B32 null  <||@
  Comment 1891 1414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1891 1416 NOP  <||@
  Comment 1892 1418 NOP  <||@
  Comment 1893 1420 NOP  <||@
  Comment 1894 1422 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 1894 block B33 null  <||@
  Comment 1894 1424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1894 1426 NOP  <||@
  Comment 1895 1428 NOP  <||@
  Comment 1896 1430 NOP  <||@
  Comment 1897 1432 NOP  <||@
  Comment 1898 1434 TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD  <||@
  Comment 1910 block B35 null  <||@
  Comment 1910 1456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1910 1458 NOP  <||@
  Comment 1911 1460 NOP  <||@
  Comment 1912 1462 NOP  <||@
  Comment 1913 1464 NOP  <||@
  Comment 1914 1466 NOP  <||@
  Comment 1915 1468 NOP  <||@
  Comment 1916 1470 MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 1923 1472 CMP x: r13|DWORD y: 3 size: DWORD  <||@
  Comment 1927 1474 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<|  <||@
  Comment 1936 1476 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1941 1478 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1946 block B37 loop 3 depth 1 header:68|LoopBegin  <||@
  Comment 1946 1492 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1952 1494 NOP  <||@
  Comment 1953 1496 NOP  <||@
  Comment 1954 1498 NOP  <||@
  Comment 1955 1500 NOP  <||@
  Comment 1956 1502 NOP  <||@
  Comment 1957 1504 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1965 1506 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 1967 1508 JUMP ~outgoingValues: [] destination: B37 -> B36  <||@
  Comment 1967 block B36 loop 3 depth 1 header:68|LoopBegin  <||@
  Comment 1967 1480 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1967 1482 NOP  <||@
  Comment 1968 1484 NOP  <||@
  Comment 1969 1486 NOP  <||@
  Comment 1970 1488 NOP  <||@
  Comment 1971 1490 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1975 block B38 null  <||@
  Comment 1975 1510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1975 1512 NOP  <||@
  Comment 1976 1514 NOP  <||@
  Comment 1977 1516 NOP  <||@
  Comment 1978 1518 NOP  <||@
  Comment 1979 1520 NOP  <||@
  Comment 1980 1522 NOP  <||@
  Comment 1981 1524 rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD  <||@
  Comment 1985 1526 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 1990 block B40 loop 4 depth 1 header:389|LoopBegin  <||@
  Comment 1990 1540 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2016 1542 NOP  <||@
  Comment 2017 1544 NOP  <||@
  Comment 2018 1546 NOP  <||@
  Comment 2019 1548 NOP  <||@
  Comment 2020 1550 NOP  <||@
  Comment 2021 1552 NOP  <||@
  Comment 2022 1554 NOP  <||@
  Comment 2023 1556 NOP  <||@
  Comment 2024 1558 NOP  <||@
  Comment 2025 1560 NOP  <||@
  Comment 2026 1562 NOP  <||@
  Comment 2027 1564 NOP  <||@
  Comment 2028 1566 NOP  <||@
  Comment 2029 1568 NOP  <||@
  Comment 2030 1570 NOP  <||@
  Comment 2031 1572 NOP  <||@
  Comment 2032 1574 NOP  <||@
  Comment 2033 1576 NOP  <||@
  Comment 2034 1578 NOP  <||@
  Comment 2035 1580 NOP  <||@
  Comment 2036 1582 NOP  <||@
  Comment 2037 1584 NOP  <||@
  Comment 2038 1586 NOP  <||@
  Comment 2039 1588 NOP  <||@
  Comment 2040 1590 NOP  <||@
  Comment 2041 1592 NOP  <||@
  Comment 2042 1594 NOP  <||@
  Comment 2043 1596 NOP  <||@
  Comment 2044 1598 NOP  <||@
  Comment 2045 1600 NOP  <||@
  Comment 2046 1602 NOP  <||@
  Comment 2047 1604 NOP  <||@
  Comment 2048 1606 NOP  <||@
  Comment 2049 1608 NOP  <||@
  Comment 2050 1610 NOP  <||@
  Comment 2051 1612 NOP  <||@
  Comment 2052 1614 NOP  <||@
  Comment 2053 1616 NOP  <||@
  Comment 2054 1618 NOP  <||@
  Comment 2055 1620 NOP  <||@
  Comment 2056 1622 NOP  <||@
  Comment 2057 1624 NOP  <||@
  Comment 2058 1626 NOP  <||@
  Comment 2059 1628 NOP  <||@
  Comment 2060 1630 NOP  <||@
  Comment 2061 1632 NOP  <||@
  Comment 2062 1634 NOP  <||@
  Comment 2063 1636 NOP  <||@
  Comment 2064 1638 NOP  <||@
  Comment 2065 1640 NOP  <||@
  Comment 2066 1642 NOP  <||@
  Comment 2067 1644 NOP  <||@
  Comment 2068 1646 NOP  <||@
  Comment 2069 1648 NOP  <||@
  Comment 2070 1650 NOP  <||@
  Comment 2071 1652 NOP  <||@
  Comment 2072 1654 NOP  <||@
  Comment 2073 1656 NOP  <||@
  Comment 2074 1658 NOP  <||@
  Comment 2075 1660 NOP  <||@
  Comment 2076 1662 NOP  <||@
  Comment 2077 1664 NOP  <||@
  Comment 2078 1666 NOP  <||@
  Comment 2079 1668 NOP  <||@
  Comment 2080 1670 NOP  <||@
  Comment 2081 1672 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2089 1674 r11|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 2095 1676 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2104 1678 r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD  <||@
  Comment 2108 1680 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2117 1682 r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD  <||@
  Comment 2121 1684 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2130 1686 r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD  <||@
  Comment 2134 1688 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2143 1690 r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD  <||@
  Comment 2147 1692 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2156 1694 r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD  <||@
  Comment 2160 1696 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2169 1698 r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD  <||@
  Comment 2173 1700 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2182 1702 r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD  <||@
  Comment 2186 1704 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2195 1706 r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD  <||@
  Comment 2199 1708 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2208 1710 r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD  <||@
  Comment 2212 1712 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2221 1714 r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD  <||@
  Comment 2225 1716 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2234 1718 r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD  <||@
  Comment 2238 1720 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2247 1722 r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD  <||@
  Comment 2251 1724 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2260 1726 r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD  <||@
  Comment 2264 1728 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2273 1730 r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD  <||@
  Comment 2277 1732 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2286 1734 rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD  <||@
  Comment 2289 1736 JUMP ~outgoingValues: [] destination: B40 -> B39  <||@
  Comment 2289 block B39 loop 4 depth 1 header:389|LoopBegin  <||@
  Comment 2289 1528 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2289 1530 NOP  <||@
  Comment 2290 1532 NOP  <||@
  Comment 2291 1534 NOP  <||@
  Comment 2292 1536 NOP  <||@
  Comment 2293 1538 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 2301 block B41 null  <||@
  Comment 2301 1738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2301 1740 NOP  <||@
  Comment 2302 1742 NOP  <||@
  Comment 2303 1744 NOP  <||@
  Comment 2304 1746 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 2309 block B43 loop 5 depth 1 header:409|LoopBegin  <||@
  Comment 2309 1760 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2336 1762 NOP  <||@
  Comment 2337 1764 NOP  <||@
  Comment 2338 1766 NOP  <||@
  Comment 2339 1768 NOP  <||@
  Comment 2340 1770 NOP  <||@
  Comment 2341 1772 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2349 1774 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 2351 1776 JUMP ~outgoingValues: [] destination: B43 -> B42  <||@
  Comment 2351 block B42 loop 5 depth 1 header:409|LoopBegin  <||@
  Comment 2351 1748 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2351 1750 NOP  <||@
  Comment 2352 1752 NOP  <||@
  Comment 2353 1754 NOP  <||@
  Comment 2354 1756 NOP  <||@
  Comment 2355 1758 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 2360 block B44 null  <||@
  Comment 2360 1778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2360 1780 NOP  <||@
  Comment 2361 1782 NOP  <||@
  Comment 2362 1784 NOP  <||@
  Comment 2363 1786 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 2363 block B45 null  <||@
  Comment 2363 1788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2363 1790 NOP  <||@
  Comment 2364 1792 NOP  <||@
  Comment 2365 1794 NOP  <||@
  Comment 2366 1796 NOP  <||@
  Comment 2367 1798 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD  <||@
  Comment 2376 block B47 null  <||@
  Comment 2376 1810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2376 1812 NOP  <||@
  Comment 2377 1814 NOP  <||@
  Comment 2378 1816 NOP  <||@
  Comment 2379 1818 NOP  <||@
  Comment 2380 1820 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null  <||@
  Comment 2390 block B49 null  <||@
  Comment 2390 1832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2390 1834 NOP  <||@
  Comment 2391 1836 NOP  <||@
  Comment 2392 1838 NOP  <||@
  Comment 2393 1840 NOP  <||@
  Comment 2394 1842 NOP  <||@
  Comment 2395 1844 NOP  <||@
  Comment 2396 1846 rcx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 2401 1848 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 2404 1850 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD  <||@
  Comment 2413 block B50 null  <||@
  Comment 2413 1852 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2413 1854 NOP  <||@
  Comment 2414 1856 NOP  <||@
  Comment 2415 1858 NOP  <||@
  Comment 2416 1860 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 2416 block B51 null  <||@
  Comment 2416 1862 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2416 1864 NOP  <||@
  Comment 2417 1866 NOP  <||@
  Comment 2418 1868 NOP  <||@
  Comment 2419 1870 NOP  <||@
  Comment 2420 1872 NOP  <||@
  Comment 2421 1874 NOP  <||@
  Comment 2422 1876 MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 2429 1878 CMP x: r9|DWORD y: 3 size: DWORD  <||@
  Comment 2433 1880 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<|  <||@
  Comment 2442 1882 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2447 1884 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 2452 block B53 loop 6 depth 1 header:83|LoopBegin  <||@
  Comment 2452 1898 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2464 1900 NOP  <||@
  Comment 2465 1902 NOP  <||@
  Comment 2466 1904 NOP  <||@
  Comment 2467 1906 NOP  <||@
  Comment 2468 1908 NOP  <||@
  Comment 2469 1910 MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2477 1912 rdx|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 2479 1914 JUMP ~outgoingValues: [] destination: B53 -> B52  <||@
  Comment 2479 block B52 loop 6 depth 1 header:83|LoopBegin  <||@
  Comment 2479 1886 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2479 1888 NOP  <||@
  Comment 2480 1890 NOP  <||@
  Comment 2481 1892 NOP  <||@
  Comment 2482 1894 NOP  <||@
  Comment 2483 1896 CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD  <||@
  Comment 2487 block B54 null  <||@
  Comment 2487 1916 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2487 1918 NOP  <||@
  Comment 2488 1920 NOP  <||@
  Comment 2489 1922 NOP  <||@
  Comment 2490 1924 NOP  <||@
  Comment 2491 1926 NOP  <||@
  Comment 2492 1928 NOP  <||@
  Comment 2493 1930 rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD  <||@
  Comment 2497 1932 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 2502 block B56 loop 7 depth 1 header:433|LoopBegin  <||@
  Comment 2502 1946 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2528 1948 NOP  <||@
  Comment 2529 1950 NOP  <||@
  Comment 2530 1952 NOP  <||@
  Comment 2531 1954 NOP  <||@
  Comment 2532 1956 NOP  <||@
  Comment 2533 1958 NOP  <||@
  Comment 2534 1960 NOP  <||@
  Comment 2535 1962 NOP  <||@
  Comment 2536 1964 NOP  <||@
  Comment 2537 1966 NOP  <||@
  Comment 2538 1968 NOP  <||@
  Comment 2539 1970 NOP  <||@
  Comment 2540 1972 NOP  <||@
  Comment 2541 1974 NOP  <||@
  Comment 2542 1976 NOP  <||@
  Comment 2543 1978 NOP  <||@
  Comment 2544 1980 NOP  <||@
  Comment 2545 1982 MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2553 1984 rax|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 2557 1986 MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2565 1988 rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD  <||@
  Comment 2568 1990 MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2576 1992 rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD  <||@
  Comment 2579 1994 MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2587 1996 rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD  <||@
  Comment 2590 1998 JUMP ~outgoingValues: [] destination: B56 -> B55  <||@
  Comment 2590 block B55 loop 7 depth 1 header:433|LoopBegin  <||@
  Comment 2590 1934 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2590 1936 NOP  <||@
  Comment 2591 1938 NOP  <||@
  Comment 2592 1940 NOP  <||@
  Comment 2593 1942 NOP  <||@
  Comment 2594 1944 CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD  <||@
  Comment 2598 block B57 null  <||@
  Comment 2598 2000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2598 2002 NOP  <||@
  Comment 2599 2004 NOP  <||@
  Comment 2600 2006 NOP  <||@
  Comment 2601 2008 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 2606 block B59 loop 8 depth 1 header:453|LoopBegin  <||@
  Comment 2606 2022 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2624 2024 NOP  <||@
  Comment 2625 2026 NOP  <||@
  Comment 2626 2028 NOP  <||@
  Comment 2627 2030 NOP  <||@
  Comment 2628 2032 NOP  <||@
  Comment 2629 2034 MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2637 2036 rdx|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 2639 2038 JUMP ~outgoingValues: [] destination: B59 -> B58  <||@
  Comment 2639 block B58 loop 8 depth 1 header:453|LoopBegin  <||@
  Comment 2639 2010 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2639 2012 NOP  <||@
  Comment 2640 2014 NOP  <||@
  Comment 2641 2016 NOP  <||@
  Comment 2642 2018 NOP  <||@
  Comment 2643 2020 CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD  <||@
  Comment 2648 block B60 null  <||@
  Comment 2648 2040 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2648 2042 NOP  <||@
  Comment 2649 2044 NOP  <||@
  Comment 2650 2046 NOP  <||@
  Comment 2651 2048 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2651 block B61 null  <||@
  Comment 2651 2050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2651 2052 NOP  <||@
  Comment 2652 2054 NOP  <||@
  Comment 2653 2056 NOP  <||@
  Comment 2654 2058 NOP  <||@
  Comment 2655 2060 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90]  <||@
  Comment 2655 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2655 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2655 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2669 block B62 null  <||@
  Comment 2669 2062 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2669 2064 NOP  <||@
  Comment 2670 2066 NOP  <||@
  Comment 2671 2068 NOP  <||@
  Comment 2672 2070 NOP  <||@
  Comment 2673 2072 NOP  <||@
  Comment 2674 2074 NOP  <||@
  Comment 2675 2076 rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 2679 2078 rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90]  <||@
  Comment 2679 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2679 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2686 2080 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD  <||@
  Comment 2694 block B63 null  <||@
  Comment 2694 2082 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2694 2084 NOP  <||@
  Comment 2695 2086 NOP  <||@
  Comment 2696 2088 NOP  <||@
  Comment 2697 2090 NOP  <||@
  Comment 2698 2092 NOP  <||@
  Comment 2699 2094 NOP  <||@
  Comment 2700 2096 NOP  <||@
  Comment 2701 2098 NOP  <||@
  Comment 2702 2100 NOP  <||@
  Comment 2703 2102 NOP  <||@
  Comment 2704 2104 NOP  <||@
  Comment 2705 2106 NOP  <||@
  Comment 2706 2108 NOP  <||@
  Comment 2707 2110 MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 2715 2112 rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 2720 2114 rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2722 2116 MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 2726 2118 INC value: [r10|QWORD[.] + 44] size: DWORD  <||@
  Comment 2730 2120 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2739 POLL_RETURN_FAR  <||@
  Comment 2756 block B30 null  <||@
  Comment 2756 1384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2756 1386 NOP  <||@
  Comment 2757 1388 NOP  <||@
  Comment 2758 1390 NOP  <||@
  Comment 2759 1392 JUMP ~outgoingValues: [] destination: B30 -> B33  <||@
  Comment 2764 block B48 null  <||@
  Comment 2764 1822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2764 1824 NOP  <||@
  Comment 2765 1826 NOP  <||@
  Comment 2766 1828 NOP  <||@
  Comment 2767 1830 JUMP ~outgoingValues: [] destination: B48 -> B51  <||@
  Comment 2772 block B46 null  <||@
  Comment 2772 1800 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2772 1802 NOP  <||@
  Comment 2773 1804 NOP  <||@
  Comment 2774 1806 NOP  <||@
  Comment 2775 1808 JUMP ~outgoingValues: [] destination: B46 -> B61  <||@
  Comment 2777 block B28 null  <||@
  Comment 2777 1362 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2777 1364 NOP  <||@
  Comment 2778 1366 NOP  <||@
  Comment 2779 1368 NOP  <||@
  Comment 2780 1370 JUMP ~outgoingValues: [] destination: B28 -> B45  <||@
  Comment 2785 block B10 null  <||@
  Comment 2785 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2785 690 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2790 692 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2790 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2800 694 NOP  <||@
  Comment 2801 696 NOP  <||@
  Comment 2802 698 NOP  <||@
  Comment 2803 700 NOP  <||@
  Comment 2804 702 NOP  <||@
  Comment 2805 704 NOP  <||@
  Comment 2806 706 NOP  <||@
  Comment 2807 708 NOP  <||@
  Comment 2808 710 NOP  <||@
  Comment 2809 712 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2812 714 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2815 716 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68]  <||@
  Comment 2815 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2820 [rcx:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2828 718 NULLCHECK address: [rax|QWORD[.]] state [bci:68]  <||@
  Comment 2828 [rax:0, rcx:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2828 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2830 720 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2833 722 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2836 724 JUMP ~outgoingValues: [] destination: B10 -> B18  <||@
  Comment 2841 block B19 null  <||@
  Comment 2841 1038 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2841 1040 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2844 1042 NOP  <||@
  Comment 2845 1044 NOP  <||@
  Comment 2846 1046 NOP  <||@
  Comment 2847 1048 NOP  <||@
  Comment 2848 1050 NOP  <||@
  Comment 2849 1052 NOP  <||@
  Comment 2850 1054 NOP  <||@
  Comment 2851 1056 NOP  <||@
  Comment 2852 1058 NOP  <||@
  Comment 2853 1060 NOP  <||@
  Comment 2854 1062 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}  <||@
  Comment 2854 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}}  <||@
  Comment 2864 1064 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2867 1066 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 2870 1068 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2872 1070 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78]  <||@
  Comment 2872 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2877 [rcx:0, r8:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2885 1072 NULLCHECK address: [rax|QWORD[.]] state [bci:78]  <||@
  Comment 2885 [rax:0, rcx:0, r8:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2885 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2887 1074 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2890 1076 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2893 1078 JUMP ~outgoingValues: [] destination: B19 -> B27  <||@
  Comment 2898 block B1 null  <||@
  Comment 2898 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2898 348 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2903 350 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2903 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2913 352 NOP  <||@
  Comment 2914 354 NOP  <||@
  Comment 2915 356 NOP  <||@
  Comment 2916 358 NOP  <||@
  Comment 2917 360 NOP  <||@
  Comment 2918 362 NOP  <||@
  Comment 2919 364 NOP  <||@
  Comment 2920 366 NOP  <||@
  Comment 2921 368 NOP  <||@
  Comment 2922 370 rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 2925 372 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49]  <||@
  Comment 2925 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2930 [r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2            |3 
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |r8|QWORD[.]  |-   <||@
  Comment 2938 374 NULLCHECK address: [rax|QWORD[.]] state [bci:49]  <||@
  Comment 2938 [rax:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2            |3 
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |r8|QWORD[.]  |-   <||@
  Comment 2938 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2940 376 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2943 378 r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2948 380 JUMP ~outgoingValues: [] destination: B1 -> B9  <||@
  Comment 2953 block B25 null  <||@
  Comment 2953 1184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2953 1186 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2958 1188 NOP  <||@
  Comment 2959 1190 NOP  <||@
  Comment 2960 1192 NOP  <||@
  Comment 2961 1194 NOP  <||@
  Comment 2962 1196 NOP  <||@
  Comment 2963 1198 NOP  <||@
  Comment 2964 1200 NOP  <||@
  Comment 2965 1202 NOP  <||@
  Comment 2966 1204 NOP  <||@
  Comment 2967 1206 rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 2970 1208 r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2973 1210 r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 2976 1212 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2986 1214 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 2989 1216 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2992 1218 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2997 1220 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 3002 block B7 null  <||@
  Comment 3002 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3002 488 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3007 490 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3012 492 NOP  <||@
  Comment 3013 494 NOP  <||@
  Comment 3014 496 NOP  <||@
  Comment 3015 498 NOP  <||@
  Comment 3016 500 NOP  <||@
  Comment 3017 502 NOP  <||@
  Comment 3018 504 NOP  <||@
  Comment 3019 506 NOP  <||@
  Comment 3020 508 NOP  <||@
  Comment 3021 510 rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 3024 512 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 3034 518 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 3039 block B16 null  <||@
  Comment 3039 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3039 832 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3044 834 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3049 836 r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 3052 838 NOP  <||@
  Comment 3053 840 NOP  <||@
  Comment 3054 842 NOP  <||@
  Comment 3055 844 NOP  <||@
  Comment 3056 846 NOP  <||@
  Comment 3057 848 NOP  <||@
  Comment 3058 850 NOP  <||@
  Comment 3059 852 NOP  <||@
  Comment 3060 854 NOP  <||@
  Comment 3061 856 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 3064 858 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 3074 860 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 3077 864 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3082 866 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 3087 block B64 null  <||@
  Comment 3087 2122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3087 2124 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3092 2126 NOP  <||@
  Comment 3093 2128 NOP  <||@
  Comment 3094 2130 NOP  <||@
  Comment 3095 2132 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3102 2134 r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed]  <||@
  Comment 3108 2136 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 3108 block B66 null  <||@
  Comment 3108 2154 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 3108 2156 NOP  <||@
  Comment 3109 2158 NOP  <||@
  Comment 3110 2160 NOP  <||@
  Comment 3111 2162 NOP  <||@
  Comment 3112 2164 NOP  <||@
  Comment 3113 2166 NOP  <||@
  Comment 3114 2168 NOP  <||@
  Comment 3115 2170 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3122 2172 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 3129 2174 DEOPT info [bci:63, 90]  <||@
  Comment 3129 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3134 [stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3142 block B34 null  <||@
  Comment 3142 1436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3142 1438 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3147 1440 NOP  <||@
  Comment 3148 1442 NOP  <||@
  Comment 3149 1444 NOP  <||@
  Comment 3150 1446 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3157 1448 r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 3163 1454 JUMP ~outgoingValues: [] destination: B34 -> B69  <||@
  Comment 3163 block B69 null  <||@
  Comment 3163 2220 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 3163 1450 r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3168 1452 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3173 2222 NOP  <||@
  Comment 3174 2224 NOP  <||@
  Comment 3175 2226 NOP  <||@
  Comment 3176 2228 NOP  <||@
  Comment 3177 2230 NOP  <||@
  Comment 3178 2232 NOP  <||@
  Comment 3179 2234 NOP  <||@
  Comment 3180 2236 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3187 2238 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 3194 2240 DEOPT info [bci:89]  <||@
  Comment 3194 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3199 [r8:0, r9:0]at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89, duringCall: false, rethrow: false]
              |0            |1            |2  |3         
     locals:  |r8|QWORD[.]  |r9|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 3207 block B67 null  <||@
  Comment 3207 2176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3207 2178 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3212 2180 NOP  <||@
  Comment 3213 2182 NOP  <||@
  Comment 3214 2184 NOP  <||@
  Comment 3215 2186 NOP  <||@
  Comment 3216 2188 NOP  <||@
  Comment 3217 2190 NOP  <||@
  Comment 3218 2192 NOP  <||@
  Comment 3219 2194 MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD  <||@
  Comment 3230 2196 MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 3241 2198 DEOPT info [bci:39, 90]  <||@
  Comment 3241 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3246 [stack:8]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3254 block B65 null  <||@
  Comment 3254 2138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3254 2140 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3259 2142 NOP  <||@
  Comment 3260 2144 NOP  <||@
  Comment 3261 2146 NOP  <||@
  Comment 3262 2148 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 3269 2150 r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd]  <||@
  Comment 3275 2152 JUMP ~outgoingValues: [] destination: B65 -> B66  <||@
  Comment 3280 block B68 null  <||@
  Comment 3280 2200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3280 2202 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3285 2204 NOP  <||@
  Comment 3286 2206 NOP  <||@
  Comment 3287 2208 NOP  <||@
  Comment 3288 2210 r11|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 3295 2212 r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5]  <||@
  Comment 3301 2218 JUMP ~outgoingValues: [] destination: B68 -> B69  <||@
  Comment 3311 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 3326 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3341 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3356 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3371 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3386 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3401 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3416 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3431 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3446 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3461 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3486 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3519 [r8:0, r10:0, r11:0]at java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            |3 
     locals:  |r10|QWORD[.]  |Object[null]  |r8|QWORD[.]  |-   <||@
  Comment 3549 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3554 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3584 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3589 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3624 [rax:0, rcx:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 3654 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3659 [rax:0, rcx:0, r8:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 3689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3694 [rax:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2            |3 
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |r8|QWORD[.]  |-   <||@
  Comment 3702 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3702 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3708 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3708 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8034[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  method "HotSpotCompilation-8034[java.util.regex.Matcher.<init>(Pattern, CharSequence)]"
  date 1724269752688
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aedb4e0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85839b8afe66669089842400c0feff4883ec289041817f20000000000f85b00c000090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909048896c24204c8bd64c8bda4c8bc1418b4b18458b4b1c418b5b1441c742180000000041c7421cffffffff41c742200000000041c74224ffffffff41c742280000000041c642320041c642330141807f40000f842e000000418b523448c1e2034885d20f841d000000498b77284883fe000f84c00b00004883ee084989772849037738488916498bf348c1ee0341897234498bf24933f348c1ee160f844b0000004d85db0f8442000000498bf248c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84690b00004883ea08498957484903575848893241807f40000f842e000000418b523c48c1e2034885d20f841d000000498b77284883fe000f843f0b00004883ee084989772849037738488916498bf048c1ee034189723c498bf24933f048c1ee160f844b0000004d85c00f8442000000498bf248c1ee0948ba00e0368d787f00004803f2803e027429f083042400803e00741fc60600498b57484885d20f84e80a00004883ea084989574849035758488932498b97b801000083f90abe0a0000008be90f4cee448bed41d1e5458bf5498bce48c1e102488d49174883e1f8488bf14803f2493bb7c80100000f87c508000090909090909090909090909090904989b7b80100000f188411000100000f188411400100000f1884118001000048c70201000000c74208a026000044896a0c488d79f04881ff000800000f83dd08000090909048c7c610000000e9270000006666660f1f840000000000666666900f1f4400009090909090909048c7043200000000488d760890909090483bce77e490909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000418b723848c1e6034885f60f841d000000498b4f284883f9000f84a80900004883e90849894f2849034f38488931488bca48c1e90341894a38498bca4833ca48c1e9160f8442000000498bca48c1e90948be00e0368d787f00004803ce8039027429f083042400803900741fc60100498b77484885f60f845a0900004883ee08498977484903775848890e498bb7b8010000418bf9488bcf48c1e102488d49174883e1f8488bc14803c6493b87c80100000f87bb0600009090909090909090909090909090498987b80100000f188431000100000f188431400100000f1884318001000048c70601000000c74608a026000044894e0c488d41f04881f8000800000f836907000090909048c7c010000000e92e0000006666660f1f840000000000666666900f1f840000000000666666909090909090909048c7040600000000488d400890909090483bc877e4909090909090904c895c2410909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000418b424048c1e0034885c00f841d000000498b4f284883f9000f84210800004883e90849894f2849034f38488901488bce48c1e90341894a40498bca4833ce48c1e9160f8442000000498bca48c1e90948b800e0368d787f00004803c88039027429f083042400803900741fc60100498b47484885c00f84d30700004883e8084989474849034758488908498b87b80100008bcb48c1e102488d49174883e1f84c8bd94c03d84d3b9fc80100000f875205000090909090909090909090909090904d899fb80100000f188401000100000f188401400100000f1884018001000048c70001000000c74008b8fd050189580c4c8d59f04981fb000800000f837305000090909049c7c310000000e92e0000006666660f1f840000000000666666900f1f84000000000066666690909090909090904ac70418000000004d8d5b0890909090493bcb77e49090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000458b5a4449c1e3034d85db0f841d000000498b4f284883f9000f84ac0600004883e90849894f2849034f384c8919488bc848c1e90341894a44498bca4833c848c1e9160f8442000000498bca48c1e90949bb00e0368d787f00004903cb8039027429f083042400803900741fc601004d8b5f484d85db0f845e0600004983eb084d895f484d035f5849890bf7c5ffffff7f0f849b030000909090904183fd020f8278030000909090909090418bcdffc94863c94c3bf10f866d05000090909090909090f7c5ffffff7f0f84d0040000909090909090c74210ffffffff4183fd03b902000000410f42cdb801000000e915000000660f1f4400009090909090c7448210ffffffffffc0909090903bc87fe9909090909090418d4df0e92b0100006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090c7448210ffffffff448bd841ffc342c7449a10ffffffff448d580242c7449a10ffffffff448d580342c7449a10ffffffff448d580442c7449a10ffffffff448d580542c7449a10ffffffff448d580642c7449a10ffffffff448d580742c7449a10ffffffff448d580842c7449a10ffffffff448d580942c7449a10ffffffff448d580a42c7449a10ffffffff448d580b42c7449a10ffffffff448d580c42c7449a10ffffffff448d580d42c7449a10ffffffff448d580e42c7449a10ffffffff448d580f42c7449a10ffffffff8d4010909090903bc80f8fe3feffff909090e92a0000006666660f1f840000000000666666900f1f840000000000666666909090909090c7448210ffffffffffc090909090443be87fe8909090909090904585c90f848c010000909090904183f9020f8276010000909090909090418bc9ffc94863c9483bf90f861a030000909090909090909090c74610ffffffff4183f903b902000000410f42c9ba01000000e91b0000000f1f840000000000666666909090909090c7449610ffffffffffc2909090903bca7fe9909090909090418d49fce9580000006666660f1f840000000000666666906666660f1f8400000000009090909090909090909090909090909090c7449610ffffffff8bc2ffc0c7448610ffffffff8d4202c7448610ffffffff8d4203c7448610ffffffff8d5204909090903bca7fba909090e9210000006666660f1f840000000000666666906666909090909090c7449610ffffffffffc290909090443bca7fe89090909090909041817808d8e800000f8549020000909090909090418b48148b34cd0c00000085db0f85890100009090909090909090909090909041c7420c00000000410fbe4810d3ee4189721041ff422c488b6c24204883c428493ba7500400000f87d0020000c5f877c3909090e99afcffff909090e99cfeffff909090eb82909090e95afeffff4c895c241048bea026002b787f0000909090909090909090488bca418bd1e81c2c9ffe0f1f8400000000008500488bf0488bd1e9aff9ffff488bca9090909090909090909048bab8fd052c787f00004c8bde488bf28bd3e8e32b9ffe0f1f8400000000008500498bf3488bd1e911fbffff4c895c241048bea026002b787f0000909090909090909090418bd5e8ae2b9ffe0f1f8400000000008500488bd04c8b5c2410e99af7ffff4c89542408909090909090909090498bcb4c8bd74c8bd8498d7b104833c0f348aa498bc3498bfa4c8b542408e9a5faffff4c895c24104c89542408909090909090909090488bcf488d7a104833c0f348aae940f7ffff4c895c24104c895424084c8bd7909090909090909090488bc8488d7e104833c0f348aa498bfa4c8b542408e9b0f8ffff4c8954240890909049c7c31400000041baed7ffeff90909090909090458997840400004d899f90040000e85cf08afe0f1f8400000000004c8954240890909049c7c30000000041bae5dffeff4c8b4c24104c8b44240890909090909090458997840400004d899f90040000e81bf08afe0f1f8400000000004c895424089090909090909041c78784040000e504ffff49c7879004000018080000e8ecef8afe0f1f8400000000004c8954240890909049c7c39402000041bacdf7feffe954ffffff4c8954240890909049c7c31805000041bae514ffffe971ffffff48896c2420e84cf088fee941f3fffff448891424e81dc09efee941f4fffff448893424e88ee19efee998f4fffff448891424e8ffbf9efee9c2f4fffff448893424e870e19efee919f5fffff448893424e8e1bf9efee959f6fffff448890c24e852e19efee9a7f6fffff448890424e8c3bf9efee9e0f7fffff448890c24e834e19efee92ef8fffff44c891c24e8a5bf9efee955f9fffff448890c24e816e19efee9a3f9fffff4488d0d1cfdffff49898f68040000e97dfd8afef441c78784040000f537ffff49c7879004000000000000e8dbee8afe0f1f84000000000041c78784040000f5f8feff49c7879004000000000000e8b8ee8afe0f1f84000000000041c78784040000f5f2feff49c7879004000000000000e895ee8afe0f1f84000000000041c787840400008f6afcff49c7879004000000000000e872ee8afe0f1f84000000000041c787840400008f22fcff49c7879004000000000000e84fee8afe0f1f84000000000041c787840400008fb1fcff49c7879004000000000000e82cee8afe0f1f840000000000e8a58f9efef4e8bfeb8afef4f4f4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 NOP  <||@
  Comment 76 38 NOP  <||@
  Comment 77 40 NOP  <||@
  Comment 78 42 NOP  <||@
  Comment 79 44 NOP  <||@
  Comment 80 46 NOP  <||@
  Comment 81 48 NOP  <||@
  Comment 82 50 NOP  <||@
  Comment 83 52 NOP  <||@
  Comment 84 54 NOP  <||@
  Comment 85 56 NOP  <||@
  Comment 86 58 NOP  <||@
  Comment 87 60 NOP  <||@
  Comment 88 62 NOP  <||@
  Comment 89 64 NOP  <||@
  Comment 90 66 NOP  <||@
  Comment 91 68 NOP  <||@
  Comment 92 70 NOP  <||@
  Comment 93 72 NOP  <||@
  Comment 94 74 NOP  <||@
  Comment 95 76 NOP  <||@
  Comment 96 78 NOP  <||@
  Comment 97 80 NOP  <||@
  Comment 98 82 NOP  <||@
  Comment 99 84 NOP  <||@
  Comment 100 86 NOP  <||@
  Comment 101 88 NOP  <||@
  Comment 102 90 NOP  <||@
  Comment 103 92 NOP  <||@
  Comment 104 94 NOP  <||@
  Comment 105 96 NOP  <||@
  Comment 106 98 NOP  <||@
  Comment 107 100 NOP  <||@
  Comment 108 102 NOP  <||@
  Comment 109 104 NOP  <||@
  Comment 110 106 NOP  <||@
  Comment 111 108 NOP  <||@
  Comment 112 110 NOP  <||@
  Comment 113 112 NOP  <||@
  Comment 114 114 NOP  <||@
  Comment 115 116 NOP  <||@
  Comment 116 118 NOP  <||@
  Comment 117 120 NOP  <||@
  Comment 118 122 NOP  <||@
  Comment 119 124 NOP  <||@
  Comment 120 126 NOP  <||@
  Comment 121 128 NOP  <||@
  Comment 122 130 NOP  <||@
  Comment 123 132 NOP  <||@
  Comment 124 134 NOP  <||@
  Comment 125 136 NOP  <||@
  Comment 126 138 NOP  <||@
  Comment 127 140 NOP  <||@
  Comment 128 142 NOP  <||@
  Comment 129 144 NOP  <||@
  Comment 130 146 NOP  <||@
  Comment 131 148 NOP  <||@
  Comment 132 150 NOP  <||@
  Comment 133 152 NOP  <||@
  Comment 134 154 NOP  <||@
  Comment 135 156 NOP  <||@
  Comment 136 158 NOP  <||@
  Comment 137 160 NOP  <||@
  Comment 138 162 NOP  <||@
  Comment 139 164 NOP  <||@
  Comment 140 166 NOP  <||@
  Comment 141 168 NOP  <||@
  Comment 142 170 NOP  <||@
  Comment 143 172 NOP  <||@
  Comment 144 174 NOP  <||@
  Comment 145 176 NOP  <||@
  Comment 146 178 NOP  <||@
  Comment 147 180 NOP  <||@
  Comment 148 182 NOP  <||@
  Comment 149 184 NOP  <||@
  Comment 150 186 NOP  <||@
  Comment 151 188 NOP  <||@
  Comment 152 190 NOP  <||@
  Comment 153 192 NOP  <||@
  Comment 154 194 NOP  <||@
  Comment 155 196 NOP  <||@
  Comment 156 198 NOP  <||@
  Comment 157 200 NOP  <||@
  Comment 158 202 NOP  <||@
  Comment 159 204 NOP  <||@
  Comment 160 206 NOP  <||@
  Comment 161 208 NOP  <||@
  Comment 162 210 NOP  <||@
  Comment 163 212 NOP  <||@
  Comment 164 214 NOP  <||@
  Comment 165 216 NOP  <||@
  Comment 166 218 NOP  <||@
  Comment 167 220 NOP  <||@
  Comment 168 222 NOP  <||@
  Comment 169 224 NOP  <||@
  Comment 170 226 NOP  <||@
  Comment 171 228 NOP  <||@
  Comment 172 230 NOP  <||@
  Comment 173 232 NOP  <||@
  Comment 174 234 NOP  <||@
  Comment 175 236 NOP  <||@
  Comment 176 238 NOP  <||@
  Comment 177 240 NOP  <||@
  Comment 178 242 NOP  <||@
  Comment 179 244 NOP  <||@
  Comment 180 246 NOP  <||@
  Comment 181 248 NOP  <||@
  Comment 182 250 NOP  <||@
  Comment 183 252 NOP  <||@
  Comment 184 254 NOP  <||@
  Comment 185 256 NOP  <||@
  Comment 186 258 NOP  <||@
  Comment 187 260 NOP  <||@
  Comment 188 262 NOP  <||@
  Comment 189 264 NOP  <||@
  Comment 190 266 NOP  <||@
  Comment 191 268 NOP  <||@
  Comment 192 270 NOP  <||@
  Comment 193 272 NOP  <||@
  Comment 194 274 NOP  <||@
  Comment 195 276 NOP  <||@
  Comment 196 278 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 201 280 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@60d43b36 slotKind: QWORD  <||@
  Comment 201 282 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 204 284 r11|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 207 286 r8|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 210 288 rcx|DWORD = MOV input: [r11|QWORD[.] + 24] size: DWORD state [bci:0]  <||@
  Comment 210 [r8:0, r10:0, r11:0]at java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            |3 
     locals:  |r10|QWORD[.]  |Object[null]  |r8|QWORD[.]  |-   <||@
  Comment 210 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 214 290 r9|DWORD = MOV input: [r11|QWORD[.] + 28] size: DWORD  <||@
  Comment 218 292 rbx|DWORD = MOV input: [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 222 294 MOV x: [r10|QWORD[.] + 24] y: 0 size: DWORD  <||@
  Comment 230 296 MOV x: [r10|QWORD[.] + 28] y: -1 size: DWORD  <||@
  Comment 238 298 MOV x: [r10|QWORD[.] + 32] y: 0 size: DWORD  <||@
  Comment 246 300 MOV x: [r10|QWORD[.] + 36] y: -1 size: DWORD  <||@
  Comment 254 302 MOV x: [r10|QWORD[.] + 40] y: 0 size: DWORD  <||@
  Comment 262 304 MOVB x: [r10|QWORD[.] + 50] y: 0 size: BYTE  <||@
  Comment 267 306 MOVB x: [r10|QWORD[.] + 51] y: 1 size: BYTE  <||@
  Comment 272 308 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 52], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 329 310 rsi|DWORD[_] = COMPRESSPOINTER (input: r11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 336 312 MOV (x: [r10|QWORD[.] + 52], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 340 314 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r11|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 431 316 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 60], ~expectedObject: -) {temp: rsi|QWORD, temp2: rdx|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 488 318 rsi|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 495 320 MOV (x: [r10|QWORD[.] + 60], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 499 322 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: r8|QWORD[.]) {temp: rsi|QWORD, temp2: rdx|QWORD} nonNull: false callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 590 324 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 597 326 CMP x: rcx|DWORD y: 10 size: DWORD  <||@
  Comment 600 328 rsi|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 605 330 rbp|DWORD = CMOVE (falseValue: rcx|DWORD, ~trueValue: rsi|DWORD) condition: <  <||@
  Comment 610 332 r13|DWORD = SHL value: rbp|DWORD size: DWORD  <||@
  Comment 616 334 r14|QWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 619 336 rcx|QWORD = SHL x: r14|QWORD y: 2 size: QWORD  <||@
  Comment 626 338 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 630 340 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 634 342 rsi|QWORD = ADD (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 640 344 CMPBRANCH (x: rsi|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 653 block B2 null  <||@
  Comment 653 382 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 653 384 NOP  <||@
  Comment 654 386 NOP  <||@
  Comment 655 388 NOP  <||@
  Comment 656 390 NOP  <||@
  Comment 657 392 NOP  <||@
  Comment 658 394 NOP  <||@
  Comment 659 396 NOP  <||@
  Comment 660 398 NOP  <||@
  Comment 661 400 NOP  <||@
  Comment 662 402 NOP  <||@
  Comment 663 404 NOP  <||@
  Comment 664 406 NOP  <||@
  Comment 665 408 NOP  <||@
  Comment 666 410 NOP  <||@
  Comment 667 412 MOV (x: [r15|QWORD + 440], y: rsi|QWORD) size: QWORD  <||@
  Comment 674 414 AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 682 416 AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 690 418 AMD64PREFETCH ~address: [rcx|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 698 420 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 705 422 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 705 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 712 424 MOV (x: [rdx|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 716 426 rdi|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 720 428 CMPCONSTBRANCH x: rdi|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B2 -> B3 falseDestination: B2 -> B7 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 733 block B3 null  <||@
  Comment 733 430 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 733 432 NOP  <||@
  Comment 734 434 NOP  <||@
  Comment 735 436 NOP  <||@
  Comment 736 438 rsi|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 743 440 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 748 block B5 loop 0 depth 1 header:791|LoopBegin  <||@
  Comment 748 454 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 768 456 NOP  <||@
  Comment 769 458 NOP  <||@
  Comment 770 460 NOP  <||@
  Comment 771 462 NOP  <||@
  Comment 772 464 NOP  <||@
  Comment 773 466 NOP  <||@
  Comment 774 468 NOP  <||@
  Comment 775 470 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 783 472 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 787 474 JUMP ~outgoingValues: [] destination: B5 -> B4  <||@
  Comment 787 block B4 loop 0 depth 1 header:791|LoopBegin  <||@
  Comment 787 442 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 787 444 NOP  <||@
  Comment 788 446 NOP  <||@
  Comment 789 448 NOP  <||@
  Comment 790 450 NOP  <||@
  Comment 791 452 CMPBRANCH (x: rcx|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 size: QWORD  <||@
  Comment 796 block B6 null  <||@
  Comment 796 476 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 796 478 NOP  <||@
  Comment 797 480 NOP  <||@
  Comment 798 482 NOP  <||@
  Comment 799 484 JUMP ~outgoingValues: [] destination: B6 -> B8  <||@
  Comment 799 block B8 null  <||@
  Comment 799 520 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 799 522 NOP  <||@
  Comment 800 524 NOP  <||@
  Comment 801 526 NOP  <||@
  Comment 802 528 NOP  <||@
  Comment 803 530 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 803 532 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 803 block B9 null  <||@
  Comment 803 534 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 803 536 NOP  <||@
  Comment 804 538 NOP  <||@
  Comment 805 540 NOP  <||@
  Comment 806 542 NOP  <||@
  Comment 807 544 NOP  <||@
  Comment 808 546 NOP  <||@
  Comment 809 548 NOP  <||@
  Comment 810 550 NOP  <||@
  Comment 811 552 NOP  <||@
  Comment 812 554 NOP  <||@
  Comment 813 556 NOP  <||@
  Comment 814 558 NOP  <||@
  Comment 815 560 NOP  <||@
  Comment 816 562 NOP  <||@
  Comment 817 564 NOP  <||@
  Comment 818 566 NOP  <||@
  Comment 819 568 NOP  <||@
  Comment 820 570 NOP  <||@
  Comment 821 572 NOP  <||@
  Comment 822 574 NOP  <||@
  Comment 823 576 NOP  <||@
  Comment 824 578 NOP  <||@
  Comment 825 580 NOP  <||@
  Comment 826 582 NOP  <||@
  Comment 827 584 NOP  <||@
  Comment 828 586 NOP  <||@
  Comment 829 588 NOP  <||@
  Comment 830 590 NOP  <||@
  Comment 831 592 NOP  <||@
  Comment 832 594 NOP  <||@
  Comment 833 596 NOP  <||@
  Comment 834 598 NOP  <||@
  Comment 835 600 NOP  <||@
  Comment 836 602 NOP  <||@
  Comment 837 604 NOP  <||@
  Comment 838 606 NOP  <||@
  Comment 839 608 NOP  <||@
  Comment 840 610 NOP  <||@
  Comment 841 612 NOP  <||@
  Comment 842 614 NOP  <||@
  Comment 843 616 NOP  <||@
  Comment 844 618 NOP  <||@
  Comment 845 620 NOP  <||@
  Comment 846 622 NOP  <||@
  Comment 847 624 NOP  <||@
  Comment 848 626 NOP  <||@
  Comment 849 628 NOP  <||@
  Comment 850 630 NOP  <||@
  Comment 851 632 NOP  <||@
  Comment 852 634 NOP  <||@
  Comment 853 636 NOP  <||@
  Comment 854 638 NOP  <||@
  Comment 855 640 NOP  <||@
  Comment 856 642 NOP  <||@
  Comment 857 644 NOP  <||@
  Comment 858 646 NOP  <||@
  Comment 859 648 NOP  <||@
  Comment 860 650 NOP  <||@
  Comment 861 652 NOP  <||@
  Comment 862 654 NOP  <||@
  Comment 863 656 NOP  <||@
  Comment 864 658 NOP  <||@
  Comment 865 660 NOP  <||@
  Comment 866 662 NOP  <||@
  Comment 867 664 NOP  <||@
  Comment 868 666 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 56], ~expectedObject: -) {temp: rcx|QWORD, temp2: rsi|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 925 668 rcx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 932 670 MOV (x: [r10|QWORD[.] + 56], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 936 672 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rdx|QWORD[.]) {temp: rcx|QWORD, temp2: rsi|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1018 674 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1025 676 rdi|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1028 678 rcx|QWORD = SHL x: rdi|QWORD y: 2 size: QWORD  <||@
  Comment 1035 680 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 1039 682 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 1043 684 rax|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1049 686 CMPBRANCH (x: rax|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B9 -> B10 falseDestination: B9 -> B11 size: QWORD  <||@
  Comment 1062 block B11 null  <||@
  Comment 1062 726 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1062 728 NOP  <||@
  Comment 1063 730 NOP  <||@
  Comment 1064 732 NOP  <||@
  Comment 1065 734 NOP  <||@
  Comment 1066 736 NOP  <||@
  Comment 1067 738 NOP  <||@
  Comment 1068 740 NOP  <||@
  Comment 1069 742 NOP  <||@
  Comment 1070 744 NOP  <||@
  Comment 1071 746 NOP  <||@
  Comment 1072 748 NOP  <||@
  Comment 1073 750 NOP  <||@
  Comment 1074 752 NOP  <||@
  Comment 1075 754 NOP  <||@
  Comment 1076 756 MOV (x: [r15|QWORD + 440], y: rax|QWORD) size: QWORD  <||@
  Comment 1083 758 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1091 760 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1099 762 AMD64PREFETCH ~address: [rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1107 764 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1114 766 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[I, resolved>;compressed}  <||@
  Comment 1114 {meta{HotSpotType<[I, resolved>;compressed}}  <||@
  Comment 1121 768 MOV (x: [rsi|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 1125 770 rax|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 1129 772 CMPCONSTBRANCH x: rax|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B11 -> B12 falseDestination: B11 -> B16 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1142 block B12 null  <||@
  Comment 1142 774 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1142 776 NOP  <||@
  Comment 1143 778 NOP  <||@
  Comment 1144 780 NOP  <||@
  Comment 1145 782 rax|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1152 784 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 1157 block B14 loop 1 depth 1 header:871|LoopBegin  <||@
  Comment 1157 798 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1184 800 NOP  <||@
  Comment 1185 802 NOP  <||@
  Comment 1186 804 NOP  <||@
  Comment 1187 806 NOP  <||@
  Comment 1188 808 NOP  <||@
  Comment 1189 810 NOP  <||@
  Comment 1190 812 NOP  <||@
  Comment 1191 814 MOV x: [rsi|QWORD + rax|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1199 816 rax|QWORD = LEA address: [rax|QWORD + 8] size: QWORD  <||@
  Comment 1203 818 JUMP ~outgoingValues: [] destination: B14 -> B13  <||@
  Comment 1203 block B13 loop 1 depth 1 header:871|LoopBegin  <||@
  Comment 1203 786 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1203 788 NOP  <||@
  Comment 1204 790 NOP  <||@
  Comment 1205 792 NOP  <||@
  Comment 1206 794 NOP  <||@
  Comment 1207 796 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 1212 block B15 null  <||@
  Comment 1212 820 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1212 822 NOP  <||@
  Comment 1213 824 NOP  <||@
  Comment 1214 826 NOP  <||@
  Comment 1215 828 JUMP ~outgoingValues: [] destination: B15 -> B17  <||@
  Comment 1215 block B17 null  <||@
  Comment 1215 868 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1215 870 NOP  <||@
  Comment 1216 872 NOP  <||@
  Comment 1217 874 NOP  <||@
  Comment 1218 876 NOP  <||@
  Comment 1219 878 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 1219 880 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 1224 882 JUMP ~outgoingValues: [] destination: B17 -> B18  <||@
  Comment 1224 block B18 null  <||@
  Comment 1224 884 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1224 886 NOP  <||@
  Comment 1225 888 NOP  <||@
  Comment 1226 890 NOP  <||@
  Comment 1227 892 NOP  <||@
  Comment 1228 894 NOP  <||@
  Comment 1229 896 NOP  <||@
  Comment 1230 898 NOP  <||@
  Comment 1231 900 NOP  <||@
  Comment 1232 902 NOP  <||@
  Comment 1233 904 NOP  <||@
  Comment 1234 906 NOP  <||@
  Comment 1235 908 NOP  <||@
  Comment 1236 910 NOP  <||@
  Comment 1237 912 NOP  <||@
  Comment 1238 914 NOP  <||@
  Comment 1239 916 NOP  <||@
  Comment 1240 918 NOP  <||@
  Comment 1241 920 NOP  <||@
  Comment 1242 922 NOP  <||@
  Comment 1243 924 NOP  <||@
  Comment 1244 926 NOP  <||@
  Comment 1245 928 NOP  <||@
  Comment 1246 930 NOP  <||@
  Comment 1247 932 NOP  <||@
  Comment 1248 934 NOP  <||@
  Comment 1249 936 NOP  <||@
  Comment 1250 938 NOP  <||@
  Comment 1251 940 NOP  <||@
  Comment 1252 942 NOP  <||@
  Comment 1253 944 NOP  <||@
  Comment 1254 946 NOP  <||@
  Comment 1255 948 NOP  <||@
  Comment 1256 950 NOP  <||@
  Comment 1257 952 NOP  <||@
  Comment 1258 954 NOP  <||@
  Comment 1259 956 NOP  <||@
  Comment 1260 958 NOP  <||@
  Comment 1261 960 NOP  <||@
  Comment 1262 962 NOP  <||@
  Comment 1263 964 NOP  <||@
  Comment 1264 966 NOP  <||@
  Comment 1265 968 NOP  <||@
  Comment 1266 970 NOP  <||@
  Comment 1267 972 NOP  <||@
  Comment 1268 974 NOP  <||@
  Comment 1269 976 NOP  <||@
  Comment 1270 978 NOP  <||@
  Comment 1271 980 NOP  <||@
  Comment 1272 982 NOP  <||@
  Comment 1273 984 NOP  <||@
  Comment 1274 986 NOP  <||@
  Comment 1275 988 NOP  <||@
  Comment 1276 990 NOP  <||@
  Comment 1277 992 NOP  <||@
  Comment 1278 994 NOP  <||@
  Comment 1279 996 NOP  <||@
  Comment 1280 998 NOP  <||@
  Comment 1281 1000 NOP  <||@
  Comment 1282 1002 NOP  <||@
  Comment 1283 1004 NOP  <||@
  Comment 1284 1006 NOP  <||@
  Comment 1285 1008 NOP  <||@
  Comment 1286 1010 NOP  <||@
  Comment 1287 1012 NOP  <||@
  Comment 1288 1014 NOP  <||@
  Comment 1289 1016 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 64], ~expectedObject: -) {temp: rcx|QWORD, temp2: rax|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1346 1018 rcx|DWORD[_] = COMPRESSPOINTER (input: rsi|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 1353 1020 MOV (x: [r10|QWORD[.] + 64], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1357 1022 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rsi|QWORD[.]) {temp: rcx|QWORD, temp2: rax|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1439 1024 rax|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1446 1026 rcx|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1448 1028 rcx|QWORD = SHL x: rcx|QWORD y: 2 size: QWORD  <||@
  Comment 1452 1030 rcx|QWORD = LEA address: [rcx|QWORD + 23] size: QWORD  <||@
  Comment 1456 1032 rcx|QWORD = AND x: rcx|QWORD y: -8 size: QWORD  <||@
  Comment 1460 1034 r11|QWORD = ADD (x: rcx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1466 1036 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B18 -> B19 falseDestination: B18 -> B20 size: QWORD  <||@
  Comment 1479 block B20 null  <||@
  Comment 1479 1080 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1479 1082 NOP  <||@
  Comment 1480 1084 NOP  <||@
  Comment 1481 1086 NOP  <||@
  Comment 1482 1088 NOP  <||@
  Comment 1483 1090 NOP  <||@
  Comment 1484 1092 NOP  <||@
  Comment 1485 1094 NOP  <||@
  Comment 1486 1096 NOP  <||@
  Comment 1487 1098 NOP  <||@
  Comment 1488 1100 NOP  <||@
  Comment 1489 1102 NOP  <||@
  Comment 1490 1104 NOP  <||@
  Comment 1491 1106 NOP  <||@
  Comment 1492 1108 NOP  <||@
  Comment 1493 1110 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 1500 1112 AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1508 1114 AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1516 1116 AMD64PREFETCH ~address: [rcx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1524 1118 MOV x: [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1531 1120 MOV x: [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}  <||@
  Comment 1531 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>;compressed}}  <||@
  Comment 1538 1122 MOV (x: [rax|QWORD + 12], y: rbx|DWORD) size: DWORD  <||@
  Comment 1541 1124 r11|QWORD = LEA address: [rcx|QWORD - 16] size: QWORD  <||@
  Comment 1545 1126 CMPCONSTBRANCH x: r11|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B20 -> B21 falseDestination: B20 -> B25 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 1558 block B21 null  <||@
  Comment 1558 1128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1558 1130 NOP  <||@
  Comment 1559 1132 NOP  <||@
  Comment 1560 1134 NOP  <||@
  Comment 1561 1136 r11|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 1568 1138 JUMP ~outgoingValues: [] destination: B21 -> B22  <||@
  Comment 1573 block B23 loop 2 depth 1 header:943|LoopBegin  <||@
  Comment 1573 1152 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1600 1154 NOP  <||@
  Comment 1601 1156 NOP  <||@
  Comment 1602 1158 NOP  <||@
  Comment 1603 1160 NOP  <||@
  Comment 1604 1162 NOP  <||@
  Comment 1605 1164 NOP  <||@
  Comment 1606 1166 NOP  <||@
  Comment 1607 1168 MOV x: [rax|QWORD + r11|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 1615 1170 r11|QWORD = LEA address: [r11|QWORD + 8] size: QWORD  <||@
  Comment 1619 1172 JUMP ~outgoingValues: [] destination: B23 -> B22  <||@
  Comment 1619 block B22 loop 2 depth 1 header:943|LoopBegin  <||@
  Comment 1619 1140 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1619 1142 NOP  <||@
  Comment 1620 1144 NOP  <||@
  Comment 1621 1146 NOP  <||@
  Comment 1622 1148 NOP  <||@
  Comment 1623 1150 CMPBRANCH (x: rcx|QWORD, y: r11|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B22 -> B23 falseDestination: B22 -> B24 size: QWORD  <||@
  Comment 1628 block B24 null  <||@
  Comment 1628 1174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1628 1176 NOP  <||@
  Comment 1629 1178 NOP  <||@
  Comment 1630 1180 NOP  <||@
  Comment 1631 1182 JUMP ~outgoingValues: [] destination: B24 -> B26  <||@
  Comment 1631 block B26 null  <||@
  Comment 1631 1222 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1631 1224 NOP  <||@
  Comment 1632 1226 NOP  <||@
  Comment 1633 1228 NOP  <||@
  Comment 1634 1230 NOP  <||@
  Comment 1635 1232 rax|QWORD[.] = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 1635 1234 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 1635 block B27 null  <||@
  Comment 1635 1236 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1635 1238 NOP  <||@
  Comment 1636 1240 NOP  <||@
  Comment 1637 1242 NOP  <||@
  Comment 1638 1244 NOP  <||@
  Comment 1639 1246 NOP  <||@
  Comment 1640 1248 NOP  <||@
  Comment 1641 1250 NOP  <||@
  Comment 1642 1252 NOP  <||@
  Comment 1643 1254 NOP  <||@
  Comment 1644 1256 NOP  <||@
  Comment 1645 1258 NOP  <||@
  Comment 1646 1260 NOP  <||@
  Comment 1647 1262 NOP  <||@
  Comment 1648 1264 NOP  <||@
  Comment 1649 1266 NOP  <||@
  Comment 1650 1268 NOP  <||@
  Comment 1651 1270 NOP  <||@
  Comment 1652 1272 NOP  <||@
  Comment 1653 1274 NOP  <||@
  Comment 1654 1276 NOP  <||@
  Comment 1655 1278 NOP  <||@
  Comment 1656 1280 NOP  <||@
  Comment 1657 1282 NOP  <||@
  Comment 1658 1284 NOP  <||@
  Comment 1659 1286 NOP  <||@
  Comment 1660 1288 NOP  <||@
  Comment 1661 1290 NOP  <||@
  Comment 1662 1292 NOP  <||@
  Comment 1663 1294 NOP  <||@
  Comment 1664 1296 NOP  <||@
  Comment 1665 1298 NOP  <||@
  Comment 1666 1300 NOP  <||@
  Comment 1667 1302 NOP  <||@
  Comment 1668 1304 NOP  <||@
  Comment 1669 1306 NOP  <||@
  Comment 1670 1308 NOP  <||@
  Comment 1671 1310 NOP  <||@
  Comment 1672 1312 NOP  <||@
  Comment 1673 1314 NOP  <||@
  Comment 1674 1316 NOP  <||@
  Comment 1675 1318 NOP  <||@
  Comment 1676 1320 NOP  <||@
  Comment 1677 1322 NOP  <||@
  Comment 1678 1324 NOP  <||@
  Comment 1679 1326 NOP  <||@
  Comment 1680 1328 NOP  <||@
  Comment 1681 1330 NOP  <||@
  Comment 1682 1332 NOP  <||@
  Comment 1683 1334 NOP  <||@
  Comment 1684 1336 NOP  <||@
  Comment 1685 1338 NOP  <||@
  Comment 1686 1340 NOP  <||@
  Comment 1687 1342 NOP  <||@
  Comment 1688 1344 NOP  <||@
  Comment 1689 1346 NOP  <||@
  Comment 1690 1348 NOP  <||@
  Comment 1691 1350 NOP  <||@
  Comment 1692 1352 AMD64G1PREWRITEBARRIER (~address: [r10|QWORD[.] + 68], ~expectedObject: -) {temp: rcx|QWORD, temp2: r11|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1749 1354 rcx|DWORD[_] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@2aa9c61c encoding: base: 0 shift: 3  <||@
  Comment 1756 1356 MOV (x: [r10|QWORD[.] + 68], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 1760 1358 AMD64G1POSTWRITEBARRIER (~address: r10|QWORD[.], ~newValue: rax|QWORD[.]) {temp: rcx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@24f4cc1e  <||@
  Comment 1842 1360 TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.04763539526237903 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2147483647 size: DWORD  <||@
  Comment 1854 block B29 null  <||@
  Comment 1854 1372 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1854 1374 NOP  <||@
  Comment 1855 1376 NOP  <||@
  Comment 1856 1378 NOP  <||@
  Comment 1857 1380 NOP  <||@
  Comment 1858 1382 CMPCONSTBRANCH x: r13|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: DWORD inlinedY: null  <||@
  Comment 1868 block B31 null  <||@
  Comment 1868 1394 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1868 1396 NOP  <||@
  Comment 1869 1398 NOP  <||@
  Comment 1870 1400 NOP  <||@
  Comment 1871 1402 NOP  <||@
  Comment 1872 1404 NOP  <||@
  Comment 1873 1406 NOP  <||@
  Comment 1874 1408 rcx|DWORD = DEC value: r13|DWORD size: DWORD  <||@
  Comment 1879 1410 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 1882 1412 CMPBRANCH (x: r14|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B68 size: QWORD  <||@
  Comment 1891 block B32 null  <||@
  Comment 1891 1414 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1891 1416 NOP  <||@
  Comment 1892 1418 NOP  <||@
  Comment 1893 1420 NOP  <||@
  Comment 1894 1422 JUMP ~outgoingValues: [] destination: B32 -> B33  <||@
  Comment 1894 block B33 null  <||@
  Comment 1894 1424 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1894 1426 NOP  <||@
  Comment 1895 1428 NOP  <||@
  Comment 1896 1430 NOP  <||@
  Comment 1897 1432 NOP  <||@
  Comment 1898 1434 TESTCONSTBRANCH x: rbp|DWORD trueDestinationProbability: 0.0 condition: = trueDestination: B33 -> B34 falseDestination: B33 -> B35 y: 2147483647 size: DWORD  <||@
  Comment 1910 block B35 null  <||@
  Comment 1910 1456 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1910 1458 NOP  <||@
  Comment 1911 1460 NOP  <||@
  Comment 1912 1462 NOP  <||@
  Comment 1913 1464 NOP  <||@
  Comment 1914 1466 NOP  <||@
  Comment 1915 1468 NOP  <||@
  Comment 1916 1470 MOV x: [rdx|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 1923 1472 CMP x: r13|DWORD y: 3 size: DWORD  <||@
  Comment 1927 1474 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r13|DWORD) condition: |<|  <||@
  Comment 1936 1476 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1941 1478 JUMP ~outgoingValues: [] destination: B35 -> B36  <||@
  Comment 1946 block B37 loop 3 depth 1 header:68|LoopBegin  <||@
  Comment 1946 1492 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1952 1494 NOP  <||@
  Comment 1953 1496 NOP  <||@
  Comment 1954 1498 NOP  <||@
  Comment 1955 1500 NOP  <||@
  Comment 1956 1502 NOP  <||@
  Comment 1957 1504 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 1965 1506 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 1967 1508 JUMP ~outgoingValues: [] destination: B37 -> B36  <||@
  Comment 1967 block B36 loop 3 depth 1 header:68|LoopBegin  <||@
  Comment 1967 1480 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1967 1482 NOP  <||@
  Comment 1968 1484 NOP  <||@
  Comment 1969 1486 NOP  <||@
  Comment 1970 1488 NOP  <||@
  Comment 1971 1490 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B38 size: DWORD  <||@
  Comment 1975 block B38 null  <||@
  Comment 1975 1510 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1975 1512 NOP  <||@
  Comment 1976 1514 NOP  <||@
  Comment 1977 1516 NOP  <||@
  Comment 1978 1518 NOP  <||@
  Comment 1979 1520 NOP  <||@
  Comment 1980 1522 NOP  <||@
  Comment 1981 1524 rcx|DWORD = LEA address: [r13|DWORD - 16] size: DWORD  <||@
  Comment 1985 1526 JUMP ~outgoingValues: [] destination: B38 -> B39  <||@
  Comment 1990 block B40 loop 4 depth 1 header:389|LoopBegin  <||@
  Comment 1990 1540 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2016 1542 NOP  <||@
  Comment 2017 1544 NOP  <||@
  Comment 2018 1546 NOP  <||@
  Comment 2019 1548 NOP  <||@
  Comment 2020 1550 NOP  <||@
  Comment 2021 1552 NOP  <||@
  Comment 2022 1554 NOP  <||@
  Comment 2023 1556 NOP  <||@
  Comment 2024 1558 NOP  <||@
  Comment 2025 1560 NOP  <||@
  Comment 2026 1562 NOP  <||@
  Comment 2027 1564 NOP  <||@
  Comment 2028 1566 NOP  <||@
  Comment 2029 1568 NOP  <||@
  Comment 2030 1570 NOP  <||@
  Comment 2031 1572 NOP  <||@
  Comment 2032 1574 NOP  <||@
  Comment 2033 1576 NOP  <||@
  Comment 2034 1578 NOP  <||@
  Comment 2035 1580 NOP  <||@
  Comment 2036 1582 NOP  <||@
  Comment 2037 1584 NOP  <||@
  Comment 2038 1586 NOP  <||@
  Comment 2039 1588 NOP  <||@
  Comment 2040 1590 NOP  <||@
  Comment 2041 1592 NOP  <||@
  Comment 2042 1594 NOP  <||@
  Comment 2043 1596 NOP  <||@
  Comment 2044 1598 NOP  <||@
  Comment 2045 1600 NOP  <||@
  Comment 2046 1602 NOP  <||@
  Comment 2047 1604 NOP  <||@
  Comment 2048 1606 NOP  <||@
  Comment 2049 1608 NOP  <||@
  Comment 2050 1610 NOP  <||@
  Comment 2051 1612 NOP  <||@
  Comment 2052 1614 NOP  <||@
  Comment 2053 1616 NOP  <||@
  Comment 2054 1618 NOP  <||@
  Comment 2055 1620 NOP  <||@
  Comment 2056 1622 NOP  <||@
  Comment 2057 1624 NOP  <||@
  Comment 2058 1626 NOP  <||@
  Comment 2059 1628 NOP  <||@
  Comment 2060 1630 NOP  <||@
  Comment 2061 1632 NOP  <||@
  Comment 2062 1634 NOP  <||@
  Comment 2063 1636 NOP  <||@
  Comment 2064 1638 NOP  <||@
  Comment 2065 1640 NOP  <||@
  Comment 2066 1642 NOP  <||@
  Comment 2067 1644 NOP  <||@
  Comment 2068 1646 NOP  <||@
  Comment 2069 1648 NOP  <||@
  Comment 2070 1650 NOP  <||@
  Comment 2071 1652 NOP  <||@
  Comment 2072 1654 NOP  <||@
  Comment 2073 1656 NOP  <||@
  Comment 2074 1658 NOP  <||@
  Comment 2075 1660 NOP  <||@
  Comment 2076 1662 NOP  <||@
  Comment 2077 1664 NOP  <||@
  Comment 2078 1666 NOP  <||@
  Comment 2079 1668 NOP  <||@
  Comment 2080 1670 NOP  <||@
  Comment 2081 1672 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2089 1674 r11|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 2095 1676 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2104 1678 r11|DWORD = LEA address: [rax|DWORD + 2] size: DWORD  <||@
  Comment 2108 1680 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2117 1682 r11|DWORD = LEA address: [rax|DWORD + 3] size: DWORD  <||@
  Comment 2121 1684 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2130 1686 r11|DWORD = LEA address: [rax|DWORD + 4] size: DWORD  <||@
  Comment 2134 1688 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2143 1690 r11|DWORD = LEA address: [rax|DWORD + 5] size: DWORD  <||@
  Comment 2147 1692 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2156 1694 r11|DWORD = LEA address: [rax|DWORD + 6] size: DWORD  <||@
  Comment 2160 1696 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2169 1698 r11|DWORD = LEA address: [rax|DWORD + 7] size: DWORD  <||@
  Comment 2173 1700 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2182 1702 r11|DWORD = LEA address: [rax|DWORD + 8] size: DWORD  <||@
  Comment 2186 1704 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2195 1706 r11|DWORD = LEA address: [rax|DWORD + 9] size: DWORD  <||@
  Comment 2199 1708 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2208 1710 r11|DWORD = LEA address: [rax|DWORD + 10] size: DWORD  <||@
  Comment 2212 1712 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2221 1714 r11|DWORD = LEA address: [rax|DWORD + 11] size: DWORD  <||@
  Comment 2225 1716 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2234 1718 r11|DWORD = LEA address: [rax|DWORD + 12] size: DWORD  <||@
  Comment 2238 1720 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2247 1722 r11|DWORD = LEA address: [rax|DWORD + 13] size: DWORD  <||@
  Comment 2251 1724 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2260 1726 r11|DWORD = LEA address: [rax|DWORD + 14] size: DWORD  <||@
  Comment 2264 1728 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2273 1730 r11|DWORD = LEA address: [rax|DWORD + 15] size: DWORD  <||@
  Comment 2277 1732 MOV x: [rdx|QWORD[.] + r11|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2286 1734 rax|DWORD = LEA address: [rax|DWORD + 16] size: DWORD  <||@
  Comment 2289 1736 JUMP ~outgoingValues: [] destination: B40 -> B39  <||@
  Comment 2289 block B39 loop 4 depth 1 header:389|LoopBegin  <||@
  Comment 2289 1528 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2289 1530 NOP  <||@
  Comment 2290 1532 NOP  <||@
  Comment 2291 1534 NOP  <||@
  Comment 2292 1536 NOP  <||@
  Comment 2293 1538 CMPBRANCH (x: rcx|DWORD, y: rax|DWORD) trueDestinationProbability: 0.19971162262162956 condition: > trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: DWORD  <||@
  Comment 2301 block B41 null  <||@
  Comment 2301 1738 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2301 1740 NOP  <||@
  Comment 2302 1742 NOP  <||@
  Comment 2303 1744 NOP  <||@
  Comment 2304 1746 JUMP ~outgoingValues: [] destination: B41 -> B42  <||@
  Comment 2309 block B43 loop 5 depth 1 header:409|LoopBegin  <||@
  Comment 2309 1760 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2336 1762 NOP  <||@
  Comment 2337 1764 NOP  <||@
  Comment 2338 1766 NOP  <||@
  Comment 2339 1768 NOP  <||@
  Comment 2340 1770 NOP  <||@
  Comment 2341 1772 MOV x: [rdx|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2349 1774 rax|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 2351 1776 JUMP ~outgoingValues: [] destination: B43 -> B42  <||@
  Comment 2351 block B42 loop 5 depth 1 header:409|LoopBegin  <||@
  Comment 2351 1748 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2351 1750 NOP  <||@
  Comment 2352 1752 NOP  <||@
  Comment 2353 1754 NOP  <||@
  Comment 2354 1756 NOP  <||@
  Comment 2355 1758 CMPBRANCH (x: r13|DWORD, y: rax|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 2360 block B44 null  <||@
  Comment 2360 1778 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2360 1780 NOP  <||@
  Comment 2361 1782 NOP  <||@
  Comment 2362 1784 NOP  <||@
  Comment 2363 1786 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 2363 block B45 null  <||@
  Comment 2363 1788 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2363 1790 NOP  <||@
  Comment 2364 1792 NOP  <||@
  Comment 2365 1794 NOP  <||@
  Comment 2366 1796 NOP  <||@
  Comment 2367 1798 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.14455854068526564 condition: = trueDestination: B45 -> B46 falseDestination: B45 -> B47 size: DWORD  <||@
  Comment 2376 block B47 null  <||@
  Comment 2376 1810 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2376 1812 NOP  <||@
  Comment 2377 1814 NOP  <||@
  Comment 2378 1816 NOP  <||@
  Comment 2379 1818 NOP  <||@
  Comment 2380 1820 CMPCONSTBRANCH x: r9|DWORD trueDestinationProbability: 0.5 condition: |<| trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: DWORD inlinedY: null  <||@
  Comment 2390 block B49 null  <||@
  Comment 2390 1832 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2390 1834 NOP  <||@
  Comment 2391 1836 NOP  <||@
  Comment 2392 1838 NOP  <||@
  Comment 2393 1840 NOP  <||@
  Comment 2394 1842 NOP  <||@
  Comment 2395 1844 NOP  <||@
  Comment 2396 1846 rcx|DWORD = DEC value: r9|DWORD size: DWORD  <||@
  Comment 2401 1848 rcx|QWORD = MOVSXD value: rcx|DWORD size: QWORD  <||@
  Comment 2404 1850 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B49 -> B50 falseDestination: B49 -> B67 size: QWORD  <||@
  Comment 2413 block B50 null  <||@
  Comment 2413 1852 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2413 1854 NOP  <||@
  Comment 2414 1856 NOP  <||@
  Comment 2415 1858 NOP  <||@
  Comment 2416 1860 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 2416 block B51 null  <||@
  Comment 2416 1862 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2416 1864 NOP  <||@
  Comment 2417 1866 NOP  <||@
  Comment 2418 1868 NOP  <||@
  Comment 2419 1870 NOP  <||@
  Comment 2420 1872 NOP  <||@
  Comment 2421 1874 NOP  <||@
  Comment 2422 1876 MOV x: [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 2429 1878 CMP x: r9|DWORD y: 3 size: DWORD  <||@
  Comment 2433 1880 rcx|DWORD = CMOVE (falseValue: int[2|0x2], ~trueValue: r9|DWORD) condition: |<|  <||@
  Comment 2442 1882 rdx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2447 1884 JUMP ~outgoingValues: [] destination: B51 -> B52  <||@
  Comment 2452 block B53 loop 6 depth 1 header:83|LoopBegin  <||@
  Comment 2452 1898 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2464 1900 NOP  <||@
  Comment 2465 1902 NOP  <||@
  Comment 2466 1904 NOP  <||@
  Comment 2467 1906 NOP  <||@
  Comment 2468 1908 NOP  <||@
  Comment 2469 1910 MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2477 1912 rdx|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 2479 1914 JUMP ~outgoingValues: [] destination: B53 -> B52  <||@
  Comment 2479 block B52 loop 6 depth 1 header:83|LoopBegin  <||@
  Comment 2479 1886 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2479 1888 NOP  <||@
  Comment 2480 1890 NOP  <||@
  Comment 2481 1892 NOP  <||@
  Comment 2482 1894 NOP  <||@
  Comment 2483 1896 CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: DWORD  <||@
  Comment 2487 block B54 null  <||@
  Comment 2487 1916 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2487 1918 NOP  <||@
  Comment 2488 1920 NOP  <||@
  Comment 2489 1922 NOP  <||@
  Comment 2490 1924 NOP  <||@
  Comment 2491 1926 NOP  <||@
  Comment 2492 1928 NOP  <||@
  Comment 2493 1930 rcx|DWORD = LEA address: [r9|DWORD - 4] size: DWORD  <||@
  Comment 2497 1932 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 2502 block B56 loop 7 depth 1 header:433|LoopBegin  <||@
  Comment 2502 1946 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2528 1948 NOP  <||@
  Comment 2529 1950 NOP  <||@
  Comment 2530 1952 NOP  <||@
  Comment 2531 1954 NOP  <||@
  Comment 2532 1956 NOP  <||@
  Comment 2533 1958 NOP  <||@
  Comment 2534 1960 NOP  <||@
  Comment 2535 1962 NOP  <||@
  Comment 2536 1964 NOP  <||@
  Comment 2537 1966 NOP  <||@
  Comment 2538 1968 NOP  <||@
  Comment 2539 1970 NOP  <||@
  Comment 2540 1972 NOP  <||@
  Comment 2541 1974 NOP  <||@
  Comment 2542 1976 NOP  <||@
  Comment 2543 1978 NOP  <||@
  Comment 2544 1980 NOP  <||@
  Comment 2545 1982 MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2553 1984 rax|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 2557 1986 MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2565 1988 rax|DWORD = LEA address: [rdx|DWORD + 2] size: DWORD  <||@
  Comment 2568 1990 MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2576 1992 rax|DWORD = LEA address: [rdx|DWORD + 3] size: DWORD  <||@
  Comment 2579 1994 MOV x: [rsi|QWORD[.] + rax|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2587 1996 rdx|DWORD = LEA address: [rdx|DWORD + 4] size: DWORD  <||@
  Comment 2590 1998 JUMP ~outgoingValues: [] destination: B56 -> B55  <||@
  Comment 2590 block B55 loop 7 depth 1 header:433|LoopBegin  <||@
  Comment 2590 1934 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2590 1936 NOP  <||@
  Comment 2591 1938 NOP  <||@
  Comment 2592 1940 NOP  <||@
  Comment 2593 1942 NOP  <||@
  Comment 2594 1944 CMPBRANCH (x: rcx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.3240517437578174 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: DWORD  <||@
  Comment 2598 block B57 null  <||@
  Comment 2598 2000 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2598 2002 NOP  <||@
  Comment 2599 2004 NOP  <||@
  Comment 2600 2006 NOP  <||@
  Comment 2601 2008 JUMP ~outgoingValues: [] destination: B57 -> B58  <||@
  Comment 2606 block B59 loop 8 depth 1 header:453|LoopBegin  <||@
  Comment 2606 2022 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 2624 2024 NOP  <||@
  Comment 2625 2026 NOP  <||@
  Comment 2626 2028 NOP  <||@
  Comment 2627 2030 NOP  <||@
  Comment 2628 2032 NOP  <||@
  Comment 2629 2034 MOV x: [rsi|QWORD[.] + rdx|DWORD * 4 + 16] y: -1 size: DWORD  <||@
  Comment 2637 2036 rdx|DWORD = INC value: rdx|DWORD size: DWORD  <||@
  Comment 2639 2038 JUMP ~outgoingValues: [] destination: B59 -> B58  <||@
  Comment 2639 block B58 loop 8 depth 1 header:453|LoopBegin  <||@
  Comment 2639 2010 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 2639 2012 NOP  <||@
  Comment 2640 2014 NOP  <||@
  Comment 2641 2016 NOP  <||@
  Comment 2642 2018 NOP  <||@
  Comment 2643 2020 CMPBRANCH (x: r9|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.01 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: DWORD  <||@
  Comment 2648 block B60 null  <||@
  Comment 2648 2040 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2648 2042 NOP  <||@
  Comment 2649 2044 NOP  <||@
  Comment 2650 2046 NOP  <||@
  Comment 2651 2048 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 2651 block B61 null  <||@
  Comment 2651 2050 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2651 2052 NOP  <||@
  Comment 2652 2054 NOP  <||@
  Comment 2653 2056 NOP  <||@
  Comment 2654 2058 NOP  <||@
  Comment 2655 2060 CMPCONSTBRANCH x: [r8|QWORD[.] + 8] trueDestinationProbability: 1.0 condition: = trueDestination: B61 -> B62 falseDestination: B61 -> B65 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:63, 90]  <||@
  Comment 2655 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2655 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2655 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2669 block B62 null  <||@
  Comment 2669 2062 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2669 2064 NOP  <||@
  Comment 2670 2066 NOP  <||@
  Comment 2671 2068 NOP  <||@
  Comment 2672 2070 NOP  <||@
  Comment 2673 2072 NOP  <||@
  Comment 2674 2074 NOP  <||@
  Comment 2675 2076 rcx|DWORD[_] = MOV input: [r8|QWORD[.] + 20] size: DWORD  <||@
  Comment 2679 2078 rsi|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:63, 90]  <||@
  Comment 2679 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2679 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2686 2080 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: = trueDestination: B62 -> B63 falseDestination: B62 -> B64 size: DWORD  <||@
  Comment 2694 block B63 null  <||@
  Comment 2694 2082 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2694 2084 NOP  <||@
  Comment 2695 2086 NOP  <||@
  Comment 2696 2088 NOP  <||@
  Comment 2697 2090 NOP  <||@
  Comment 2698 2092 NOP  <||@
  Comment 2699 2094 NOP  <||@
  Comment 2700 2096 NOP  <||@
  Comment 2701 2098 NOP  <||@
  Comment 2702 2100 NOP  <||@
  Comment 2703 2102 NOP  <||@
  Comment 2704 2104 NOP  <||@
  Comment 2705 2106 NOP  <||@
  Comment 2706 2108 NOP  <||@
  Comment 2707 2110 MOV x: [r10|QWORD[.] + 12] y: 0 size: DWORD  <||@
  Comment 2715 2112 rcx|DWORD = MOVSXB input: [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 2720 2114 rsi|DWORD = SHR (x: rsi|DWORD, ~y: rcx|DWORD) size: DWORD  <||@
  Comment 2722 2116 MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 2726 2118 INC value: [r10|QWORD[.] + 44] size: DWORD  <||@
  Comment 2730 2120 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 2739 POLL_RETURN_FAR  <||@
  Comment 2756 block B30 null  <||@
  Comment 2756 1384 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2756 1386 NOP  <||@
  Comment 2757 1388 NOP  <||@
  Comment 2758 1390 NOP  <||@
  Comment 2759 1392 JUMP ~outgoingValues: [] destination: B30 -> B33  <||@
  Comment 2764 block B48 null  <||@
  Comment 2764 1822 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2764 1824 NOP  <||@
  Comment 2765 1826 NOP  <||@
  Comment 2766 1828 NOP  <||@
  Comment 2767 1830 JUMP ~outgoingValues: [] destination: B48 -> B51  <||@
  Comment 2772 block B46 null  <||@
  Comment 2772 1800 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2772 1802 NOP  <||@
  Comment 2773 1804 NOP  <||@
  Comment 2774 1806 NOP  <||@
  Comment 2775 1808 JUMP ~outgoingValues: [] destination: B46 -> B61  <||@
  Comment 2777 block B28 null  <||@
  Comment 2777 1362 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2777 1364 NOP  <||@
  Comment 2778 1366 NOP  <||@
  Comment 2779 1368 NOP  <||@
  Comment 2780 1370 JUMP ~outgoingValues: [] destination: B28 -> B45  <||@
  Comment 2785 block B10 null  <||@
  Comment 2785 688 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2785 690 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2790 692 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2790 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2800 694 NOP  <||@
  Comment 2801 696 NOP  <||@
  Comment 2802 698 NOP  <||@
  Comment 2803 700 NOP  <||@
  Comment 2804 702 NOP  <||@
  Comment 2805 704 NOP  <||@
  Comment 2806 706 NOP  <||@
  Comment 2807 708 NOP  <||@
  Comment 2808 710 NOP  <||@
  Comment 2809 712 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2812 714 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 2815 716 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:68]  <||@
  Comment 2815 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2820 [rcx:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2828 718 NULLCHECK address: [rax|QWORD[.]] state [bci:68]  <||@
  Comment 2828 [rax:0, rcx:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2828 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2830 720 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2833 722 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2836 724 JUMP ~outgoingValues: [] destination: B10 -> B18  <||@
  Comment 2841 block B19 null  <||@
  Comment 2841 1038 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2841 1040 rcx|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2844 1042 NOP  <||@
  Comment 2845 1044 NOP  <||@
  Comment 2846 1046 NOP  <||@
  Comment 2847 1048 NOP  <||@
  Comment 2848 1050 NOP  <||@
  Comment 2849 1052 NOP  <||@
  Comment 2850 1054 NOP  <||@
  Comment 2851 1056 NOP  <||@
  Comment 2852 1058 NOP  <||@
  Comment 2853 1060 NOP  <||@
  Comment 2854 1062 rdx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}  <||@
  Comment 2854 {meta{HotSpotType<[Ljava/util/regex/IntHashSet;, resolved>}}  <||@
  Comment 2864 1064 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2867 1066 rsi|QWORD = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 2870 1068 rdx|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 2872 1070 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:78]  <||@
  Comment 2872 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2877 [rcx:0, r8:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2885 1072 NULLCHECK address: [rax|QWORD[.]] state [bci:78]  <||@
  Comment 2885 [rax:0, rcx:0, r8:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 2885 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2887 1074 rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2890 1076 rdx|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 2893 1078 JUMP ~outgoingValues: [] destination: B19 -> B27  <||@
  Comment 2898 block B1 null  <||@
  Comment 2898 346 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2898 348 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 2903 350 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 2903 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 2913 352 NOP  <||@
  Comment 2914 354 NOP  <||@
  Comment 2915 356 NOP  <||@
  Comment 2916 358 NOP  <||@
  Comment 2917 360 NOP  <||@
  Comment 2918 362 NOP  <||@
  Comment 2919 364 NOP  <||@
  Comment 2920 366 NOP  <||@
  Comment 2921 368 NOP  <||@
  Comment 2922 370 rdx|DWORD = MOVE input: r13|DWORD moveKind: DWORD  <||@
  Comment 2925 372 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:49]  <||@
  Comment 2925 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 2930 [r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2            |3 
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |r8|QWORD[.]  |-   <||@
  Comment 2938 374 NULLCHECK address: [rax|QWORD[.]] state [bci:49]  <||@
  Comment 2938 [rax:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2            |3 
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |r8|QWORD[.]  |-   <||@
  Comment 2938 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2940 376 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2943 378 r11|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2948 380 JUMP ~outgoingValues: [] destination: B1 -> B9  <||@
  Comment 2953 block B25 null  <||@
  Comment 2953 1184 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2953 1186 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2958 1188 NOP  <||@
  Comment 2959 1190 NOP  <||@
  Comment 2960 1192 NOP  <||@
  Comment 2961 1194 NOP  <||@
  Comment 2962 1196 NOP  <||@
  Comment 2963 1198 NOP  <||@
  Comment 2964 1200 NOP  <||@
  Comment 2965 1202 NOP  <||@
  Comment 2966 1204 NOP  <||@
  Comment 2967 1206 rcx|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 2970 1208 r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 2973 1210 r11|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 2976 1212 ZERO_MEMORY (pointer: [r11|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 2986 1214 rax|QWORD = MOVE input: r11|QWORD moveKind: QWORD  <||@
  Comment 2989 1216 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 2992 1218 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 2997 1220 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 3002 block B7 null  <||@
  Comment 3002 486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3002 488 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3007 490 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3012 492 NOP  <||@
  Comment 3013 494 NOP  <||@
  Comment 3014 496 NOP  <||@
  Comment 3015 498 NOP  <||@
  Comment 3016 500 NOP  <||@
  Comment 3017 502 NOP  <||@
  Comment 3018 504 NOP  <||@
  Comment 3019 506 NOP  <||@
  Comment 3020 508 NOP  <||@
  Comment 3021 510 rcx|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 3024 512 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 3034 518 JUMP ~outgoingValues: [] destination: B7 -> B8  <||@
  Comment 3039 block B16 null  <||@
  Comment 3039 830 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3039 832 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 3044 834 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3049 836 r10|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 3052 838 NOP  <||@
  Comment 3053 840 NOP  <||@
  Comment 3054 842 NOP  <||@
  Comment 3055 844 NOP  <||@
  Comment 3056 846 NOP  <||@
  Comment 3057 848 NOP  <||@
  Comment 3058 850 NOP  <||@
  Comment 3059 852 NOP  <||@
  Comment 3060 854 NOP  <||@
  Comment 3061 856 rcx|QWORD = MOVE input: rax|QWORD moveKind: QWORD  <||@
  Comment 3064 858 ZERO_MEMORY (pointer: [rsi|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 3074 860 rdi|QWORD = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 3077 864 r10|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3082 866 JUMP ~outgoingValues: [] destination: B16 -> B17  <||@
  Comment 3087 block B64 null  <||@
  Comment 3087 2122 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3087 2124 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3092 2126 NOP  <||@
  Comment 3093 2128 NOP  <||@
  Comment 3094 2130 NOP  <||@
  Comment 3095 2132 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 3102 2134 r10|DWORD = MOVE input: int[-98323|0xfffffffffffe7fed]  <||@
  Comment 3108 2136 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 3108 block B66 null  <||@
  Comment 3108 2154 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 3108 2156 NOP  <||@
  Comment 3109 2158 NOP  <||@
  Comment 3110 2160 NOP  <||@
  Comment 3111 2162 NOP  <||@
  Comment 3112 2164 NOP  <||@
  Comment 3113 2166 NOP  <||@
  Comment 3114 2168 NOP  <||@
  Comment 3115 2170 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3122 2172 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 3129 2174 DEOPT info [bci:63, 90]  <||@
  Comment 3129 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3134 [stack:8]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3142 block B34 null  <||@
  Comment 3142 1436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3142 1438 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3147 1440 NOP  <||@
  Comment 3148 1442 NOP  <||@
  Comment 3149 1444 NOP  <||@
  Comment 3150 1446 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3157 1448 r10|DWORD = MOVE input: int[-73755|0xfffffffffffedfe5]  <||@
  Comment 3163 1454 JUMP ~outgoingValues: [] destination: B34 -> B69  <||@
  Comment 3163 block B69 null  <||@
  Comment 3163 2220 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 3163 1450 r9|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3168 1452 r8|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 3173 2222 NOP  <||@
  Comment 3174 2224 NOP  <||@
  Comment 3175 2226 NOP  <||@
  Comment 3176 2228 NOP  <||@
  Comment 3177 2230 NOP  <||@
  Comment 3178 2232 NOP  <||@
  Comment 3179 2234 NOP  <||@
  Comment 3180 2236 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 3187 2238 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 3194 2240 DEOPT info [bci:89]  <||@
  Comment 3194 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3199 [r8:0, r9:0]at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 89, duringCall: false, rethrow: false]
              |0            |1            |2  |3         
     locals:  |r8|QWORD[.]  |r9|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 3207 block B67 null  <||@
  Comment 3207 2176 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3207 2178 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3212 2180 NOP  <||@
  Comment 3213 2182 NOP  <||@
  Comment 3214 2184 NOP  <||@
  Comment 3215 2186 NOP  <||@
  Comment 3216 2188 NOP  <||@
  Comment 3217 2190 NOP  <||@
  Comment 3218 2192 NOP  <||@
  Comment 3219 2194 MOV x: [r15|QWORD + 1156] y: -64283 size: DWORD  <||@
  Comment 3230 2196 MOV x: [r15|QWORD + 1168] y: 2072 size: QWORD  <||@
  Comment 3241 2198 DEOPT info [bci:39, 90]  <||@
  Comment 3241 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3246 [stack:8]at java.util.regex.Matcher.reset(Matcher.java:453) [bci: 39, duringCall: false, rethrow: false]
              |0                  |1 
     locals:  |stack:40|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3254 block B65 null  <||@
  Comment 3254 2138 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3254 2140 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3259 2142 NOP  <||@
  Comment 3260 2144 NOP  <||@
  Comment 3261 2146 NOP  <||@
  Comment 3262 2148 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 3269 2150 r10|DWORD = MOVE input: int[-67635|0xfffffffffffef7cd]  <||@
  Comment 3275 2152 JUMP ~outgoingValues: [] destination: B65 -> B66  <||@
  Comment 3280 block B68 null  <||@
  Comment 3280 2200 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 3280 2202 stack:40|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3285 2204 NOP  <||@
  Comment 3286 2206 NOP  <||@
  Comment 3287 2208 NOP  <||@
  Comment 3288 2210 r11|QWORD = MOVE input: long[1304|0x518]  <||@
  Comment 3295 2212 r10|DWORD = MOVE input: int[-60187|0xffffffffffff14e5]  <||@
  Comment 3301 2218 JUMP ~outgoingValues: [] destination: B68 -> B69  <||@
  Comment 3311 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 3326 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3341 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3356 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3371 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3386 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3401 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3416 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3431 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3446 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 3461 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 3486 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 3514 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3519 [r8:0, r10:0, r11:0]at java.util.regex.Matcher.<init>(Matcher.java:245) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2            |3 
     locals:  |r10|QWORD[.]  |Object[null]  |r8|QWORD[.]  |-   <||@
  Comment 3549 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3554 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3584 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3589 [r8:0, r10:0]at java.util.regex.Matcher.reset(Matcher.java:455) [bci: 63, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |r10|QWORD[.]  |- 
  at java.util.regex.Matcher.<init>(Matcher.java:256) [bci: 90, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3619 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3624 [rax:0, rcx:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:252) [bci: 68, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 3654 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3659 [rax:0, rcx:0, r8:0, r10:0, r11:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:253) [bci: 78, duringCall: false, rethrow: false]
              |0             |1                  |2  |3         
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |-  |rbp|DWORD   <||@
  Comment 3689 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 3694 [rax:0, r8:0, r10:0, stack:16]at java.util.regex.Matcher.<init>(Matcher.java:250) [bci: 49, duringCall: false, rethrow: false]
              |0             |1                  |2            |3 
     locals:  |r10|QWORD[.]  |stack:32|QWORD[.]  |r8|QWORD[.]  |-   <||@
  Comment 3702 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 3702 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 3708 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 3708 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
