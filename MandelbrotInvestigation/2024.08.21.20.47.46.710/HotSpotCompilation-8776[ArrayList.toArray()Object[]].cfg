begin_compilation
  name " HotSpotCompilation-8776[java.util.ArrayList.toArray()]"
  method "HotSpotCompilation-8776[java.util.ArrayList.toArray()]"
  date 1724269768283
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a508 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a508  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v532 v533 ?12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a508 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
=== Succesors ===
next: v509 
=== Usages ===
a57 v534 v565 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - #next: v509  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayList.toArray()>
localsSize: 1
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 369
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v572 v524 v529 a255 a364 v410 v402 i515 v509 v531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a508 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-16139|0xffffffffffffc0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:82) [bci: 39]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: i510 
=== Usages ===
v485 v217 v505 
=== Predecessor ===
a508 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v565 lastLocationAccess: - #next: i510  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a508 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i510 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 30]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
lastLocationAccess: - 
=== Succesors ===
next: i511 
=== Usages ===
v48 i49 v111 
=== Predecessor ===
v509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v534 lastLocationAccess: - #next: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 5]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
i49 v288 v390 ?32 v48 v112 j317 a255 a364 v306 
=== Predecessor ===
i510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i511 
=== Succesors ===
=== Usages ===
j318 j224 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 v505 v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v509 
y: v486 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v509 y: v486  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j360 j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 26]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 v442 v506 v306 v392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 v391 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j232 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 v386 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j226 j323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: PROFILED designatedSuccessorProbability: 0.9291083219275948
stamp: void
=== Inputs ===
condition: v505 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v505 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j220 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j220 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j281 
=== Usages ===
v539 v540 
=== Predecessor ===
v299 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j281 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
=== Succesors ===
next: j282 
=== Usages ===
j227 v541 v542 v543 a254 v544 v548 v545 v546 v547 
=== Predecessor ===
j220 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
v228 
=== Predecessor ===
j281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v540 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j317 
y: i219 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j317 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j224 
y: j264 
=== Succesors ===
=== Usages ===
j226 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j224 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid j226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j265 
y: j225 
=== Succesors ===
=== Usages ===
j227 v243 j267 v545 v546 v547 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j265 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j226 
y: j281 
=== Succesors ===
=== Usages ===
v228 v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j226 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j282 
y: j227 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j282 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v230 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a255 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a255 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v130 i511 
=== Succesors ===
next: v524 
=== Usages ===
v524 a31 
=== Predecessor ===
v230 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v130 i511 #next: v524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-75633|0xfffffffffffed88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a255 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
a255 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a255 #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
value: j227 
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - value: j227 stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j226 
index: j281 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j226 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v545 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v545 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j226 
index: j281 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j226 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v546 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v546 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j226 
index: j281 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j226 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v547 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v547 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
value: j232 
stateAfter: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - value: j232 stateAfter: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
lastLocationAccess: - 
value: v486 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 lastLocationAccess: - value: v486 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
lastLocationAccess: - 
value: i511 
stateAfter: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v542 lastLocationAccess: - value: i511 stateAfter: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j226 
y: j266 
=== Succesors ===
=== Usages ===
v235 v239 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j226 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j267 
y: j268 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j267 y: j268  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v237 #falseSuccessor: v236  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid j58 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v241 
values: j58 j251 
=== Succesors ===
=== Usages ===
v243 v543 j251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v241 values: j58 j251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v240 
=== Succesors ===
next: v249 
=== Usages ===
j242 v248 v252 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v240 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j242 
y: j226 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j242 y: j226  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v248 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v244 #falseSuccessor: v248  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: j242 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: j146 
stateAfter: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: j146 stateAfter: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j242 
y: j214 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j242 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v241 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v241 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v241 #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v248 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
length: j267 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - length: j267 #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v245 v247 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v245 v247 #next: v253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a254 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j281 
=== Succesors ===
next: v28 
=== Usages ===
a31 
=== Predecessor ===
v253 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j281 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
a254 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 13]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v509 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: v217 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v217 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_java_mirror:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v536 
lastLocationAccess: - 
=== Succesors ===
next: a513 
=== Usages ===
v537 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v536 lastLocationAccess: - #next: a513  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
a513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a513 <|@
d <@d|@=== Debug Properties ===
accessStamp: a!# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OopHandle contents:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a!# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
=== Succesors ===
next: a514 
=== Usages ===
v535 
=== Predecessor ===
j512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - #next: a514  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a513 
index: - 
=== Succesors ===
=== Usages ===
a514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a514 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Class.componentType
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Class.getComponentType(Class.java:1313) [bci: 8]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 14]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: n# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
v571 v522 v559 
=== Predecessor ===
a513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v535 lastLocationAccess: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v571 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
a514 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v571 #next: v420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid a521 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: Class:void
stableDimension: 0
stamp: n!# java.lang.Class
stampKind: n java.lang.Object
value: NarrowOop[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a514 
y: a521 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a514 y: a521  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Class._array_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObject(HotSpotReplacementsUtil.java:767) [bci: 28]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 86] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: i515 
=== Usages ===
a364 v561 v387 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: v382 
index: - 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-104049|0xfffffffffffe698f]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_layout_helper:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readLayoutHelper(KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:256) [bci: 157] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: v413 
=== Usages ===
i308 i312 
=== Predecessor ===
v382 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v561 lastLocationAccess: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 124] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i33 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i511 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v411 #falseSuccessor: v412  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:255) [bci: 147] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j314 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j383 
=== Usages ===
v549 v550 
=== Predecessor ===
v412 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j383  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j383 v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j383 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
=== Succesors ===
next: j384 
=== Usages ===
j324 v551 v552 v553 v554 v555 a363 v560 v556 v557 v558 
=== Predecessor ===
j314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - #next: j384  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j384 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
=== Succesors ===
next: v328 
=== Usages ===
v325 
=== Predecessor ===
j383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperLog2ElementSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 219] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 222] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [0 - 63] bits:0...0xxxxxx
=== Inputs ===
x: i515 
y: i311 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i515 y: i311  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j317 
y: i312 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j317 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 194] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 197] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i515 
y: i307 
=== Succesors ===
=== Usages ===
i310 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i515 y: i307  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 201] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 204] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
x: i308 
y: i309 
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i308 y: i309  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i310 
=== Succesors ===
=== Usages ===
j320 v553 j336 j340 v371 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i310  <|@  <|@
f <@~|@floating>@ <|@
tid j320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j318 
y: j319 
=== Succesors ===
=== Usages ===
j322 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j318 y: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 14]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i64 [7]
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j322 v371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j320 
y: j321 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j320 y: j321  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [-9223372036854775808 - 9223372036854775800] bits:x...x000
=== Inputs ===
x: j322 
y: j225 
=== Succesors ===
=== Usages ===
j324 j341 v352 v556 v557 v558 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j322 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j323 
y: j383 
=== Succesors ===
=== Usages ===
v325 v385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j323 y: j383  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j384 
y: j324 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j384 y: j324  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
j384 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v327 #falseSuccessor: v326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a364 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a364 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v382 i511 
=== Succesors ===
next: v529 
=== Usages ===
v529 a379 
=== Predecessor ===
v327 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v382 i511 #next: v529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-106097|0xfffffffffffe618f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a364 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
a364 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a364 #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
value: j324 
stateAfter: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - value: j324 stateAfter: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: j383 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v556 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v556 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: j383 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v557 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v557 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: j383 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v558 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v558 #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: - 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
value: j232 
stateAfter: - 
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - value: j232 stateAfter: - #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: - 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Compress
stamp: Klass*(compressed base: 140154094223360 shift: 0)
=== Inputs ===
value: v382 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: v387 
stateAfter: - 
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: v387 stateAfter: - #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: - 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: i511 
stateAfter: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: i511 stateAfter: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 40]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
x: j319 
y: j321 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j319 y: j321  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 48]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v333 #falseSuccessor: v332  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 51]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: j319 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
value: i33 
stateAfter: - 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - value: i33 stateAfter: - #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 4
stableDimension: 0
stamp: i64 [4]
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [4 - 259] bits:0...0xxxxxxxxx
=== Inputs ===
x: j319 
y: j372 
=== Succesors ===
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j319 y: j372  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [0 - 259] bits:0...0xxxxxxxxx
valueDescription: i64
=== Inputs ===
merge: v338 
values: j319 j336 
=== Succesors ===
=== Usages ===
j341 v554 j351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v338 values: j319 j336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v339 
=== Succesors ===
next: v345 
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v339 #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j323 
y: j340 
=== Succesors ===
=== Usages ===
v342 v348 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j323 y: j340  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j341 
y: j268 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j341 y: j268  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v344 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v350 
values: j340 j360 
=== Succesors ===
=== Usages ===
v352 v555 j360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v350 values: j340 j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 93
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v349 
=== Succesors ===
next: v358 
=== Usages ===
j351 v357 v361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v349 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j351 
y: j323 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j351 y: j323  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v353 #falseSuccessor: v357  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: j351 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: j146 
stateAfter: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: j146 stateAfter: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid j360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j351 
y: j214 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j351 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v350 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v350 #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j340 
index: j383 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j340 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
lastLocationAccess: - 
length: j341 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v554 lastLocationAccess: - length: j341 #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v356 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v356 #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a363 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j383 
=== Succesors ===
next: v366 
=== Usages ===
a379 
=== Predecessor ===
v362 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j383 #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
a363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v367 
values: a363 a364 
=== Succesors ===
=== Usages ===
v562 a31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v367 values: a363 a364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v366 v368 
=== Succesors ===
next: v516 
=== Usages ===
a379 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v366 v368 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
v424 
=== Predecessor ===
v367 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v516 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: v424 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 54] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
v156 
=== Predecessor ===
v516 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v538 lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v517 
y: v130 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v517 y: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v125 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v29 
values: a254 a379 a255 
=== Succesors ===
=== Usages ===
?32 j473 j482 ?185 v14 v459 v566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: a254 a379 a255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v28 v30 v520 
=== Succesors ===
next: v173 
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v28 v30 v520 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i510 
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i511 y: i510  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
=== Inputs ===
condition: v48 
trueValue: i511 
falseValue: i510 
=== Succesors ===
=== Usages ===
i452 v72 v111 v112 j507 v506 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v48 trueValue: i511 falseValue: i510  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i33 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i49 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 1]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a508 
=== Succesors ===
=== Usages ===
j480 ?32 v459 j468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a508  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 8
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ArrayList.toArray()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
sourceFile: ArrayList.java
sourceLine: 369
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?50 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?12 
=== Succesors ===
=== Usages ===
?32 ?185 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?12  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -43545
stableDimension: 0
stamp: i32 [-43545]
stampKind: i32
value: int[-43545|0xffffffffffff55e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i49 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i510 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v175 #falseSuccessor: v176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -44569
stableDimension: 0
stamp: i32 [-44569]
stampKind: i32
value: int[-44569|0xffffffffffff51e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
v175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i49 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i511 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v179 #falseSuccessor: v180  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -45593
stableDimension: 0
stamp: i32 [-45593]
stampKind: i32
value: int[-45593|0xffffffffffff4de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i199 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [-45593 - -43545] bits:1...1010xxx0111100111
valueDescription: i32
=== Inputs ===
merge: v196 
values: i198 i203 i205 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v196 values: i198 i203 i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v197 v202 v204 
=== Succesors ===
next: v201 
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v197 v202 v204 #next: v201  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: astore_3
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3514
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?50 
values: a31 a57 i511 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?50 values: a31 a57 i511  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateBefore: ?32 
actionAndReason: i199 
speculation: j146 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?32 actionAndReason: i199 speculation: j146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 5]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i33 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i49 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 16]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v428 #falseSuccessor: v427  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:80) [bci: 19]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a31 
index: - 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a31 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v467 v485 v487 
=== Predecessor ===
v427 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 58]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v509 
y: v518 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v509 y: v518  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i49 
=== Succesors ===
=== Usages ===
i479 v484 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 64]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v485 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v485 #trueSuccessor: v430 #falseSuccessor: v431  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 67]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v518 
y: v486 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v518 y: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 88]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v436 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v437 #falseSuccessor: v436  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v433 v435 
=== Succesors ===
next: j480 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v433 v435 #next: j480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a57 
=== Succesors ===
next: j482 
=== Usages ===
v569 
=== Predecessor ===
v434 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a57 #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a31 
=== Succesors ===
next: v484 
=== Usages ===
v570 
=== Predecessor ===
j480 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a31 #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j480 
index: - 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j480 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectArraycopyKillAny
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v569 v570 j507 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
j482 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v569 v570 j507 #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 128]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v518 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v467 
index: - 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getDestElemClass(HotSpotArraycopySnippets.java:67) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 131]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
lastLocationAccess: - 
=== Succesors ===
next: i458 
=== Usages ===
v564 i479 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v563 lastLocationAccess: - #next: i458  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v519 
index: - 
=== Succesors ===
=== Usages ===
i458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v519 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i458 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
=== Succesors ===
next: j468 
=== Usages ===
j441 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a57 
=== Succesors ===
next: j473 
=== Usages ===
v567 
=== Predecessor ===
i458 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a57 #next: j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a31 
=== Succesors ===
next: i479 
=== Usages ===
v568 
=== Predecessor ===
j468 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a31 #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j473 
index: - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 13]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i458 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectCheckcastArraycopy
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v567 v568 j507 j441 v519 
=== Succesors ===
next: v448 
=== Usages ===
v442 i449 
=== Predecessor ===
j473 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v567 v568 j507 j441 v519 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 186]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i479 
y: i33 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i479 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 197]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v442 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v442 #trueSuccessor: v447 #falseSuccessor: v443  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 200]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 203]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
=== Inputs ===
value: i479 
=== Succesors ===
=== Usages ===
v459 v459 i452 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i479  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 223]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
=== Inputs ===
x: i49 
y: i449 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i49 y: i449  <|@  <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a57 i449 a31 i449 i452 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a57 i449 a31 i449 i452  <|@  <|@
tid ?185 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3515
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?50 
values: - - - a31 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?50 values: - - - a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
bci: -5
identity: ANY_LOCATION
inlineControl: BytecodesOnly
isInOOMETry: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v459 
stateDuring: ?185 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v459 stateDuring: ?185 #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v444 v446 v454 v455 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v444 v446 v454 v455 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 11]
stamp: void
=== Inputs ===
memoryMap: - 
result: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a31  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 104
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 30]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
reason: ClassCastException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a508 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a508  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.ArrayList
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v532 v533 ?12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v532 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a508 <|@
result v1|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.elementData
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v532 
lastLocationAccess: - 
=== Succesors ===
next: v509 
=== Usages ===
a57 v534 v565 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v532 lastLocationAccess: - #next: v509  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<ArrayList.toArray()>
localsSize: 1
locksSize: 0
sourceFile: ArrayList.java
sourceLine: 369
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v572 v524 v529 a255 a364 v410 v402 i515 v509 v531 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v1|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a508 
=== Succesors ===
=== Usages ===
v509 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v509 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-16139|0xffffffffffffc0f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:82) [bci: 39]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v565 
lastLocationAccess: - 
=== Succesors ===
next: i510 
=== Usages ===
v485 v217 v505 
=== Predecessor ===
a508 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v565 lastLocationAccess: - #next: i510  <|@  <|@
f <@~|@floating>@ <|@
tid v534 <|@
result [v1|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a508 
=== Succesors ===
=== Usages ===
i510 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a508  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i510 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 30]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v534 
lastLocationAccess: - 
=== Succesors ===
next: i511 
=== Usages ===
v48 i49 v111 
=== Predecessor ===
v509 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v534 lastLocationAccess: - #next: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v533 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i511 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 5]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v533 
lastLocationAccess: - 
=== Succesors ===
next: v19 
=== Usages ===
i49 v288 v390 ?32 v48 v112 j317 a255 a364 v306 
=== Predecessor ===
i510 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v533 lastLocationAccess: - #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i511 
=== Succesors ===
=== Usages ===
j318 j224 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i511  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 v505 v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v509 
y: v486 
=== Succesors ===
=== Usages ===
v19 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v509 y: v486  <|@  <|@
f <@~|@floating>@ <|@
tid j214 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 8
stableDimension: 0
stamp: i64 [8]
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j360 j251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 26]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v72 v442 v506 v306 v392 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j146 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v289 v391 v201 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j268 <|@
result long[2048|0x800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 2048
stableDimension: 0
stamp: i64 [2048]
stampKind: i64
value: long[2048|0x800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v235 v342 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j232 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v284 v386 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a255 v156 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j225 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:132) [bci: 23]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -8
stableDimension: 0
stamp: i64 [-8]
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j226 j323 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: PROFILED designatedSuccessorProbability: 0.9291083219275948
stamp: void
=== Inputs ===
condition: v505 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
i511 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v505 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v299 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v299  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j220 
=== Usages ===
=== Predecessor ===
v18 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j220 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j281 
=== Usages ===
v539 v540 
=== Predecessor ===
v299 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j281 v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j281 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
=== Succesors ===
next: j282 
=== Usages ===
j227 v541 v542 v543 a254 v544 v548 v545 v546 v547 
=== Predecessor ===
j220 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j220 
index: - 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j220 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
lastLocationAccess: - 
=== Succesors ===
next: v231 
=== Usages ===
v228 
=== Predecessor ===
j281 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v540 lastLocationAccess: - #next: v231  <|@  <|@
f <@~|@floating>@ <|@
tid i219 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 2
stableDimension: 0
stamp: i32 [2]
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j224 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [0 - 17179869180] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00
=== Inputs ===
x: j317 
y: i219 
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j317 y: i219  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result long[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 23
stableDimension: 0
stamp: i64 [23]
stampKind: i64
value: long[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
j265 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j265 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [23 - 17179869203] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx11
=== Inputs ===
x: j224 
y: j264 
=== Succesors ===
=== Usages ===
j226 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j224 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid j226 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [0 - 17179869200] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000
=== Inputs ===
x: j265 
y: j225 
=== Succesors ===
=== Usages ===
j227 v243 j267 v545 v546 v547 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j265 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j227 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j226 
y: j281 
=== Succesors ===
=== Usages ===
v228 v283 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j226 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j282 
y: j227 
=== Succesors ===
=== Usages ===
v231 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j282 y: j227  <|@  <|@
f <@*|@fixed>@ <|@
tid v231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v228 
=== Succesors ===
trueSuccessor: v230 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v228 #trueSuccessor: v230 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a255 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a255 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v130 i511 
=== Succesors ===
next: v524 
=== Usages ===
v524 a31 
=== Predecessor ===
v230 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v130 i511 #next: v524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-75633|0xfffffffffffed88f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a255 
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
a255 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a255 #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v524 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v231 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
value: j227 
stateAfter: - 
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - value: j227 stateAfter: - #next: v271  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v10|QWORD + v7|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j226 
index: j281 
=== Succesors ===
=== Usages ===
v271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j226 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v545 
=== Succesors ===
next: v274 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v545 #next: v274  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v10|QWORD + v7|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j226 
index: j281 
=== Succesors ===
=== Usages ===
v274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j226 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v546 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
v271 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v546 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v10|QWORD + v7|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j226 
index: j281 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j226 index: j281  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v547 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v274 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v547 #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v7|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
value: j232 
stateAfter: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v277 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - value: j232 stateAfter: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v7|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
lastLocationAccess: - 
value: v486 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 lastLocationAccess: - value: v486 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v7|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
lastLocationAccess: - 
value: i511 
stateAfter: - 
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v542 lastLocationAccess: - value: i511 stateAfter: - #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -16
stableDimension: 0
stamp: i64 [-16]
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j267 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j267 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [-16 - 17179869184] bits:x...x000
=== Inputs ===
x: j226 
y: j266 
=== Succesors ===
=== Usages ===
v235 v239 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j226 y: j266  <|@  <|@
f <@~|@floating>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j267 
y: j268 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j267 y: j268  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v235 
=== Succesors ===
trueSuccessor: v237 
falseSuccessor: v236 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v235 #trueSuccessor: v237 #falseSuccessor: v236  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@~|@floating>@ <|@
tid j58 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 5]
rawvalue: 16
stableDimension: 0
stamp: i64 [16]
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v241 
=== Predecessor ===
v237 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j242 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v241 
values: j58 j251 
=== Succesors ===
=== Usages ===
v243 v543 j251 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v241 values: j58 j251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 58
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v240 
=== Succesors ===
next: v249 
=== Usages ===
j242 v248 v252 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v240 #next: v249  <|@  <|@
f <@~|@floating>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j242 
y: j226 
=== Succesors ===
=== Usages ===
v249 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j242 y: j226  <|@  <|@
f <@*|@fixed>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v243 
=== Succesors ===
trueSuccessor: v244 
falseSuccessor: v248 
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v243 #trueSuccessor: v244 #falseSuccessor: v248  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v289  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v7|QWORD + v14|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: j242 
=== Succesors ===
=== Usages ===
v289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: j146 
stateAfter: - 
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: j146 stateAfter: - #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid j251 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j242 
y: j214 
=== Succesors ===
=== Usages ===
j242 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j242 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v241 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v289 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v241 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v249 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v241 #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v248 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v239 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v239  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v7|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j281 
index: - 
=== Succesors ===
=== Usages ===
v239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j281 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
length: j267 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - length: j267 #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v245 v247 
=== Succesors ===
next: v253 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v245 v247 #next: v253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v253 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a254 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a254 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(HotSpotAllocationSnippets.java:166) [bci: 25] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArray(KlassPointer, int, int, int, AllocationSnippets$FillContent, int, boolean, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3513) [bci: 7]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j281 
=== Succesors ===
next: v28 
=== Usages ===
a31 
=== Predecessor ===
v253 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j281 #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
a254 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 13]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j512 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j512  <|@  <|@
f <@~|@floating>@ <|@
tid v217 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3512) [bci: 3]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v509 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v509  <|@  <|@
f <@~|@floating>@ <|@
tid v536 <|@
result [v18|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: v217 
index: - 
=== Succesors ===
=== Usages ===
j512 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v217 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j512 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_java_mirror:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v536 
lastLocationAccess: - 
=== Succesors ===
next: a513 
=== Usages ===
v537 
=== Predecessor ===
v17 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v536 lastLocationAccess: - #next: a513  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [v20|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j512 
index: - 
=== Succesors ===
=== Usages ===
a513 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a513 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
accessStamp: a!# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: OopHandle contents:final
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 3]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a!# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
=== Succesors ===
next: a514 
=== Usages ===
v535 
=== Predecessor ===
j512 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - #next: a514  <|@  <|@
f <@~|@floating>@ <|@
tid v535 <|@
result [v21|QWORD[.] + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: a513 
index: - 
=== Succesors ===
=== Usages ===
a514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a513 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a514 <|@
result v22|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.lang.Class
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Class.componentType
memoryOrder: PLAIN
nodeSourcePosition: at java.lang.Class.getComponentType(Class.java:1313) [bci: 8]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 14]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: n# java.lang.Class
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v535 
lastLocationAccess: - 
=== Succesors ===
next: v531 
=== Usages ===
v571 v522 v559 
=== Predecessor ===
a513 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v535 lastLocationAccess: - #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v22|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v571 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
a514 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v571 #next: v420  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd]
nodeSourcePosition: at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v405 
=== Usages ===
=== Predecessor ===
v531 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v405  <|@  <|@
f <@~|@floating>@ <|@
tid a521 <|@
result NarrowOop[Class:void] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: Class:void
stableDimension: 0
stamp: n!# java.lang.Class
stampKind: n java.lang.Object
value: NarrowOop[Class:void]
=== Inputs ===
=== Succesors ===
=== Usages ===
v522 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.nodes.java.DynamicNewArrayNode.throwsIllegalArgumentException(DynamicNewArrayNode.java:116) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a514 
y: a521 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a514 y: a521  <|@  <|@
f <@*|@fixed>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v522 
=== Succesors ===
trueSuccessor: v403 
falseSuccessor: v404 
=== Usages ===
=== Predecessor ===
v420 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v522 #trueSuccessor: v403 #falseSuccessor: v404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v402 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:240) [bci: 64] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 76] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v22|DWORD[_] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a514 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a514  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Class._array_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadKlassFromObject(HotSpotReplacementsUtil.java:767) [bci: 28]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:245) [bci: 86] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
=== Succesors ===
next: i515 
=== Usages ===
a364 v561 v387 
=== Predecessor ===
v404 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - #next: i515  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v23|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: v382 
index: - 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i515 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-104049|0xfffffffffffe698f]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Klass::_layout_helper:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readLayoutHelper(KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:256) [bci: 157] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v561 
lastLocationAccess: - 
=== Succesors ===
next: v413 
=== Usages ===
i308 i312 
=== Predecessor ===
v382 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v561 lastLocationAccess: - #next: v413  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 124] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i33 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i511 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v411 
falseSuccessor: v412 
=== Usages ===
=== Predecessor ===
i515 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v411 #falseSuccessor: v412  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v410 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v410  <|@  <|@
f <@*|@fixed>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:251) [bci: 135] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
reason: RuntimeConstraint
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v411 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:255) [bci: 147] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: j314 
=== Usages ===
=== Predecessor ===
v413 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j314  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j314 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:87) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j383 
=== Usages ===
v549 v550 
=== Predecessor ===
v412 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j383  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j383 v385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j383 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:88) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
=== Succesors ===
next: j384 
=== Usages ===
j324 v551 v552 v553 v554 v555 a363 v560 v556 v557 v558 
=== Predecessor ===
j314 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - #next: j384  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j314 
index: - 
=== Succesors ===
=== Usages ===
j384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j384 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:89) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
=== Succesors ===
next: v328 
=== Usages ===
v325 
=== Predecessor ===
j383 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid i311 <|@
result int[63|0x3f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperLog2ElementSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 219] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 63
stableDimension: 0
stamp: i32 [63]
stampKind: i32
value: int[63|0x3f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i312 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i312 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:275) [bci: 222] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [0 - 63] bits:0...0xxxxxx
=== Inputs ===
x: i515 
y: i311 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i515 y: i311  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 7]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j317 
y: i312 
=== Succesors ===
=== Usages ===
j320 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: j317 y: i312  <|@  <|@
f <@~|@floating>@ <|@
tid i307 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeShift(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 194] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i308 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i308 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 197] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [-32768 - 32767]
=== Inputs ===
x: i515 
y: i307 
=== Succesors ===
=== Usages ===
i310 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i515 y: i307  <|@  <|@
f <@~|@floating>@ <|@
tid i309 <|@
result int[255|0xff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.layoutHelperHeaderSizeMask(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 201] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 255
stableDimension: 0
stamp: i32 [255]
stampKind: i32
value: int[255|0xff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i310 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i310 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:274) [bci: 204] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
x: i308 
y: i309 
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i308 y: i309  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i310 
=== Succesors ===
=== Usages ===
j320 v553 j336 j340 v371 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i310  <|@  <|@
f <@~|@floating>@ <|@
tid j320 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j318 
y: j319 
=== Succesors ===
=== Usages ===
j322 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j318 y: j319  <|@  <|@
f <@~|@floating>@ <|@
tid j321 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 14]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 7
stableDimension: 0
stamp: i64 [7]
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j322 v371 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j322 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:131) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j320 
y: j321 
=== Succesors ===
=== Usages ===
j323 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j320 y: j321  <|@  <|@
f <@~|@floating>@ <|@
tid j323 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:133) [bci: 30]
at jdk.graal.compiler.replacements.AllocationSnippets.arrayAllocationSize(AllocationSnippets.java:123) [bci: 11]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:94) [bci: 44]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [-9223372036854775808 - 9223372036854775800] bits:x...x000
=== Inputs ===
x: j322 
y: j225 
=== Succesors ===
=== Usages ===
j324 j341 v352 v556 v557 v558 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j322 y: j225  <|@  <|@
f <@~|@floating>@ <|@
tid j324 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:95) [bci: 53]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j323 
y: j383 
=== Succesors ===
=== Usages ===
v325 v385 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j323 y: j383  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 88]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j384 
y: j324 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j384 y: j324  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:98) [bci: 94]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v327 
falseSuccessor: v326 
=== Usages ===
=== Predecessor ===
j384 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v327 #falseSuccessor: v326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:105) [bci: 161]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a364 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a364 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_array_or_null(KlassPointer,int)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_array_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newArrayOrNull(ForeignCallDescriptor, KlassPointer, int) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewArrayStub(HotSpotAllocationSnippets.java:356) [bci: 16]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:106) [bci: 177]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v382 i511 
=== Succesors ===
next: v529 
=== Usages ===
v529 a379 
=== Predecessor ===
v327 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v382 i511 #next: v529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-106097|0xfffffffffffe618f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: a364 
=== Succesors ===
next: v368 
=== Usages ===
=== Predecessor ===
a364 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: a364 #next: v368  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
v529 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 97]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:99) [bci: 102]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
value: j324 
stateAfter: - 
=== Succesors ===
next: v374 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - value: j324 stateAfter: - #next: v374  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v33|QWORD + v25|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: j383 
=== Succesors ===
=== Usages ===
v374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v556 
=== Succesors ===
next: v376 
=== Usages ===
=== Predecessor ===
v385 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v556 #next: v376  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v33|QWORD + v25|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: j383 
=== Succesors ===
=== Usages ===
v376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v557 
=== Succesors ===
next: v378 
=== Usages ===
=== Predecessor ===
v374 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v557 #next: v378  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v33|QWORD + v25|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
stamp: void*
stride: S1
=== Inputs ===
base: j323 
index: j383 
=== Succesors ===
=== Usages ===
v378 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j323 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:100) [bci: 109]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
address: v558 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v558 #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v25|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: - 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
value: j232 
stateAfter: - 
=== Succesors ===
next: v389 
=== Usages ===
=== Predecessor ===
v378 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - value: j232 stateAfter: - #next: v389  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v25|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: - 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v387 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Compress
stamp: Klass*(compressed base: 140154094223360 shift: 0)
=== Inputs ===
value: v382 
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:302) [bci: 5]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
value: v387 
stateAfter: - 
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v386 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - value: v387 stateAfter: - #next: v390  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v25|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: - 
=== Succesors ===
=== Usages ===
v390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:303) [bci: 18]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: i511 
stateAfter: - 
=== Succesors ===
next: v334 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: i511 stateAfter: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 40]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
x: j319 
y: j321 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@jdk.graal.compiler.nodes.calc.IntegerTestNode>@ x: j319 y: j321  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:176) [bci: 48]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v371 
=== Succesors ===
trueSuccessor: v333 
falseSuccessor: v332 
=== Usages ===
=== Predecessor ===
v390 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v371 #trueSuccessor: v333 #falseSuccessor: v332  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v333 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v337 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v337  <|@  <|@
f <@*|@fixed>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v333 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 51]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v392  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v25|QWORD + v30|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: j319 
=== Succesors ===
=== Usages ===
v392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
value: i33 
stateAfter: - 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v332 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - value: i33 stateAfter: - #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j372 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: 4
stableDimension: 0
stamp: i64 [4]
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:178) [bci: 65]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [4 - 259] bits:0...0xxxxxxxxx
=== Inputs ===
x: j319 
y: j372 
=== Succesors ===
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j319 y: j372  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j340 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64 [0 - 259] bits:0...0xxxxxxxxx
valueDescription: i64
=== Inputs ===
merge: v338 
values: j319 j336 
=== Succesors ===
=== Usages ===
j341 v554 j351 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v338 values: j319 j336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:180) [bci: 72]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v337 v339 
=== Succesors ===
next: v345 
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v337 v339 #next: v345  <|@  <|@
f <@~|@floating>@ <|@
tid j341 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:181) [bci: 96]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j323 
y: j340 
=== Succesors ===
=== Usages ===
v342 v348 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: j323 y: j340  <|@  <|@
f <@~|@floating>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 20]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j341 
y: j268 
=== Succesors ===
=== Usages ===
v345 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j341 y: j268  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:224) [bci: 28]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v342 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v342 #trueSuccessor: v344 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:228) [bci: 62]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v349  <|@  <|@
f <@*|@fixed>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v350 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j351 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v350 
values: j340 j360 
=== Succesors ===
=== Usages ===
v352 v555 j360 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v350 values: j340 j360  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v350 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 93
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v349 
=== Succesors ===
next: v358 
=== Usages ===
j351 v357 v361 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v349 #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 119]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j351 
y: j323 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j351 y: j323  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 127]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v352 
=== Succesors ===
trueSuccessor: v353 
falseSuccessor: v357 
=== Usages ===
=== Predecessor ===
v350 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v352 #trueSuccessor: v353 #falseSuccessor: v357  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 130]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v25|QWORD + v41|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j383 
index: j351 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j383 index: j351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: j146 
stateAfter: - 
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v353 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: j146 stateAfter: - #next: v361  <|@  <|@
f <@~|@floating>@ <|@
tid j360 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 144]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
x: j351 
y: j214 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j351 y: j214  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:235) [bci: 112]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
loopBegin: v350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v350 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v358 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v350 #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:225) [bci: 31]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v348 
=== Usages ===
=== Predecessor ===
v345 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v348  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v39|QWORD + v25|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j340 
index: j383 
=== Succesors ===
=== Usages ===
v348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j340 index: j383  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
isAligned: true
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.replacements.nodes.ZeroMemoryNode.zero(Word, long, boolean, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:226) [bci: 56]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
lastLocationAccess: - 
length: j341 
=== Succesors ===
next: v354 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@ZeroMemory|@jdk.graal.compiler.replacements.nodes.ZeroMemoryNode>@ stateBefore: - guard: - address: v554 lastLocationAccess: - length: j341 #next: v354  <|@  <|@
f <@*|@fixed>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v348 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:239) [bci: 154]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:304) [bci: 38]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v354 v356 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v354 v356 #next: v362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.MembarNode.memoryBarrier(MembarNode$FenceKind, LocationIdentity) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitMemoryBarrierIf(AllocationSnippets.java:320) [bci: 10]
at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:305) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: a363 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a363  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a363 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatArray(AllocationSnippets.java:306) [bci: 49]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:102) [bci: 153]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j383 
=== Succesors ===
next: v366 
=== Usages ===
a379 
=== Predecessor ===
v362 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j383 #next: v366  <|@  <|@
f <@*|@fixed>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
a363 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a379 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v367 
values: a363 a364 
=== Succesors ===
=== Usages ===
v562 a31 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v367 values: a363 a364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateArrayImpl(AllocationSnippets.java:108) [bci: 182]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(HotSpotAllocationSnippets.java:277) [bci: 251] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateArrayDynamic(Class, Class, int, AllocationSnippets$FillContent, boolean, JavaKind, int, boolean, boolean, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData) [bci: -1] Substitution
at java.lang.reflect.Array.newInstance(Class, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 18]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v366 v368 
=== Succesors ===
next: v516 
=== Usages ===
a379 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v366 v368 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v45|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a379 
index: - 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a379 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v516 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
=== Succesors ===
next: v517 
=== Usages ===
v424 
=== Predecessor ===
v367 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - #next: v517  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:156) [bci: 40] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v516 
=== Succesors ===
=== Usages ===
v538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v516  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v47|QWORD + 56] <|@
d <@d|@=== Debug Properties ===
displacement: 56
stamp: void*
stride: S1
=== Inputs ===
base: v424 
index: - 
=== Succesors ===
=== Usages ===
v517 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v424 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 54] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
lastLocationAccess: - 
=== Succesors ===
next: v128 
=== Usages ===
v156 
=== Predecessor ===
v516 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v538 lastLocationAccess: - #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(InstanceOfSnippets.java:157) [bci: 58] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofPrimary(KlassPointer, Object, int, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v517 
y: v130 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v517 y: v130  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v156 
=== Succesors ===
trueSuccessor: v125 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v156 #trueSuccessor: v125 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v29 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a31 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: a! java.lang.Object[]
valueDescription: a java.lang.Object
=== Inputs ===
merge: v29 
values: a254 a379 a255 
=== Succesors ===
=== Usages ===
?32 j473 j482 ?185 v14 v459 v566 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v29 values: a254 a379 a255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v28 v30 v520 
=== Succesors ===
next: v173 
=== Usages ===
a31 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v28 v30 v520 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i510 
=== Succesors ===
=== Usages ===
i49 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i511 y: i510  <|@  <|@
f <@~|@floating>@ <|@
tid i49 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.min(Math.java:2115) [bci: 2]
at java.util.Arrays.copyOf(Arrays.java:3516) [bci: 32]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
=== Inputs ===
condition: v48 
trueValue: i511 
falseValue: i510 
=== Succesors ===
=== Usages ===
i452 v72 v111 v112 j507 v506 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v48 trueValue: i511 falseValue: i510  <|@  <|@
f <@~|@floating>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 89]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i33 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i49 y: i33  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v51|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 1]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a508 
=== Succesors ===
=== Usages ===
j480 ?32 v459 j468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a508  <|@  <|@
tid ?12 <|@
d <@d|@=== Debug Properties ===
bci: 8
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<ArrayList.toArray()>
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
sourceFile: ArrayList.java
sourceLine: 369
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?50 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?50 <|@
d <@d|@=== Debug Properties ===
bci: 6
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int)>
localsSize: 2
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3482
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?12 
=== Succesors ===
=== Usages ===
?32 ?185 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?12  <|@  <|@
f <@*|@fixed>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v72 
=== Succesors ===
trueSuccessor: v171 
falseSuccessor: v172 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v72 #trueSuccessor: v171 #falseSuccessor: v172  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v197  <|@  <|@
f <@~|@floating>@ <|@
tid i198 <|@
result int[-43545|0xffffffffffff55e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -43545
stableDimension: 0
stamp: i32 [-43545]
stampKind: i32
value: int[-43545|0xffffffffffff55e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
v171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:409) [bci: 120]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v177 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v177  <|@  <|@
f <@~|@floating>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 140]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i510 
y: i49 
=== Succesors ===
=== Usages ===
v177 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i510 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v111 
=== Succesors ===
trueSuccessor: v175 
falseSuccessor: v176 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v111 #trueSuccessor: v175 #falseSuccessor: v176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:410) [bci: 151]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result int[-44569|0xffffffffffff51e7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -44569
stableDimension: 0
stamp: i32 [-44569]
stampKind: i32
value: int[-44569|0xffffffffffff51e7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
v175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 171]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v181 
=== Usages ===
=== Predecessor ===
v177 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v181  <|@  <|@
f <@~|@floating>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 181]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i511 
y: i49 
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i511 y: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v112 
=== Succesors ===
trueSuccessor: v179 
falseSuccessor: v180 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v112 #trueSuccessor: v179 #falseSuccessor: v180  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:414) [bci: 192]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid i205 <|@
result int[-45593|0xffffffffffff4de7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
rawvalue: -45593
stableDimension: 0
stamp: i32 [-45593]
stampKind: i32
value: int[-45593|0xffffffffffff4de7]
=== Inputs ===
=== Succesors ===
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
v179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i199 <|@
result v52|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32 [-45593 - -43545] bits:1...1010xxx0111100111
valueDescription: i32
=== Inputs ===
merge: v196 
values: i198 i203 i205 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v196 values: i198 i203 i205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v197 v202 v204 
=== Succesors ===
next: v201 
=== Usages ===
i199 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v197 v202 v204 #next: v201  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 24
bytecode: astore_3
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3514
stackSize: 1
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?50 
values: a31 a57 i511 
=== Succesors ===
=== Usages ===
v201 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?50 values: a31 a57 i511  <|@  <|@
f <@*|@fixed>@ <|@
tid v201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:405) [bci: 100]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateBefore: ?32 
actionAndReason: i199 
speculation: j146 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?32 actionAndReason: i199 speculation: j146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:418) [bci: 212]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:245) [bci: 20] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v429 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v429  <|@  <|@
f <@~|@floating>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 5]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i49 
y: i33 
=== Succesors ===
=== Usages ===
v429 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i49 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:79) [bci: 16]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v506 
=== Succesors ===
trueSuccessor: v428 
falseSuccessor: v427 
=== Usages ===
=== Predecessor ===
v180 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v506 #trueSuccessor: v428 #falseSuccessor: v427  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@*|@fixed>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v428 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:80) [bci: 19]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v518 
=== Usages ===
=== Predecessor ===
v429 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v49|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a31 
index: - 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a31 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v518 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
=== Succesors ===
next: v432 
=== Usages ===
v467 v485 v487 
=== Predecessor ===
v427 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - #next: v432  <|@  <|@
f <@~|@floating>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 58]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v509 
y: v518 
=== Succesors ===
=== Usages ===
v432 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v509 y: v518  <|@  <|@
f <@~|@floating>@ <|@
tid j507 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i49 
=== Succesors ===
=== Usages ===
i479 v484 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i49  <|@  <|@
f <@*|@fixed>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 64]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v485 
=== Succesors ===
trueSuccessor: v430 
falseSuccessor: v431 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v485 #trueSuccessor: v430 #falseSuccessor: v431  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v433  <|@  <|@
f <@*|@fixed>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
v430 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 67]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v432 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 77]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v518 
y: v486 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v518 y: v486  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:84) [bci: 88]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.6
stamp: void
=== Inputs ===
condition: v487 
=== Succesors ===
trueSuccessor: v437 
falseSuccessor: v436 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v487 #trueSuccessor: v437 #falseSuccessor: v436  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v435  <|@  <|@
f <@*|@fixed>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
v437 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:86) [bci: 91]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v433 v435 
=== Succesors ===
next: j480 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v433 v435 #next: j480  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j480 <|@
result v55|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a57 
=== Succesors ===
next: j482 
=== Usages ===
v569 
=== Predecessor ===
v434 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a57 #next: j482  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j482 <|@
result v56|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a31 
=== Succesors ===
next: v484 
=== Usages ===
v570 
=== Predecessor ===
j480 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a31 #next: v484  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v55|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j480 
index: - 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j480 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v56|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j482 
index: - 
=== Succesors ===
=== Usages ===
v484 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j482 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectArraycopyKillAny
nodeSourcePosition: at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, LocationIdentity, boolean, boolean, boolean, int) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyCallNode.arraycopyObjectKillsAny(ArrayCopyCallNode.java:247) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:88) [bci: 122]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v569 v570 j507 
=== Succesors ===
next: v455 
=== Usages ===
=== Predecessor ===
j482 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v569 v570 j507 #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v484 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 128]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v519 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v519  <|@  <|@
f <@~|@floating>@ <|@
tid v467 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHub(HotSpotReplacementsUtil.java:722) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:83) [bci: 46]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v518 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v57|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v467 
index: - 
=== Succesors ===
=== Usages ===
v519 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v467 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v519 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getDestElemClass(HotSpotArraycopySnippets.java:67) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:90) [bci: 131]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
lastLocationAccess: - 
=== Succesors ===
next: i458 
=== Usages ===
v564 i479 
=== Predecessor ===
v436 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v563 lastLocationAccess: - #next: i458  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v59|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v519 
index: - 
=== Succesors ===
=== Usages ===
i458 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v519 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i458 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v564 
lastLocationAccess: - 
=== Succesors ===
next: j468 
=== Usages ===
j441 
=== Predecessor ===
v519 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v564 lastLocationAccess: - #next: j468  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j468 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a57 
=== Succesors ===
next: j473 
=== Usages ===
v567 
=== Predecessor ===
i458 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a57 #next: j473  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j473 <|@
result v62|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i64
=== Inputs ===
object: a31 
=== Succesors ===
next: i479 
=== Usages ===
v568 
=== Predecessor ===
j468 >@ <|@
instruction <@GetObjectAddress|@jdk.graal.compiler.nodes.GetObjectAddressNode>@ object: a31 #next: i479  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v61|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j468 
index: - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j468 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v62|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j473 
index: - 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j473 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j441 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.getSuperCheckOffset(HotSpotArraycopySnippets.java:56) [bci: 13]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:91) [bci: 139]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i458 
=== Succesors ===
=== Usages ===
i479 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i458  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i479 <|@
result v63|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}
descriptorName: ObjectCheckcastArraycopy
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.CheckcastArrayCopyCallNode.checkcastArraycopy(Object, int, Object, int, int, Word, Object, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:96) [bci: 176]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v567 v568 j507 j441 v519 
=== Succesors ===
next: v448 
=== Usages ===
v442 i449 
=== Predecessor ===
j473 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v567 v568 j507 j441 v519 #next: v448  <|@  <|@
f <@~|@floating>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 186]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i479 
y: i33 
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i479 y: i33  <|@  <|@
f <@*|@fixed>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:97) [bci: 197]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v442 
=== Succesors ===
trueSuccessor: v447 
falseSuccessor: v443 
=== Usages ===
=== Predecessor ===
i479 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v442 #trueSuccessor: v447 #falseSuccessor: v443  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v447 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v446 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v446  <|@  <|@
f <@*|@fixed>@ <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v447 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 200]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v453 
=== Usages ===
=== Predecessor ===
v448 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v453  <|@  <|@
f <@~|@floating>@ <|@
tid i449 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:102) [bci: 203]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
=== Inputs ===
value: i479 
=== Succesors ===
=== Usages ===
v459 v459 i452 
=== Predecessor ===
- >@ <|@
instruction <@Not|@jdk.graal.compiler.nodes.calc.NotNode>@ value: i479  <|@  <|@
f <@~|@floating>@ <|@
tid i452 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 223]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: i32
=== Inputs ===
x: i49 
y: i449 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@-|@jdk.graal.compiler.nodes.calc.SubNode>@ x: i49 y: i449  <|@  <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
referencedType: [null]
returnStamp: void
signature: [UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>
=== Inputs ===
arguments: a57 i449 a31 i449 i452 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a57 i449 a31 i449 i452  <|@  <|@
tid ?185 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokestatic
code: ResolvedJavaMethodBytecode<Arrays.copyOf(Object[], int, Class)>
localsSize: 4
locksSize: 0
sourceFile: Arrays.java
sourceLine: 3515
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?50 
values: - - - a31 
=== Succesors ===
=== Usages ===
v453 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?50 values: - - - a31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
bci: -5
identity: ANY_LOCATION
inlineControl: BytecodesOnly
isInOOMETry: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:103) [bci: 224]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
polymorphic: false
stamp: void
targetMethod: Direct#System.arraycopy
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v459 
stateDuring: ?185 
=== Succesors ===
next: v454 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v459 stateDuring: ?185 #next: v454  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
v453 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.arraycopy.HotSpotArraycopySnippets.doCheckcastArraycopySnippet(HotSpotArraycopySnippets.java:107) [bci: 227]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.checkcastArraycopySnippet(ArrayCopySnippets.java:332) [bci: 14] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(Object, int, Object, int, int, ArrayCopySnippets$WorkSnippetID, GraphState$GuardsStage, JavaKind, boolean) [bci: -1]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopyWithDelayedLoweringNode.arraycopy(ArrayCopyWithDelayedLoweringNode.java:73) [bci: 13]
at jdk.graal.compiler.replacements.arraycopy.ArrayCopySnippets.delayedCheckcastArraycopySnippet(ArrayCopySnippets.java:252) [bci: 66] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1] Substitution
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v444 v446 v454 v455 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v444 v446 v454 v455 #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 11]
stamp: void
=== Inputs ===
memoryMap: - 
result: a31 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v445 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a31  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 21]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
stamp: void
=== Inputs ===
=== Succesors ===
next: v572 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 104
mayConvertToGuard: true
nodeSourcePosition: at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 30]
at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
reason: ClassCastException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v6|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr   -1  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  800  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  904  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  800  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  904  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[352, 353[[426, 428[[470, 472[[798, 800[[828, 829[[874, 875[[902, 904[[954, 955[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v60|q [0, 1[[352, 353[[422, 427[[572, 575[[826, 829[[868, 875[[952, 955[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v54|q [0, 1[[350, 353[[420, 427[[796, 798[[866, 875[[900, 902[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[352, 353[[426, 427[[874, 875[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v67|q [0, 32[[348, 353[[418, 427[[794, 798[[864, 875[[898, 902[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[346, 353[[416, 427[[828, 829[[874, 875[[954, 955[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v59|q [0, 1[[352, 353[[424, 427[[870, 875[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v65|d [0, 1[[352, 353[[426, 427[[872, 875[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [32, 280[[290, 302[[356, 432[[474, 875[[878, 979[[980, 1011[[1012, 1053[[1054, 1075[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [34, 220[[474, 832[[878, 958[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [36, 278[[474, 832[[878, 958[36 MustHaveRegister 44 ShouldHaveRegister 278 ShouldHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [38, 234[[474, 832[[878, 958[38 MustHaveRegister 216 MustHaveRegister 218 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [40, 248[[474, 832[[878, 958[[980, 990[[1012, 1053[40 MustHaveRegister 42 ShouldHaveRegister 124 MustHaveRegister 216 ShouldHaveRegister 218 MustHaveRegister 246 ShouldHaveRegister 530 MustHaveRegister 636 MustHaveRegister 796 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v4|d [42, 72[[474, 574[42 MustHaveRegister 72 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [70, 194[[806, 832[70 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 168 MustHaveRegister 173 LiveAtLoopEnd 194 ShouldHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q v5|q [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v9|q [76, 174[76 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 126 MustHaveRegister 150 MustHaveRegister 173 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [78, 112[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q rax|q [800, 805[800 MustHaveRegister 802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [126, 130[[806, 826[126 MustHaveRegister 128 ShouldHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v15|q [140, 170[150 ShouldHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v14|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v7|q [194, 197[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v2|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [498, 501[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [506, 526[506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [526, 632[[878, 898[526 MustHaveRegister 528 MustHaveRegister 632 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d -1 [528, 576[528 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [568, 730[[910, 958[568 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister 704 MustHaveRegister 709 LiveAtLoopEnd 730 ShouldHaveRegister 926 MustHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v24|d [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v5|q [574, 582[574 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v24|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|d [580, 649[[910, 928[580 MustHaveRegister 582 ShouldHaveRegister 638 ShouldHaveRegister 648 ShouldHaveRegister 926 MustHaveRegister 928 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v27|q [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [586, 710[[910, 932[586 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 662 MustHaveRegister 686 MustHaveRegister 709 LiveAtLoopEnd  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|q [588, 620[588 MustHaveRegister 590 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q rax|q [904, 909[904 MustHaveRegister 906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v23|q [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v30|q [650, 675[[932, 954[662 ShouldHaveRegister 674 ShouldHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v33|q [662, 666[[932, 952[662 MustHaveRegister 664 ShouldHaveRegister 952 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v42|q [676, 706[686 ShouldHaveRegister 704 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v41|q [706, 709[706 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v25|q [730, 733[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|q [734, 771[754 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[v46|d]" v46|d -1 [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v46|d [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [756, 759[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v17|q [198, 470[[832, 878[[980, 990[[1012, 1053[274 MustHaveRegister 344 ShouldHaveRegister 414 ShouldHaveRegister 470 ShouldHaveRegister 868 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[v50|d]" v50|d v3|d [218, 280[[290, 302[[356, 432[[832, 862[218 MustHaveRegister 222 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 258 MustHaveRegister 276 ShouldHaveRegister 862 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v1|d [220, 342[[356, 432[[832, 864[[980, 990[[1012, 1053[220 MustHaveRegister 342 ShouldHaveRegister 412 ShouldHaveRegister 864 ShouldHaveRegister  "NoSpillStore"
  v52|d DWORD "[v52|d]" v52|d -1 [1032, 1048[1048 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[v53|d]" v53|d -1 [274, 280[[290, 302[[356, 406[274 MustHaveRegister 278 MustHaveRegister 300 ShouldHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v50|d [276, 350[[356, 420[276 MustHaveRegister 350 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v51|q [342, 346[342 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v49|q [344, 348[344 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v53|d [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [404, 407[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [408, 424[408 MustHaveRegister 410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [410, 422[410 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v51|q [412, 416[412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v49|q [414, 418[414 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[v63|d]" v63|d rax|q [428, 432[[832, 860[428 MustHaveRegister 430 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[v64|d]" v64|d v63|d [860, 870[860 MustHaveRegister 862 ShouldHaveRegister 866 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d v50|d [862, 872[862 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [736, 760[736 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [774, 794[774 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[352, 353[[426, 428[[470, 472[[798, 800[[828, 829[[874, 875[[902, 904[[954, 955[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v60|q [0, 1[[352, 353[[422, 427[[572, 575[[826, 829[[868, 875[[952, 955[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v54|q [0, 1[[350, 353[[420, 427[[796, 798[[866, 875[[900, 902[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[352, 353[[426, 427[[874, 875[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v67|q [0, 32[[348, 353[[418, 427[[794, 798[[864, 875[[898, 902[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[346, 353[[416, 427[[828, 829[[874, 875[[954, 955[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v59|q [0, 1[[352, 353[[424, 427[[870, 875[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v65|d [0, 1[[352, 353[[426, 427[[872, 875[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 280[[290, 302[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [34, 220[[474, 832[[878, 958[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [36, 278[[474, 832[[878, 958[36 MustHaveRegister 44 ShouldHaveRegister 278 ShouldHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [38, 234[[474, 832[[878, 958[38 MustHaveRegister 216 MustHaveRegister 218 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [40, 248[[474, 832[[878, 958[[980, 990[[1012, 1053[40 MustHaveRegister 42 ShouldHaveRegister 124 MustHaveRegister 216 ShouldHaveRegister 218 MustHaveRegister 246 ShouldHaveRegister 530 MustHaveRegister 636 MustHaveRegister 796 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [42, 72[[474, 574[42 MustHaveRegister 72 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q -1 [70, 194[[806, 832[70 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 168 MustHaveRegister 173 LiveAtLoopEnd 194 ShouldHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v5|q [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q v9|q [76, 174[76 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 126 MustHaveRegister 150 MustHaveRegister 173 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [78, 112[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [800, 805[800 MustHaveRegister 802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [126, 130[[806, 826[126 MustHaveRegister 128 ShouldHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v15|q [140, 170[150 ShouldHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q v14|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v7|q [194, 197[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v2|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [498, 501[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [506, 526[506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdi|q]" v23|q -1 [526, 632[[878, 898[526 MustHaveRegister 528 MustHaveRegister 632 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d -1 [528, 576[528 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [568, 730[[910, 958[568 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister 704 MustHaveRegister 709 LiveAtLoopEnd 730 ShouldHaveRegister 926 MustHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v24|d [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v5|q [574, 582[574 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v24|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d v28|d [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v29|d [580, 649[[910, 928[580 MustHaveRegister 582 ShouldHaveRegister 638 ShouldHaveRegister 648 ShouldHaveRegister 926 MustHaveRegister 928 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v27|q [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v32|q [586, 710[[910, 932[586 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 662 MustHaveRegister 686 MustHaveRegister 709 LiveAtLoopEnd  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q v33|q [588, 620[588 MustHaveRegister 590 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [904, 909[904 MustHaveRegister 906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v23|q [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q -1 [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v30|q [650, 675[[932, 954[662 ShouldHaveRegister 674 ShouldHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v33|q [662, 666[[932, 952[662 MustHaveRegister 664 ShouldHaveRegister 952 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v42|q [676, 706[686 ShouldHaveRegister 704 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v41|q [706, 709[706 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v25|q [730, 733[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|q [734, 771[754 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d -1 [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|d [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q -1 [756, 759[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v17|q [198, 349[274 MustHaveRegister 344 ShouldHaveRegister  "OneSpillStore"
  v50|d DWORD "[rbx|d]" v50|d v3|d [218, 280[[290, 302[218 MustHaveRegister 222 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 258 MustHaveRegister 276 ShouldHaveRegister  "OneSpillStore"
  v51|q QWORD "[r10|q]" v51|q v1|d [220, 342[[356, 425[220 MustHaveRegister 342 ShouldHaveRegister 412 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[r10|d]" v52|d -1 [1032, 1048[1048 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d -1 [274, 280[[290, 302[[356, 406[274 MustHaveRegister 278 MustHaveRegister 300 ShouldHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r9|q]" v54|q v50|d [276, 350[[356, 420[276 MustHaveRegister 350 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v51|q [342, 346[342 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v49|q [344, 348[344 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q v53|d [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdi|q]" v58|q -1 [404, 407[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [408, 424[408 MustHaveRegister 410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q -1 [410, 422[410 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q v51|q [412, 416[412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v49|q [414, 418[414 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|q [428, 432[[832, 860[428 MustHaveRegister 430 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d v63|d [860, 870[860 MustHaveRegister 862 ShouldHaveRegister 866 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbx|d]" v65|d v50|d [862, 872[862 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [736, 760[736 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [774, 794[774 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[vstack:3|q]" v0|q v0|q [356, 417[ "OneSpillStore"
  v69|q QWORD "[vstack:0|q]" v49|q v49|q [349, 470[[832, 878[[980, 990[[1012, 1032[414 ShouldHaveRegister 470 ShouldHaveRegister 868 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:1|d]" v50|d v50|d [356, 425[ "OneSpillStore"
  v71|q QWORD "[vstack:2|q]" v51|q v51|q [425, 432[[832, 864[[980, 990[[1012, 1032[864 ShouldHaveRegister  "OneSpillStore"
  v72|q QWORD "[rdx|q]" v49|q v49|q [1032, 1053[ "OneSpillStore"
  v73|d DWORD "[vstack:1|d]" v50|d v50|d [425, 432[ "OneSpillStore"
  v74|q QWORD "[vstack:3|q]" v0|q v0|q [417, 425[ "OneSpillStore"
  v75|q QWORD "[vstack:3|q]" v0|q v0|q [425, 432[[474, 875[[878, 979[[980, 1011[[1012, 1053[ "OneSpillStore"
  v76|d DWORD "[rbx|d]" v50|d v50|d [832, 862[862 MustHaveRegister  "OneSpillStore"
  v77|q QWORD "[r11|q]" v51|q v51|q [1032, 1053[ "OneSpillStore"
  v78|q QWORD "[rsi|q]" v0|q v0|q [1054, 1075[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  800  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  904  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[352, 353[[426, 428[[470, 472[[798, 800[[828, 829[[874, 875[[902, 904[[954, 955[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v60|q [0, 1[[352, 353[[422, 427[[572, 575[[826, 829[[868, 875[[952, 955[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v54|q [0, 1[[350, 353[[420, 427[[796, 798[[866, 875[[900, 902[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[352, 353[[426, 427[[874, 875[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v67|q [0, 32[[348, 353[[418, 427[[794, 798[[864, 875[[898, 902[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[346, 353[[416, 427[[828, 829[[874, 875[[954, 955[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v59|q [0, 1[[352, 353[[424, 427[[870, 875[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v65|d [0, 1[[352, 353[[426, 427[[872, 875[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 280[[290, 302[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [34, 220[[474, 832[[878, 958[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [36, 278[[474, 832[[878, 958[36 MustHaveRegister 44 ShouldHaveRegister 278 ShouldHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [38, 234[[474, 832[[878, 958[38 MustHaveRegister 216 MustHaveRegister 218 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [40, 248[[474, 832[[878, 958[[980, 990[[1012, 1053[40 MustHaveRegister 42 ShouldHaveRegister 124 MustHaveRegister 216 ShouldHaveRegister 218 MustHaveRegister 246 ShouldHaveRegister 530 MustHaveRegister 636 MustHaveRegister 796 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [42, 72[[474, 574[42 MustHaveRegister 72 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q -1 [70, 194[[806, 832[70 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 168 MustHaveRegister 173 LiveAtLoopEnd 194 ShouldHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v5|q [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q v9|q [76, 174[76 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 126 MustHaveRegister 150 MustHaveRegister 173 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [78, 112[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [800, 805[800 MustHaveRegister 802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [126, 130[[806, 826[126 MustHaveRegister 128 ShouldHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v15|q [140, 170[150 ShouldHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q v14|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v7|q [194, 197[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v2|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [498, 501[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [506, 526[506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdi|q]" v23|q -1 [526, 632[[878, 898[526 MustHaveRegister 528 MustHaveRegister 632 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d -1 [528, 576[528 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [568, 730[[910, 958[568 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister 704 MustHaveRegister 709 LiveAtLoopEnd 730 ShouldHaveRegister 926 MustHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v24|d [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v5|q [574, 582[574 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v24|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d v28|d [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v29|d [580, 649[[910, 928[580 MustHaveRegister 582 ShouldHaveRegister 638 ShouldHaveRegister 648 ShouldHaveRegister 926 MustHaveRegister 928 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v27|q [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v32|q [586, 710[[910, 932[586 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 662 MustHaveRegister 686 MustHaveRegister 709 LiveAtLoopEnd  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q v33|q [588, 620[588 MustHaveRegister 590 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [904, 909[904 MustHaveRegister 906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v23|q [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q -1 [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v30|q [650, 675[[932, 954[662 ShouldHaveRegister 674 ShouldHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v33|q [662, 666[[932, 952[662 MustHaveRegister 664 ShouldHaveRegister 952 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v42|q [676, 706[686 ShouldHaveRegister 704 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v41|q [706, 709[706 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v25|q [730, 733[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|q [734, 771[754 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d -1 [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|d [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q -1 [756, 759[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v17|q [198, 349[274 MustHaveRegister 344 ShouldHaveRegister  "OneSpillStore"
  v50|d DWORD "[rbx|d]" v50|d v3|d [218, 280[[290, 302[218 MustHaveRegister 222 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 258 MustHaveRegister 276 ShouldHaveRegister  "OneSpillStore"
  v51|q QWORD "[r10|q]" v51|q v1|d [220, 342[[356, 425[220 MustHaveRegister 342 ShouldHaveRegister 412 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[r10|d]" v52|d -1 [1032, 1048[1048 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d -1 [274, 280[[290, 302[[356, 406[274 MustHaveRegister 278 MustHaveRegister 300 ShouldHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r9|q]" v54|q v50|d [276, 350[[356, 420[276 MustHaveRegister 350 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v51|q [342, 346[342 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v49|q [344, 348[344 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q v53|d [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdi|q]" v58|q -1 [404, 407[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [408, 424[408 MustHaveRegister 410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q -1 [410, 422[410 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q v51|q [412, 416[412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v49|q [414, 418[414 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|q [428, 432[[832, 860[428 MustHaveRegister 430 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d v63|d [860, 870[860 MustHaveRegister 862 ShouldHaveRegister 866 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbx|d]" v65|d v50|d [862, 872[862 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [736, 760[736 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [774, 794[774 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[vstack:3|q]" v0|q v0|q [356, 417[ "OneSpillStore"
  v69|q QWORD "[vstack:0|q]" v49|q v49|q [349, 470[[832, 878[[980, 990[[1012, 1032[414 ShouldHaveRegister 470 ShouldHaveRegister 868 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:1|d]" v50|d v50|d [356, 425[ "OneSpillStore"
  v71|q QWORD "[vstack:2|q]" v51|q v51|q [425, 432[[832, 864[[980, 990[[1012, 1032[864 ShouldHaveRegister  "OneSpillStore"
  v72|q QWORD "[rdx|q]" v49|q v49|q [1032, 1053[ "OneSpillStore"
  v73|d DWORD "[vstack:1|d]" v50|d v50|d [425, 432[ "OneSpillStore"
  v74|q QWORD "[vstack:3|q]" v0|q v0|q [417, 425[ "OneSpillStore"
  v75|q QWORD "[vstack:3|q]" v0|q v0|q [425, 432[[474, 875[[878, 979[[980, 1011[[1012, 1053[ "OneSpillStore"
  v76|d DWORD "[rbx|d]" v50|d v50|d [832, 862[862 MustHaveRegister  "OneSpillStore"
  v77|q QWORD "[r11|q]" v51|q v51|q [1032, 1053[ "OneSpillStore"
  v78|q QWORD "[rsi|q]" v0|q v0|q [1054, 1075[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [long[16|0x10]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v15|QWORD] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [v17|QWORD[.]] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [v30|QWORD] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [v39|QWORD] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [v42|QWORD] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [v44|QWORD[.]] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [v45|QWORD[.]] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  774  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  800  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [v12|QWORD[.]] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  904  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [v35|QWORD[.]] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [v38|QWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [int[-45593|0xffffffffffff4de7]] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [int[-43545|0xffffffffffff55e7]] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [int[-44569|0xffffffffffff51e7]] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v49|q [0, 1[[352, 353[[426, 428[[470, 472[[798, 800[[828, 829[[874, 875[[902, 904[[954, 955[ "NoOptimization"
  rcx|q fixed "[rcx|q]" rcx|q v60|q [0, 1[[352, 353[[422, 427[[572, 575[[826, 829[[868, 875[[952, 955[ "NoOptimization"
  rdx|d fixed "[rdx|d]" rdx|d v54|q [0, 1[[350, 353[[420, 427[[796, 798[[866, 875[[900, 902[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 28[[352, 353[[426, 427[[874, 875[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v67|q [0, 32[[348, 353[[418, 427[[794, 798[[864, 875[[898, 902[ "NoOptimization"
  rdi|q fixed "[rdi|q]" rdi|q -1 [0, 1[[346, 353[[416, 427[[828, 829[[874, 875[[954, 955[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- v59|q [0, 1[[352, 353[[424, 427[[870, 875[ "NoOptimization"
  r9|- fixed "[r9|-]" r9|- v65|d [0, 1[[352, 353[[426, 427[[872, 875[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[352, 353[[426, 427[[874, 875[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 280[[290, 302[32 MustHaveRegister 34 MustHaveRegister 40 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[r10|d]" v1|d -1 [34, 220[[474, 832[[878, 958[34 MustHaveRegister 36 MustHaveRegister 38 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[r11|d]" v2|d -1 [36, 278[[474, 832[[878, 958[36 MustHaveRegister 44 ShouldHaveRegister 278 ShouldHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r8|d]" v3|d -1 [38, 234[[474, 832[[878, 958[38 MustHaveRegister 216 MustHaveRegister 218 ShouldHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d -1 [40, 248[[474, 832[[878, 958[[980, 990[[1012, 1053[40 MustHaveRegister 42 ShouldHaveRegister 124 MustHaveRegister 216 ShouldHaveRegister 218 MustHaveRegister 246 ShouldHaveRegister 530 MustHaveRegister 636 MustHaveRegister 796 ShouldHaveRegister 900 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rbx|q]" v5|q v4|d [42, 72[[474, 574[42 MustHaveRegister 72 MustHaveRegister 574 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdx|q]" v7|q -1 [70, 194[[806, 832[70 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 168 MustHaveRegister 173 LiveAtLoopEnd 194 ShouldHaveRegister 828 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rbx|q]" v8|q v5|q [72, 74[72 MustHaveRegister 74 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rdi|q]" v9|q -1 [74, 76[74 MustHaveRegister 76 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q v9|q [76, 174[76 MustHaveRegister 78 ShouldHaveRegister 114 MustHaveRegister 116 MustHaveRegister 118 MustHaveRegister 126 MustHaveRegister 150 MustHaveRegister 173 LiveAtLoopEnd  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q v10|q [78, 112[78 MustHaveRegister 80 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [800, 805[800 MustHaveRegister 802 MustHaveRegister 804 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q -1 [126, 130[[806, 826[126 MustHaveRegister 128 ShouldHaveRegister 826 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rcx|q]" v14|q v15|q [140, 170[150 ShouldHaveRegister 168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rcx|q]" v15|q v14|q [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q v7|q [194, 197[194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rsi|q]" v18|q v2|d [500, 502[500 MustHaveRegister 502 MustHaveRegister  "NoSpillStore"
  v19|q QWORD "[rcx|q]" v19|q -1 [498, 501[498 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rcx|q]" v20|q -1 [502, 504[502 MustHaveRegister 504 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rcx|q]" v21|q -1 [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[rcx|d]" v22|d -1 [506, 526[506 MustHaveRegister 508 MustHaveRegister 510 ShouldHaveRegister 526 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdi|q]" v23|q -1 [526, 632[[878, 898[526 MustHaveRegister 528 MustHaveRegister 632 MustHaveRegister 898 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[rsi|d]" v24|d -1 [528, 576[528 MustHaveRegister 570 MustHaveRegister 576 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdx|q]" v25|q -1 [568, 730[[910, 958[568 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 628 MustHaveRegister 634 MustHaveRegister 636 MustHaveRegister 704 MustHaveRegister 709 LiveAtLoopEnd 730 ShouldHaveRegister 926 MustHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v26|d DWORD "[rcx|d]" v26|d v24|d [570, 572[570 MustHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rbx|q]" v27|q v5|q [574, 582[574 MustHaveRegister 582 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[rsi|d]" v28|d v24|d [576, 578[576 MustHaveRegister 578 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rsi|d]" v29|d v28|d [578, 580[578 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rsi|q]" v30|q v29|d [580, 649[[910, 928[580 MustHaveRegister 582 ShouldHaveRegister 638 ShouldHaveRegister 648 ShouldHaveRegister 926 MustHaveRegister 928 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rbx|q]" v31|q v27|q [582, 584[582 MustHaveRegister 584 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q -1 [584, 586[584 MustHaveRegister 586 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v32|q [586, 710[[910, 932[586 MustHaveRegister 588 ShouldHaveRegister 622 MustHaveRegister 624 MustHaveRegister 626 MustHaveRegister 662 MustHaveRegister 686 MustHaveRegister 709 LiveAtLoopEnd  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q v33|q [588, 620[588 MustHaveRegister 590 MustHaveRegister 620 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q rax|q [904, 909[904 MustHaveRegister 906 MustHaveRegister 908 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[rdi|d]" v36|d v23|q [632, 634[632 MustHaveRegister 634 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rcx|q]" v37|q -1 [630, 633[630 MustHaveRegister 632 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rcx|q]" v38|q -1 [928, 931[928 MustHaveRegister 930 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rsi|q]" v39|q v30|q [650, 675[[932, 954[662 ShouldHaveRegister 674 ShouldHaveRegister 954 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rcx|q]" v40|q v33|q [662, 666[[932, 952[662 MustHaveRegister 664 ShouldHaveRegister 952 ShouldHaveRegister  "NoSpillStore"
  v41|q QWORD "[rsi|q]" v41|q v42|q [676, 706[686 ShouldHaveRegister 704 MustHaveRegister 706 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rsi|q]" v42|q v41|q [706, 709[706 MustHaveRegister 708 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rdx|q]" v44|q v25|q [730, 733[730 MustHaveRegister 732 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|q [734, 771[754 MustHaveRegister 770 ShouldHaveRegister  "NoSpillStore"
  v46|d DWORD "[rax|d]" v46|d -1 [754, 758[754 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q v46|d [758, 760[758 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q -1 [756, 759[756 MustHaveRegister 758 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rdx|q]" v49|q v17|q [198, 349[274 MustHaveRegister 344 ShouldHaveRegister  "OneSpillStore"
  v50|d DWORD "[rbx|d]" v50|d v3|d [218, 280[[290, 302[218 MustHaveRegister 222 MustHaveRegister 234 MustHaveRegister 246 MustHaveRegister 258 MustHaveRegister 276 ShouldHaveRegister  "OneSpillStore"
  v51|q QWORD "[r10|q]" v51|q v1|d [220, 342[[356, 425[220 MustHaveRegister 342 ShouldHaveRegister 412 ShouldHaveRegister  "OneSpillStore"
  v52|d DWORD "[r10|d]" v52|d -1 [1032, 1048[1048 MustHaveRegister  "NoSpillStore"
  v53|d DWORD "[r8|d]" v53|d -1 [274, 280[[290, 302[[356, 406[274 MustHaveRegister 278 MustHaveRegister 300 ShouldHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[r9|q]" v54|q v50|d [276, 350[[356, 420[276 MustHaveRegister 350 ShouldHaveRegister 420 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[r10|q]" v55|q v51|q [342, 346[342 MustHaveRegister 346 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v49|q [344, 348[344 MustHaveRegister 348 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[r8|q]" v57|q v53|d [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdi|q]" v58|q -1 [404, 407[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[r8|q]" v59|q -1 [408, 424[408 MustHaveRegister 410 MustHaveRegister 424 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rcx|q]" v60|q -1 [410, 422[410 MustHaveRegister 422 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q v51|q [412, 416[412 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdx|q]" v62|q v49|q [414, 418[414 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v63|d DWORD "[rax|d]" v63|d rax|q [428, 432[[832, 860[428 MustHaveRegister 430 MustHaveRegister 860 ShouldHaveRegister  "NoSpillStore"
  v64|d DWORD "[rax|d]" v64|d v63|d [860, 870[860 MustHaveRegister 862 ShouldHaveRegister 866 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v65|d DWORD "[rbx|d]" v65|d v50|d [862, 872[862 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v66|q QWORD "[rsi|q]" v66|q -1 [736, 760[736 MustHaveRegister 760 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rsi|q]" v67|q -1 [774, 794[774 MustHaveRegister 794 ShouldHaveRegister  "NoSpillStore"
  v68|q QWORD "[vstack:3|q]" v0|q v0|q [356, 417[ "OneSpillStore"
  v69|q QWORD "[vstack:0|q]" v49|q v49|q [349, 470[[832, 878[[980, 990[[1012, 1032[414 ShouldHaveRegister 470 ShouldHaveRegister 868 ShouldHaveRegister  "OneSpillStore"
  v70|d DWORD "[vstack:1|d]" v50|d v50|d [356, 425[ "OneSpillStore"
  v71|q QWORD "[vstack:2|q]" v51|q v51|q [425, 432[[832, 864[[980, 990[[1012, 1032[864 ShouldHaveRegister  "OneSpillStore"
  v72|q QWORD "[rdx|q]" v49|q v49|q [1032, 1053[ "OneSpillStore"
  v73|d DWORD "[vstack:1|d]" v50|d v50|d [425, 432[ "OneSpillStore"
  v74|q QWORD "[vstack:3|q]" v0|q v0|q [417, 425[ "OneSpillStore"
  v75|q QWORD "[vstack:3|q]" v0|q v0|q [425, 432[[474, 875[[878, 979[[980, 1011[[1012, 1053[ "OneSpillStore"
  v76|d DWORD "[rbx|d]" v50|d v50|d [832, 862[862 MustHaveRegister  "OneSpillStore"
  v77|q QWORD "[r11|q]" v51|q v51|q [1032, 1053[ "OneSpillStore"
  v78|q QWORD "[rsi|q]" v0|q v0|q [1054, 1075[ "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [v14|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [v49|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v50|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [v39|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [v41|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [v45|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  800  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  904  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v38|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [v52|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|DWORD[_] = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v2|DWORD = MOV input: [v1|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction v3|DWORD = MOV input: [v1|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction v5|QWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: v2|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction v7|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction v8|QWORD = SHL x: v5|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction v9|QWORD = LEA address: [v8|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction v10|QWORD = AND x: v9|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction v11|QWORD = ADD (x: v10|QWORD, y: v7|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: v11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: v11|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [v10|QWORD + v7|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [v7|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [v7|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [v7|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction v13|QWORD = LEA address: [v10|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: v13|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: v10|QWORD, y: v14|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [v7|QWORD + v14|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction v15|QWORD = LEA address: [v14|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction v17|QWORD[.] = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: v3|DWORD, y: v4|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction v50|DWORD = CMOVE (falseValue: v3|DWORD, ~trueValue: v4|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction v51|QWORD[.] = UNCOMPRESSPOINTER (input: v1|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v3|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: v50|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: v50|DWORD, y: v50|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction v53|DWORD = MOV input: [v49|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction v54|QWORD = MOVE input: v50|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: v53|DWORD, y: v2|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: v53|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction v55|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction v56|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [v55|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [v56|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD = MOVE input: v50|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v68|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction v58|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction v57|QWORD = UNCOMPRESSPOINTER (input: v53|DWORD, ~baseRegister: v58|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction v59|QWORD = MOV input: [v57|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction v60|QWORD = MOVSXD input: [v59|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction v61|QWORD[*] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction v62|QWORD[*] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [v61|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE input: v68|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [v62|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: v54|QWORD moveKind: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = MOVE input: v60|QWORD moveKind: QWORD <|@ <|@
      nr  424  <|@ instruction r8|QWORD = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = STACKMOVE (input: v74|QWORD[.], ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = STACKMOVE (input: v70|DWORD, ~backupSlot: vstack:5|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  428  <|@ instruction v63|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: v63|DWORD, y: v63|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction v19|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction v18|QWORD = UNCOMPRESSPOINTER (input: v2|DWORD, ~baseRegister: v19|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction v20|QWORD = MOV input: [v18|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction v21|QWORD[.] = MOV input: [v20|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction v22|DWORD[_] = MOV input: [v21|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v22|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: v22|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction v23|QWORD = MOV input: [v22|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v24|DWORD = MOV input: [v23|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction v25|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction v26|DWORD = AND x: v24|DWORD y: 63 size: DWORD <|@ <|@
      nr  572  <|@ instruction rcx|DWORD = MOVE input: v26|DWORD moveKind: DWORD <|@ <|@
      nr  574  <|@ instruction v27|QWORD = SHL (x: v5|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction v28|DWORD = SAR x: v24|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction v29|DWORD = AND x: v28|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction v30|QWORD = MOVE input: v29|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction v31|QWORD = ADD (x: v27|QWORD, y: v30|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction v32|QWORD = LEA address: [v31|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction v33|QWORD = AND x: v32|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction v34|QWORD = ADD (x: v33|QWORD, y: v25|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: v34|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: v34|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [v33|QWORD + v25|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [v25|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction v37|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction v36|DWORD = COMPRESSPOINTER (input: v23|QWORD, ~baseRegister: v37|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [v25|QWORD + 8], y: v36|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [v25|QWORD + 12], y: v4|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: v30|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction v40|QWORD = SUB (x: v33|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: v40|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: v33|QWORD, y: v41|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [v25|QWORD + v41|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction v42|QWORD = LEA address: [v41|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction v44|QWORD[.] = MOVE input: v25|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction v66|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction v46|DWORD = MOV input: [v45|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction v48|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction v47|QWORD = UNCOMPRESSPOINTER (input: v46|DWORD, ~baseRegister: v48|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: v66|QWORD, y: [v47|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction v67|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction rsi|QWORD = MOVE input: v67|QWORD moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  800  <|@ instruction v12|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v12|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = MOVE input: v12|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  826  <|@ instruction rcx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [v7|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD = MOVE input: v73|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction v64|DWORD = NOT value: v63|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction v65|DWORD = SUB (x: v50|DWORD, ~y: v64|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: v64|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: v65|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - v49|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: v23|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: v4|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  904  <|@ instruction v35|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [v35|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE input: v35|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [v25|QWORD + v30|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction v38|QWORD = LEA address: [v30|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE input: v38|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction rcx|QWORD = MOVE input: v40|QWORD moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [v39|QWORD + v25|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD[.] = MOVE input: v51|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE input: v49|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v52|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE input: v71|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = MOVE input: v69|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v52|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: v49|QWORD[.] 
locals: v51|QWORD[.] v4|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE input: v75|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - vstack:0|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   36  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   38  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   40  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   42  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   72  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   76  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   78  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   80  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  116  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  118  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  120  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  122  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  124  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  126  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  128  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  218  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  220  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  222  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  276  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  278  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  348  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  352  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  354  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE input: rbx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  406  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  408  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr  410  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr  412  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  414  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  418  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  420  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  426  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  430  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction NOP <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction NOP <|@ <|@
      nr  490  <|@ instruction NOP <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  500  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  502  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  504  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  506  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  510  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  528  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  530  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction NOP <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  570  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  574  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  576  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  580  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  582  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  584  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  586  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  588  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  590  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  594  <|@ instruction NOP <|@ <|@
      nr  596  <|@ instruction NOP <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  622  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  624  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  626  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  628  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  630  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  632  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  634  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  636  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  638  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  650  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  664  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  706  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  708  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  710  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  720  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction NOP <|@ <|@
      nr  730  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  736  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  756  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  758  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  760  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  770  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr  772  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  774  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction NOP <|@ <|@
      nr  784  <|@ instruction NOP <|@ <|@
      nr  786  <|@ instruction NOP <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  798  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  802  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  804  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  806  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction NOP <|@ <|@
      nr  828  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  830  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr  832  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr  862  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  866  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  874  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - vstack:0|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr  876  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  878  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  906  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  908  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  928  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  930  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  934  <|@ instruction NOP <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction NOP <|@ <|@
      nr  946  <|@ instruction NOP <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  956  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  976  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  978  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  980  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  988  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  990  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1008  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1010  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1020  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1022  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1030  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1054  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr 1072  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1074  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction vstack:1|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: vstack:1|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - vstack:0|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction vstack:2|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction vstack:0|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction vstack:3|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  764  <|@ instruction r11|QWORD[.] = MOVE input: vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: vstack:3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:3|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [718, 1102[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[vstack:1|d]" vstack:1|d -1 [950, 1038[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[vstack:2|q]" vstack:2|q -1 [716, 1070[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[vstack:3|q]" vstack:3|q -1 [82, 1126[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:56|q]" vstack:0|q -1 [718, 1102[ "NOT_SUPPORTED"
  vstack:1|d DWORD "[stack:28|d]" vstack:1|d -1 [950, 1038[ "NOT_SUPPORTED"
  vstack:2|q QWORD "[stack:48|q]" vstack:2|q -1 [716, 1070[ "NOT_SUPPORTED"
  vstack:3|q QWORD "[stack:40|q]" vstack:3|q -1 [82, 1126[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  764  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  798  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  764  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  766  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  244  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@reference-map: [stack:8, stack:24]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:24]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B10" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   34  <|@ st <@st|@reference-map: [rsi:0, r10:0]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0] <|@ <|@
      nr   36  <|@ instruction r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD <|@ <|@
      nr   38  <|@ instruction r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   40  <|@ instruction rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4606543883330116302
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   70  <|@ instruction rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD <|@ <|@
      nr   72  <|@ instruction rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD <|@ <|@
      nr   74  <|@ instruction rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD <|@ <|@
      nr   76  <|@ instruction rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr   78  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B8" 
    xhandlers
    flags 
    probability 4606460196692267903
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  150  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  152  <|@ instruction AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  154  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  160  <|@ instruction rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  162  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4606377346920797988
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = MOVE input: long[16|0x10] <|@ <|@
      nr  174  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B5" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4636044249828874849
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  206  <|@ instruction rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD <|@ <|@
      nr  208  <|@ instruction JUMP ~outgoingValues: [] destination: B6 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B6" 
    successors "B6" "B7" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4636108328948996111
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B9" 
    xhandlers
    flags 
    probability 4606377346920797989
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B7" 
    successors "B28" 
    xhandlers
    flags 
    probability 4606460196692267904
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  260  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B9" "B27" "B2" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction NOP <|@ <|@
      nr  706  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  708  <|@ instruction rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr  710  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3 <|@ <|@
      nr  712  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction NOP <|@ <|@
      nr  744  <|@ instruction NOP <|@ <|@
      nr  746  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B35" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  826  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  828  <|@ instruction NOP <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4606281698874543309
    begin_IR
      LIR
      nr  850  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction NOP <|@ <|@
      nr  856  <|@ instruction NOP <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  866  <|@ instruction r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  868  <|@ instruction CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B41" 
    xhandlers
    flags 
    probability 4603039107142836552
    begin_IR
      LIR
      nr  870  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction NOP <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction JUMP ~outgoingValues: [] destination: B38 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B38" "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4604984662181860606
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  936  <|@ instruction rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  940  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  942  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B36" "B43" "B44" "B41" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr 1084  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction NOP <|@ <|@
      nr 1092  <|@ instruction NOP <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1104  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" "B42" 
    xhandlers
    flags 
    probability 4600156803381319435
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4596950240446631642
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction JUMP ~outgoingValues: [] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594356167061266236
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr  952  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  954  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1004  <|@ instruction r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1006  <|@ instruction r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD <|@ <|@
      nr 1008  <|@ instruction rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD <|@ <|@
      nr 1010  <|@ instruction rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1012  <|@ instruction rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1016  <|@ instruction rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1018  <|@ instruction rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1024  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4594304285593558928
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction JUMP ~outgoingValues: [] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591870180066957720
    begin_IR
      LIR
      nr  838  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  840  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction JUMP ~outgoingValues: [] destination: B36 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  290  <|@ instruction rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD <|@ <|@
      nr  294  <|@ instruction rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD <|@ <|@
      nr  296  <|@ instruction rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD <|@ <|@
      nr  298  <|@ st <@st|@reference-map: [rcx:0, r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr  300  <|@ instruction CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD <|@ <|@
      nr  340  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0] <|@ <|@
      nr  342  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" "B16" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  406  <|@ instruction rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD <|@ <|@
      nr  408  <|@ instruction rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD <|@ <|@
      nr  410  <|@ instruction rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD <|@ <|@
      nr  412  <|@ instruction rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  418  <|@ instruction rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD <|@ <|@
      nr  420  <|@ instruction rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD <|@ <|@
      nr  422  <|@ instruction rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  424  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction NOP <|@ <|@
      nr  466  <|@ instruction NOP <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  488  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  490  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  492  <|@ instruction AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  494  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  496  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  498  <|@ instruction rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  500  <|@ instruction MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  504  <|@ instruction TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction JUMP ~outgoingValues: [] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B24" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  554  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction JUMP ~outgoingValues: [] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B21" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4619430647526257562
    begin_IR
      LIR
      nr  578  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD <|@ <|@
      nr  596  <|@ instruction rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD <|@ <|@
      nr  598  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" "B22" 
    successors "B22" "B23" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4619508876103013821
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction NOP <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B25" 
    xhandlers
    flags 
    probability 4589671049575565519
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction JUMP ~outgoingValues: [] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4589721621584781687
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" "B15" 
    successors "B27" "B46" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  650  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD <|@ <|@
      nr  670  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  672  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  674  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B28" 
    xhandlers
    flags 
    probability 4589772704422373776
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~outgoingValues: [] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B28" 
    xhandlers
    flags 
    probability 4576509566603350972
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>} <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  108  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  110  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  112  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B9" 
    xhandlers
    flags 
    probability 4576456007155127996
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  222  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  246  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4564283650765477397
    begin_IR
      LIR
      nr 1036  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1038  <|@ instruction rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction rax|DWORD = NOT value: rax|DWORD size: DWORD <|@ <|@
      nr 1068  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr 1070  <|@ instruction rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1074  <|@ instruction rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1076  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1078  <|@ instruction r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD <|@ <|@
      nr 1080  <|@ st <@st|@reference-map: [stack:8, stack:24]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35]
locals: - - - stack:56|QWORD[.] 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8] <|@ <|@
      nr 1082  <|@ instruction JUMP ~outgoingValues: [] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B26" 
    xhandlers
    flags 
    probability 4559677826483358787
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr  450  <|@ st <@st|@reference-map: [r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  452  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr  454  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ instruction JUMP ~outgoingValues: [] destination: B15 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  518  <|@ instruction NOP <|@ <|@
      nr  520  <|@ instruction NOP <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD <|@ <|@
      nr  534  <|@ instruction rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD <|@ <|@
      nr  536  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B25" 
    xhandlers
    flags 
    probability 4559612440451240913
    begin_IR
      LIR
      nr  610  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  612  <|@ instruction NOP <|@ <|@
      nr  614  <|@ instruction NOP <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD} <|@ <|@
      nr  632  <|@ instruction JUMP ~outgoingValues: [] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD <|@ <|@
      nr  320  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  322  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  784  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7] <|@ <|@
      nr  802  <|@ instruction JUMP ~outgoingValues: [] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" "B33" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  730  <|@ instruction r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  822  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  824  <|@ st <@st|@reference-map: [rdx:0, r11:0, stack:24]
live-base-pointers: []
java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24]
stack: rdx|QWORD[.] 
locals: r11|QWORD[.] r9|DWORD - - 
java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6]
locals: - - 
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:24, 6, 8] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD <|@ <|@
      nr 1124  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1126  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: stack:40|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  716  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  718  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  720  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7] <|@ <|@
      nr  734  <|@ instruction JUMP ~outgoingValues: [] destination: B29 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  750  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  752  <|@ instruction stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  754  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7] <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B31 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD <|@ <|@
      nr  364  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // elementData:java.lang.Object[]
     4: aload_0       
     5: getfield      #10         // size:int
     8: invokestatic  #14         // java.util.Arrays.copyOf:(java.lang.Object[], int)java.lang.Object[]
    11: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f85ad0500009090909090909090909090909048896c2430448b5614468b1cd508000000468b04d50c000000448b4e10418bd94181fbaddeadde0f85070200009090909090909090909090498b97b801000048c1e302488d7b174883e7f8488bcf4803ca493b8fc80100000f8758030000909090909090909090909090909049898fb80100000f188417000100000f188417400100000f1884178001000048c70201000000c74208addeadde44894a0c488d4ff04881f9000800000f833f03000090909048c7c110000000e92f0000006666660f1f84000000000066666690660f1f840000000000666666909090909090909048c7040a00000000488d490890909090483bf977e4909090909090909090909090909090453bc1418bd8410f4fd949c1e20385db0f8c2004000090909090413bd80f872d04000090909090413bd90f87940300009090909085db0f84e7000000909090909090448b4208448bcb453bc30f85500000009090909090909090909090909090909090488bf2498d7a10488d76104889542408498bd1e8000000009090909090909090488b442408488b6c24304883c438493ba7500400000f870e040000c5f877c3909090904181f8addeadde0f8505000000909090eb9d895c242448895424084889742418909090909090909090909090909090909090909090909048bf0000002b787f00004e8d04074d8b80d000000049634814498bfa488b542408488d7f10488d7210498bd14c89542410e80000000085c00f85eb010000909090e958ffffff4889542408909090e94bffffff4889742418909090909090909090909048b90000002b787f00004a8d3419488b4e70488b098b49408504cd0000000081f9addeadde0f842f020000909090909090488b3ccd180000008b77084585c90f8ce80200009090909090909090909090909090909090498b97b80100008bce83e13f48d3e3c1fe1081e6ff0000004803de488d43074883e0f8488bc84803ca493b8fc80100000f87760100009090909090909090909090909049898fb80100000f188410000100000f188410400100000f1884108001000048c7020100000048b90000002b787f0000482bf9897a0844894a0c48f7c6070000000f85480100009090909090909090488bc8482bce4881f9000800000f8347010000909090e9250000006666660f1f840000000000666666906666909090909090909048c7043200000000488d760890909090483bc677e49090909090909048beaddeaddeaddeadde90909090909090908b420848b90000002b787f0000488d0401483b70380f8567010000909090488b742418e946fdffff488974241848beaddeaddeaddeadde909090909090909090418bd1e8000000000f1f8400000000008500488bd0488b742418e90ffdffff4889742418909090909090909090488d7a104833c0f348aae9eefcffff8b5c242490909090909090909090909090f7d02bd8488b7424108bd0488b4c2408448bc0448bcb666690e8000000000f1f840000000000e939fdffff909090909090909090488bf7418bd1e8000000000f1f8400000000008500488bd0e910ffffff90909090909090c7043200000000488d4e04488bf1e9a1feffff909090909090909090488d3c164833c0f348aae9dafeffff9090909090909041c787840400008f6dfeff49c7879004000000000000e8000000000f1f8400000000004c895424104889542408488974241890909041bae74dffff4c8b5c2410488b542408909090909090904589978404000049c7879004000000000000e8000000000f1f8400000000009090909090909041c78784040000dd97ffff49c7879004000000000000e8000000000f1f8400000000004c895424104889542408488974241890909041bae755ffffeb8c4c895424104889542408488974241890909041bae751ffffe96fffffff488b7424189090909090909041c787840400008f65feff49c7879004000000000000e8000000000f1f84000000000048896c2430e800000000e944fafffff4488d0ddefbffff49898f68040000e9f6f9fffff441c78784040000f5c0ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f69feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fd8feff49c7879004000000000000e8000000000f1f84000000000041c787840400008f61feff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD  <||@
  Comment 76 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 80 34 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 80 [rsi:0, r10:0]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 96 38 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 100 40 rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 103 42 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 103 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 116 block B1 null  <||@
  Comment 116 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 46 NOP  <||@
  Comment 117 48 NOP  <||@
  Comment 118 50 NOP  <||@
  Comment 119 52 NOP  <||@
  Comment 120 54 NOP  <||@
  Comment 121 56 NOP  <||@
  Comment 122 58 NOP  <||@
  Comment 123 60 NOP  <||@
  Comment 124 62 NOP  <||@
  Comment 125 64 NOP  <||@
  Comment 126 66 NOP  <||@
  Comment 127 68 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 134 70 rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD  <||@
  Comment 138 72 rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD  <||@
  Comment 142 74 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 146 76 rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 152 78 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 165 block B3 null  <||@
  Comment 165 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 118 NOP  <||@
  Comment 166 120 NOP  <||@
  Comment 167 122 NOP  <||@
  Comment 168 124 NOP  <||@
  Comment 169 126 NOP  <||@
  Comment 170 128 NOP  <||@
  Comment 171 130 NOP  <||@
  Comment 172 132 NOP  <||@
  Comment 173 134 NOP  <||@
  Comment 174 136 NOP  <||@
  Comment 175 138 NOP  <||@
  Comment 176 140 NOP  <||@
  Comment 177 142 NOP  <||@
  Comment 178 144 NOP  <||@
  Comment 179 146 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 186 148 AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 194 150 AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 202 152 AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 210 154 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 217 156 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 217 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 224 158 MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 228 160 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 232 162 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 245 block B4 null  <||@
  Comment 245 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 166 NOP  <||@
  Comment 246 168 NOP  <||@
  Comment 247 170 NOP  <||@
  Comment 248 172 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 255 174 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 260 block B6 loop 0 depth 1 header:241|LoopBegin  <||@
  Comment 260 188 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 190 NOP  <||@
  Comment 289 192 NOP  <||@
  Comment 290 194 NOP  <||@
  Comment 291 196 NOP  <||@
  Comment 292 198 NOP  <||@
  Comment 293 200 NOP  <||@
  Comment 294 202 NOP  <||@
  Comment 295 204 MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 206 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 307 208 JUMP ~outgoingValues: [] destination: B6 -> B5  <||@
  Comment 307 block B5 loop 0 depth 1 header:241|LoopBegin  <||@
  Comment 307 176 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 178 NOP  <||@
  Comment 308 180 NOP  <||@
  Comment 309 182 NOP  <||@
  Comment 310 184 NOP  <||@
  Comment 311 186 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 316 block B7 null  <||@
  Comment 316 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 212 NOP  <||@
  Comment 317 214 NOP  <||@
  Comment 318 216 NOP  <||@
  Comment 319 218 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 319 block B9 null  <||@
  Comment 319 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 250 NOP  <||@
  Comment 320 252 NOP  <||@
  Comment 321 254 NOP  <||@
  Comment 322 256 NOP  <||@
  Comment 323 258 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 323 260 JUMP ~outgoingValues: [] destination: B9 -> B28  <||@
  Comment 323 block B28 null  <||@
  Comment 323 688 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 690 NOP  <||@
  Comment 324 692 NOP  <||@
  Comment 325 694 NOP  <||@
  Comment 326 696 NOP  <||@
  Comment 327 698 NOP  <||@
  Comment 328 700 NOP  <||@
  Comment 329 702 NOP  <||@
  Comment 330 704 NOP  <||@
  Comment 331 706 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 334 708 rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 341 710 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3  <||@
  Comment 345 712 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 353 block B30 null  <||@
  Comment 353 736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 353 738 NOP  <||@
  Comment 354 740 NOP  <||@
  Comment 355 742 NOP  <||@
  Comment 356 744 NOP  <||@
  Comment 357 746 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 366 block B32 null  <||@
  Comment 366 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 366 772 NOP  <||@
  Comment 367 774 NOP  <||@
  Comment 368 776 NOP  <||@
  Comment 369 778 NOP  <||@
  Comment 370 780 CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD  <||@
  Comment 379 block B35 null  <||@
  Comment 379 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 379 828 NOP  <||@
  Comment 380 830 NOP  <||@
  Comment 381 832 NOP  <||@
  Comment 382 834 NOP  <||@
  Comment 383 836 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 391 block B37 null  <||@
  Comment 391 850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 391 852 NOP  <||@
  Comment 392 854 NOP  <||@
  Comment 393 856 NOP  <||@
  Comment 394 858 NOP  <||@
  Comment 395 860 NOP  <||@
  Comment 396 862 NOP  <||@
  Comment 397 864 r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 401 866 r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 404 868 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 413 block B38 null  <||@
  Comment 413 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 413 872 NOP  <||@
  Comment 414 874 NOP  <||@
  Comment 415 876 NOP  <||@
  Comment 416 878 JUMP ~outgoingValues: [] destination: B38 -> B41  <||@
  Comment 416 block B41 null  <||@
  Comment 416 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 904 NOP  <||@
  Comment 417 906 NOP  <||@
  Comment 418 908 NOP  <||@
  Comment 419 910 NOP  <||@
  Comment 420 912 NOP  <||@
  Comment 421 914 NOP  <||@
  Comment 422 916 NOP  <||@
  Comment 423 918 NOP  <||@
  Comment 424 920 NOP  <||@
  Comment 425 922 NOP  <||@
  Comment 426 924 NOP  <||@
  Comment 427 926 NOP  <||@
  Comment 428 928 NOP  <||@
  Comment 429 930 NOP  <||@
  Comment 430 932 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 430 934 rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 936 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 437 938 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 441 940 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 446 942 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 449 944 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 449 {Field[name=StubRoutines::_arrayof_oop_arraycopy, type=address, offset=0, address=0x7f78b1ffa468, value=140155947492448]:0x7f789976a460}  <||@
  Comment 454 946 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 454 block B45 null  <||@
  Comment 454 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 1086 NOP  <||@
  Comment 455 1088 NOP  <||@
  Comment 456 1090 NOP  <||@
  Comment 457 1092 NOP  <||@
  Comment 458 1094 NOP  <||@
  Comment 459 1096 NOP  <||@
  Comment 460 1098 NOP  <||@
  Comment 461 1100 NOP  <||@
  Comment 462 1102 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 467 1104 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 476 POLL_RETURN_FAR  <||@
  Comment 493 block B39 null  <||@
  Comment 493 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 882 NOP  <||@
  Comment 494 884 NOP  <||@
  Comment 495 886 NOP  <||@
  Comment 496 888 NOP  <||@
  Comment 497 890 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 497 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 510 block B40 null  <||@
  Comment 510 892 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 894 NOP  <||@
  Comment 511 896 NOP  <||@
  Comment 512 898 NOP  <||@
  Comment 513 900 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 515 block B42 null  <||@
  Comment 515 948 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 515 950 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 519 952 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 524 954 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 529 956 NOP  <||@
  Comment 530 958 NOP  <||@
  Comment 531 960 NOP  <||@
  Comment 532 962 NOP  <||@
  Comment 533 964 NOP  <||@
  Comment 534 966 NOP  <||@
  Comment 535 968 NOP  <||@
  Comment 536 970 NOP  <||@
  Comment 537 972 NOP  <||@
  Comment 538 974 NOP  <||@
  Comment 539 976 NOP  <||@
  Comment 540 978 NOP  <||@
  Comment 541 980 NOP  <||@
  Comment 542 982 NOP  <||@
  Comment 543 984 NOP  <||@
  Comment 544 986 NOP  <||@
  Comment 545 988 NOP  <||@
  Comment 546 990 NOP  <||@
  Comment 547 992 NOP  <||@
  Comment 548 994 NOP  <||@
  Comment 549 996 NOP  <||@
  Comment 550 998 NOP  <||@
  Comment 551 1000 NOP  <||@
  Comment 552 1002 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 562 1004 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 566 1006 r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD  <||@
  Comment 573 1008 rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD  <||@
  Comment 577 1010 rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 580 1012 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 585 1014 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 589 1016 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 593 1018 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 596 1020 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 601 1022 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 601 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x7f78b2050448, value=140155947493504]:0x7f789976a880}  <||@
  Comment 606 1024 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 614 block B43 null  <||@
  Comment 614 1026 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 614 1028 NOP  <||@
  Comment 615 1030 NOP  <||@
  Comment 616 1032 NOP  <||@
  Comment 617 1034 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 622 block B36 null  <||@
  Comment 622 838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 622 840 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 627 842 NOP  <||@
  Comment 628 844 NOP  <||@
  Comment 629 846 NOP  <||@
  Comment 630 848 JUMP ~outgoingValues: [] destination: B36 -> B45  <||@
  Comment 635 block B10 null  <||@
  Comment 635 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 635 264 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 640 266 NOP  <||@
  Comment 641 268 NOP  <||@
  Comment 642 270 NOP  <||@
  Comment 643 272 NOP  <||@
  Comment 644 274 NOP  <||@
  Comment 645 276 NOP  <||@
  Comment 646 278 NOP  <||@
  Comment 647 280 NOP  <||@
  Comment 648 282 NOP  <||@
  Comment 649 284 NOP  <||@
  Comment 650 286 NOP  <||@
  Comment 651 288 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 661 290 rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 665 292 rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD  <||@
  Comment 669 294 rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD  <||@
  Comment 672 296 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD  <||@
  Comment 675 298 NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 675 [rcx:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 675 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 682 300 CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void]  <||@
  Comment 682 {NarrowOop[Class:void]}  <||@
  Comment 694 block B12 null  <||@
  Comment 694 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 694 326 NOP  <||@
  Comment 695 328 NOP  <||@
  Comment 696 330 NOP  <||@
  Comment 697 332 NOP  <||@
  Comment 698 334 NOP  <||@
  Comment 699 336 NOP  <||@
  Comment 700 338 rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD  <||@
  Comment 708 340 rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0]  <||@
  Comment 708 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 708 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 711 342 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 720 block B14 null  <||@
  Comment 720 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 720 370 NOP  <||@
  Comment 721 372 NOP  <||@
  Comment 722 374 NOP  <||@
  Comment 723 376 NOP  <||@
  Comment 724 378 NOP  <||@
  Comment 725 380 NOP  <||@
  Comment 726 382 NOP  <||@
  Comment 727 384 NOP  <||@
  Comment 728 386 NOP  <||@
  Comment 729 388 NOP  <||@
  Comment 730 390 NOP  <||@
  Comment 731 392 NOP  <||@
  Comment 732 394 NOP  <||@
  Comment 733 396 NOP  <||@
  Comment 734 398 NOP  <||@
  Comment 735 400 NOP  <||@
  Comment 736 402 NOP  <||@
  Comment 737 404 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 744 406 rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD  <||@
  Comment 749 408 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 752 410 rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD  <||@
  Comment 755 412 rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD  <||@
  Comment 761 414 rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 761 416 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 764 418 rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD  <||@
  Comment 768 420 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 772 422 rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 778 424 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 791 block B16 null  <||@
  Comment 791 458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 791 460 NOP  <||@
  Comment 792 462 NOP  <||@
  Comment 793 464 NOP  <||@
  Comment 794 466 NOP  <||@
  Comment 795 468 NOP  <||@
  Comment 796 470 NOP  <||@
  Comment 797 472 NOP  <||@
  Comment 798 474 NOP  <||@
  Comment 799 476 NOP  <||@
  Comment 800 478 NOP  <||@
  Comment 801 480 NOP  <||@
  Comment 802 482 NOP  <||@
  Comment 803 484 NOP  <||@
  Comment 804 486 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 811 488 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 819 490 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 827 492 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 835 494 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 842 496 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 852 498 rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 855 500 MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD  <||@
  Comment 858 502 MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 862 504 TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD  <||@
  Comment 875 block B17 null  <||@
  Comment 875 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 875 508 NOP  <||@
  Comment 876 510 NOP  <||@
  Comment 877 512 NOP  <||@
  Comment 878 514 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 878 block B19 null  <||@
  Comment 878 540 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 878 542 NOP  <||@
  Comment 879 544 NOP  <||@
  Comment 880 546 NOP  <||@
  Comment 881 548 NOP  <||@
  Comment 882 550 NOP  <||@
  Comment 883 552 rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 889 554 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 902 block B20 null  <||@
  Comment 902 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 902 558 NOP  <||@
  Comment 903 560 NOP  <||@
  Comment 904 562 NOP  <||@
  Comment 905 564 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 910 block B22 loop 1 depth 1 header:350|LoopBegin  <||@
  Comment 910 578 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 928 580 NOP  <||@
  Comment 929 582 NOP  <||@
  Comment 930 584 NOP  <||@
  Comment 931 586 NOP  <||@
  Comment 932 588 NOP  <||@
  Comment 933 590 NOP  <||@
  Comment 934 592 NOP  <||@
  Comment 935 594 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 943 596 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 947 598 JUMP ~outgoingValues: [] destination: B22 -> B21  <||@
  Comment 947 block B21 loop 1 depth 1 header:350|LoopBegin  <||@
  Comment 947 566 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 947 568 NOP  <||@
  Comment 948 570 NOP  <||@
  Comment 949 572 NOP  <||@
  Comment 950 574 NOP  <||@
  Comment 951 576 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 956 block B23 null  <||@
  Comment 956 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 602 NOP  <||@
  Comment 957 604 NOP  <||@
  Comment 958 606 NOP  <||@
  Comment 959 608 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 959 block B25 null  <||@
  Comment 959 634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 959 636 NOP  <||@
  Comment 960 638 NOP  <||@
  Comment 961 640 NOP  <||@
  Comment 962 642 NOP  <||@
  Comment 963 644 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 963 646 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 963 block B26 null  <||@
  Comment 963 648 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 963 650 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 963 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 973 652 NOP  <||@
  Comment 974 654 NOP  <||@
  Comment 975 656 NOP  <||@
  Comment 976 658 NOP  <||@
  Comment 977 660 NOP  <||@
  Comment 978 662 NOP  <||@
  Comment 979 664 NOP  <||@
  Comment 980 666 NOP  <||@
  Comment 981 668 rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 984 670 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 994 672 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 998 674 CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD  <||@
  Comment 1008 block B27 null  <||@
  Comment 1008 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 678 NOP  <||@
  Comment 1009 680 NOP  <||@
  Comment 1010 682 NOP  <||@
  Comment 1011 684 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 686 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 1021 block B2 null  <||@
  Comment 1021 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1021 82 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 84 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 1026 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 1036 86 NOP  <||@
  Comment 1037 88 NOP  <||@
  Comment 1038 90 NOP  <||@
  Comment 1039 92 NOP  <||@
  Comment 1040 94 NOP  <||@
  Comment 1041 96 NOP  <||@
  Comment 1042 98 NOP  <||@
  Comment 1043 100 NOP  <||@
  Comment 1044 102 NOP  <||@
  Comment 1045 104 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1048 106 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1048 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1053 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1061 108 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1061 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1061 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1063 110 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1066 112 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 114 JUMP ~outgoingValues: [] destination: B2 -> B28  <||@
  Comment 1076 block B8 null  <||@
  Comment 1076 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1076 222 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 224 NOP  <||@
  Comment 1082 226 NOP  <||@
  Comment 1083 228 NOP  <||@
  Comment 1084 230 NOP  <||@
  Comment 1085 232 NOP  <||@
  Comment 1086 234 NOP  <||@
  Comment 1087 236 NOP  <||@
  Comment 1088 238 NOP  <||@
  Comment 1089 240 NOP  <||@
  Comment 1090 242 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1100 246 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 1105 block B44 null  <||@
  Comment 1105 1036 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1105 1038 rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1109 1040 NOP  <||@
  Comment 1110 1042 NOP  <||@
  Comment 1111 1044 NOP  <||@
  Comment 1112 1046 NOP  <||@
  Comment 1113 1048 NOP  <||@
  Comment 1114 1050 NOP  <||@
  Comment 1115 1052 NOP  <||@
  Comment 1116 1054 NOP  <||@
  Comment 1117 1056 NOP  <||@
  Comment 1118 1058 NOP  <||@
  Comment 1119 1060 NOP  <||@
  Comment 1120 1062 NOP  <||@
  Comment 1121 1064 NOP  <||@
  Comment 1122 1066 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 1124 1068 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1126 1070 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 1072 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1133 1074 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 1076 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1141 1078 r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1144 1080 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8]  <||@
  Comment 1147 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 1147 INVOKESTATIC  <||@
  Comment 1152 [stack:8, stack:24]at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:56|QWORD[.] 
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1160 1082 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1165 block B15 null  <||@
  Comment 1165 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1165 428 NOP  <||@
  Comment 1166 430 NOP  <||@
  Comment 1167 432 NOP  <||@
  Comment 1168 434 NOP  <||@
  Comment 1169 436 NOP  <||@
  Comment 1170 438 NOP  <||@
  Comment 1171 440 NOP  <||@
  Comment 1172 442 NOP  <||@
  Comment 1173 444 NOP  <||@
  Comment 1174 446 rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1177 448 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1180 450 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1180 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1185 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1193 452 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1193 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1193 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1195 454 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1198 456 JUMP ~outgoingValues: [] destination: B15 -> B26  <||@
  Comment 1203 block B18 null  <||@
  Comment 1203 516 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 518 NOP  <||@
  Comment 1204 520 NOP  <||@
  Comment 1205 522 NOP  <||@
  Comment 1206 524 NOP  <||@
  Comment 1207 526 NOP  <||@
  Comment 1208 528 NOP  <||@
  Comment 1209 530 NOP  <||@
  Comment 1210 532 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD  <||@
  Comment 1217 534 rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD  <||@
  Comment 1221 536 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1224 538 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1229 block B24 null  <||@
  Comment 1229 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 612 NOP  <||@
  Comment 1230 614 NOP  <||@
  Comment 1231 616 NOP  <||@
  Comment 1232 618 NOP  <||@
  Comment 1233 620 NOP  <||@
  Comment 1234 622 NOP  <||@
  Comment 1235 624 NOP  <||@
  Comment 1236 626 NOP  <||@
  Comment 1237 628 NOP  <||@
  Comment 1238 630 ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1248 632 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1253 block B11 null  <||@
  Comment 1253 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1253 304 NOP  <||@
  Comment 1254 306 NOP  <||@
  Comment 1255 308 NOP  <||@
  Comment 1256 310 NOP  <||@
  Comment 1257 312 NOP  <||@
  Comment 1258 314 NOP  <||@
  Comment 1259 316 NOP  <||@
  Comment 1260 318 MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD  <||@
  Comment 1271 320 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1282 322 DEOPT info [bci:0]  <||@
  Comment 1282 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1287 [stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1295 block B33 null  <||@
  Comment 1295 782 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1295 784 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1300 786 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 788 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 790 NOP  <||@
  Comment 1311 792 NOP  <||@
  Comment 1312 794 NOP  <||@
  Comment 1313 796 r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7]  <||@
  Comment 1319 802 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1319 block B34 null  <||@
  Comment 1319 804 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1319 730 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1324 732 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1329 806 NOP  <||@
  Comment 1330 808 NOP  <||@
  Comment 1331 810 NOP  <||@
  Comment 1332 812 NOP  <||@
  Comment 1333 814 NOP  <||@
  Comment 1334 816 NOP  <||@
  Comment 1335 818 NOP  <||@
  Comment 1336 820 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1343 822 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1354 824 DEOPT info [bci:24, 6, 8]  <||@
  Comment 1354 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1359 [rdx:0, r11:0, stack:24]at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24, duringCall: false, rethrow: false]
              |0             |1         |2  |3 
     locals:  |r11|QWORD[.]  |r9|DWORD  |-  |- 
     stack:   |rdx|QWORD[.]  |          |   |  
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1367 block B46 null  <||@
  Comment 1367 1106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1367 1108 NOP  <||@
  Comment 1368 1110 NOP  <||@
  Comment 1369 1112 NOP  <||@
  Comment 1370 1114 NOP  <||@
  Comment 1371 1116 NOP  <||@
  Comment 1372 1118 NOP  <||@
  Comment 1373 1120 NOP  <||@
  Comment 1374 1122 MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD  <||@
  Comment 1385 1124 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1396 1126 DEOPT info [bci:0]  <||@
  Comment 1396 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1401 [stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1409 block B29 null  <||@
  Comment 1409 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1409 716 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1414 718 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 720 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 722 NOP  <||@
  Comment 1425 724 NOP  <||@
  Comment 1426 726 NOP  <||@
  Comment 1427 728 r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7]  <||@
  Comment 1433 734 JUMP ~outgoingValues: [] destination: B29 -> B34  <||@
  Comment 1435 block B31 null  <||@
  Comment 1435 748 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1435 750 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1440 752 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 754 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1450 756 NOP  <||@
  Comment 1451 758 NOP  <||@
  Comment 1452 760 NOP  <||@
  Comment 1453 762 r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7]  <||@
  Comment 1459 768 JUMP ~outgoingValues: [] destination: B31 -> B34  <||@
  Comment 1464 block B13 null  <||@
  Comment 1464 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1464 346 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 348 NOP  <||@
  Comment 1470 350 NOP  <||@
  Comment 1471 352 NOP  <||@
  Comment 1472 354 NOP  <||@
  Comment 1473 356 NOP  <||@
  Comment 1474 358 NOP  <||@
  Comment 1475 360 NOP  <||@
  Comment 1476 362 MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD  <||@
  Comment 1487 364 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1498 366 DEOPT info [bci:0]  <||@
  Comment 1498 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1503 [rsi:0]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 1516 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1541 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1569 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1574 [rsi:0, r10:0]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 1604 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1609 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1639 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1644 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1674 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1679 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1687 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1687 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1693 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1693 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-8776[java.util.ArrayList.toArray()]"
  method "HotSpotCompilation-8776[java.util.ArrayList.toArray()]"
  date 1724269768625
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af90540 448b560849bc0000002b787f00004d03d44d33e4493bc20f85234b7ffe66669089842400c0feff4883ec389041817f20000000000f85ad0500009090909090909090909090909048896c2430448b5614468b1cd508000000468b04d50c000000448b4e10418bd94181fb581200000f85070200009090909090909090909090498b97b801000048c1e302488d7b174883e7f8488bcf4803ca493b8fc80100000f8758030000909090909090909090909090909049898fb80100000f188417000100000f188417400100000f1884178001000048c70201000000c742085812000044894a0c488d4ff04881f9000800000f833f03000090909048c7c110000000e92f0000006666660f1f84000000000066666690660f1f840000000000666666909090909090909048c7040a00000000488d490890909090483bf977e4909090909090909090909090909090453bc1418bd8410f4fd949c1e20385db0f8c2004000090909090413bd80f872d04000090909090413bd90f87940300009090909085db0f84e7000000909090909090448b4208448bcb453bc30f85500000009090909090909090909090909090909090488bf2498d7a10488d76104889542408498bd1e85a9d7dfe9090909090909090488b442408488b6c24304883c438493ba7500400000f870e040000c5f877c3909090904181f8581200000f8505000000909090eb9d895c242448895424084889742418909090909090909090909090909090909090909090909048bf0000002b787f00004e8d04074d8b80d000000049634814498bfa488b542408488d7f10488d7210498bd14c89542410e8e2a07dfe85c00f85eb010000909090e958ffffff4889542408909090e94bffffff4889742418909090909090909090909048b90000002b787f00004a8d3419488b4e70488b098b49408504cd0000000081f9f915f9ff0f842f020000909090909090488b3ccd180000008b77084585c90f8ce80200009090909090909090909090909090909090498b97b80100008bce83e13f48d3e3c1fe1081e6ff0000004803de488d43074883e0f8488bc84803ca493b8fc80100000f87760100009090909090909090909090909049898fb80100000f188410000100000f188410400100000f1884108001000048c7020100000048b90000002b787f0000482bf9897a0844894a0c48f7c6070000000f85480100009090909090909090488bc8482bce4881f9000800000f8347010000909090e9250000006666660f1f840000000000666666906666909090909090909048c7043200000000488d760890909090483bc677e49090909090909048be5812002b787f000090909090909090908b420848b90000002b787f0000488d0401483b70380f8567010000909090488b742418e946fdffff488974241848be5812002b787f0000909090909090909090418bd1e8a3e293fe0f1f8400000000008500488bd0488b742418e90ffdffff4889742418909090909090909090488d7a104833c0f348aae9eefcffff8b5c242490909090909090909090909090f7d02bd8488b7424108bd0488b4c2408448bc0448bcb666690e8c04f7ffe0f1f840030060005e939fdffff909090909090909090488bf7418bd1e81fe293fe0f1f8400000000008500488bd0e910ffffff90909090909090c7043200000000488d4e04488bf1e9a1feffff909090909090909090488d3c164833c0f348aae9dafeffff9090909090909041c787840400008f6dfeff49c7879004000000000000e833a77ffe0f1f8400000000004c895424104889542408488974241890909041bae74dffff4c8b5c2410488b542408909090909090904589978404000049c7879004000000000000e8eba67ffe0f1f8400000000009090909090909041c78784040000dd97ffff49c7879004000000000000e8c1a67ffe0f1f8400000000004c895424104889542408488974241890909041bae755ffffeb8c4c895424104889542408488974241890909041bae751ffffe96fffffff488b7424189090909090909041c787840400008f65feff49c7879004000000000000e85ba67ffe0f1f84000000000048896c2430e8efa67dfee944fafffff4488d0ddefbffff49898f68040000e9b6b47ffef441c78784040000f5c0ffff49c7879004000000000000e814a67ffe0f1f84000000000041c787840400008f69feff49c7879004000000000000e8f1a57ffe0f1f84000000000041c787840400008fd8feff49c7879004000000000000e8cea57ffe0f1f84000000000041c787840400008f61feff49c7879004000000000000e8aba57ffe0f1f840000000000e8244793fef4e83ea37ffef4f4f4f4f4f448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 76 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@378961ac slotKind: QWORD  <||@
  Comment 76 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 80 34 r11|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD state [bci:0]  <||@
  Comment 80 [rsi:0, r10:0]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 80 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 88 36 r8|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD  <||@
  Comment 96 38 r9|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 100 40 rbx|QWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 103 42 CMPCONSTBRANCH x: r11|DWORD trueDestinationProbability: 0.9291083219275948 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B10 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 103 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 116 block B1 null  <||@
  Comment 116 44 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 116 46 NOP  <||@
  Comment 117 48 NOP  <||@
  Comment 118 50 NOP  <||@
  Comment 119 52 NOP  <||@
  Comment 120 54 NOP  <||@
  Comment 121 56 NOP  <||@
  Comment 122 58 NOP  <||@
  Comment 123 60 NOP  <||@
  Comment 124 62 NOP  <||@
  Comment 125 64 NOP  <||@
  Comment 126 66 NOP  <||@
  Comment 127 68 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 134 70 rbx|QWORD = SHL x: rbx|QWORD y: 2 size: QWORD  <||@
  Comment 138 72 rdi|QWORD = LEA address: [rbx|QWORD + 23] size: QWORD  <||@
  Comment 142 74 rdi|QWORD = AND x: rdi|QWORD y: -8 size: QWORD  <||@
  Comment 146 76 rcx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 152 78 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: QWORD  <||@
  Comment 165 block B3 null  <||@
  Comment 165 116 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 165 118 NOP  <||@
  Comment 166 120 NOP  <||@
  Comment 167 122 NOP  <||@
  Comment 168 124 NOP  <||@
  Comment 169 126 NOP  <||@
  Comment 170 128 NOP  <||@
  Comment 171 130 NOP  <||@
  Comment 172 132 NOP  <||@
  Comment 173 134 NOP  <||@
  Comment 174 136 NOP  <||@
  Comment 175 138 NOP  <||@
  Comment 176 140 NOP  <||@
  Comment 177 142 NOP  <||@
  Comment 178 144 NOP  <||@
  Comment 179 146 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 186 148 AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 194 150 AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 202 152 AMD64PREFETCH ~address: [rdi|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 210 154 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 217 156 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 217 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 224 158 MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 228 160 rcx|QWORD = LEA address: [rdi|QWORD - 16] size: QWORD  <||@
  Comment 232 162 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B8 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 245 block B4 null  <||@
  Comment 245 164 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 245 166 NOP  <||@
  Comment 246 168 NOP  <||@
  Comment 247 170 NOP  <||@
  Comment 248 172 rcx|QWORD = MOVE input: long[16|0x10]  <||@
  Comment 255 174 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 260 block B6 loop 0 depth 1 header:241|LoopBegin  <||@
  Comment 260 188 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 288 190 NOP  <||@
  Comment 289 192 NOP  <||@
  Comment 290 194 NOP  <||@
  Comment 291 196 NOP  <||@
  Comment 292 198 NOP  <||@
  Comment 293 200 NOP  <||@
  Comment 294 202 NOP  <||@
  Comment 295 204 MOV x: [rdx|QWORD + rcx|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 303 206 rcx|QWORD = LEA address: [rcx|QWORD + 8] size: QWORD  <||@
  Comment 307 208 JUMP ~outgoingValues: [] destination: B6 -> B5  <||@
  Comment 307 block B5 loop 0 depth 1 header:241|LoopBegin  <||@
  Comment 307 176 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 307 178 NOP  <||@
  Comment 308 180 NOP  <||@
  Comment 309 182 NOP  <||@
  Comment 310 184 NOP  <||@
  Comment 311 186 CMPBRANCH (x: rdi|QWORD, y: rcx|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: QWORD  <||@
  Comment 316 block B7 null  <||@
  Comment 316 210 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 316 212 NOP  <||@
  Comment 317 214 NOP  <||@
  Comment 318 216 NOP  <||@
  Comment 319 218 JUMP ~outgoingValues: [] destination: B7 -> B9  <||@
  Comment 319 block B9 null  <||@
  Comment 319 248 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 319 250 NOP  <||@
  Comment 320 252 NOP  <||@
  Comment 321 254 NOP  <||@
  Comment 322 256 NOP  <||@
  Comment 323 258 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 323 260 JUMP ~outgoingValues: [] destination: B9 -> B28  <||@
  Comment 323 block B28 null  <||@
  Comment 323 688 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 323 690 NOP  <||@
  Comment 324 692 NOP  <||@
  Comment 325 694 NOP  <||@
  Comment 326 696 NOP  <||@
  Comment 327 698 NOP  <||@
  Comment 328 700 NOP  <||@
  Comment 329 702 NOP  <||@
  Comment 330 704 NOP  <||@
  Comment 331 706 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 334 708 rbx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 341 710 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 0 shift: 3  <||@
  Comment 345 712 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B28 -> B29 falseDestination: B28 -> B30 size: DWORD  <||@
  Comment 353 block B30 null  <||@
  Comment 353 736 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 353 738 NOP  <||@
  Comment 354 740 NOP  <||@
  Comment 355 742 NOP  <||@
  Comment 356 744 NOP  <||@
  Comment 357 746 CMPBRANCH (x: rbx|DWORD, y: r8|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B30 -> B31 falseDestination: B30 -> B32 size: DWORD  <||@
  Comment 366 block B32 null  <||@
  Comment 366 770 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 366 772 NOP  <||@
  Comment 367 774 NOP  <||@
  Comment 368 776 NOP  <||@
  Comment 369 778 NOP  <||@
  Comment 370 780 CMPBRANCH (x: rbx|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: |>| trueDestination: B32 -> B33 falseDestination: B32 -> B35 size: DWORD  <||@
  Comment 379 block B35 null  <||@
  Comment 379 826 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 379 828 NOP  <||@
  Comment 380 830 NOP  <||@
  Comment 381 832 NOP  <||@
  Comment 382 834 NOP  <||@
  Comment 383 836 TESTBRANCH (x: rbx|DWORD, y: rbx|DWORD) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 size: DWORD  <||@
  Comment 391 block B37 null  <||@
  Comment 391 850 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 391 852 NOP  <||@
  Comment 392 854 NOP  <||@
  Comment 393 856 NOP  <||@
  Comment 394 858 NOP  <||@
  Comment 395 860 NOP  <||@
  Comment 396 862 NOP  <||@
  Comment 397 864 r8|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 401 866 r9|QWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 404 868 CMPBRANCH (x: r8|DWORD, y: r11|DWORD) trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 size: DWORD  <||@
  Comment 413 block B38 null  <||@
  Comment 413 870 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 413 872 NOP  <||@
  Comment 414 874 NOP  <||@
  Comment 415 876 NOP  <||@
  Comment 416 878 JUMP ~outgoingValues: [] destination: B38 -> B41  <||@
  Comment 416 block B41 null  <||@
  Comment 416 902 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 416 904 NOP  <||@
  Comment 417 906 NOP  <||@
  Comment 418 908 NOP  <||@
  Comment 419 910 NOP  <||@
  Comment 420 912 NOP  <||@
  Comment 421 914 NOP  <||@
  Comment 422 916 NOP  <||@
  Comment 423 918 NOP  <||@
  Comment 424 920 NOP  <||@
  Comment 425 922 NOP  <||@
  Comment 426 924 NOP  <||@
  Comment 427 926 NOP  <||@
  Comment 428 928 NOP  <||@
  Comment 429 930 NOP  <||@
  Comment 430 932 r10|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 430 934 rsi|QWORD[*] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 433 936 rdi|QWORD = LEA address: [r10|QWORD[*] + 16] size: QWORD  <||@
  Comment 437 938 rsi|QWORD = LEA address: [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 441 940 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 446 942 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 449 944 - = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectArraycopyKillAny(Word,Word,Word)void, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a460:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 449 {Field[name=StubRoutines::_arrayof_oop_arraycopy, type=address, offset=0, address=0x7f78b1ffa468, value=140155947492448]:0x7f789976a460}  <||@
  Comment 454 946 JUMP ~outgoingValues: [] destination: B41 -> B45  <||@
  Comment 454 block B45 null  <||@
  Comment 454 1084 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 454 1086 NOP  <||@
  Comment 455 1088 NOP  <||@
  Comment 456 1090 NOP  <||@
  Comment 457 1092 NOP  <||@
  Comment 458 1094 NOP  <||@
  Comment 459 1096 NOP  <||@
  Comment 460 1098 NOP  <||@
  Comment 461 1100 NOP  <||@
  Comment 462 1102 rax|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 467 1104 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 476 POLL_RETURN_FAR  <||@
  Comment 493 block B39 null  <||@
  Comment 493 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 493 882 NOP  <||@
  Comment 494 884 NOP  <||@
  Comment 495 886 NOP  <||@
  Comment 496 888 NOP  <||@
  Comment 497 890 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 0.6 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B42 y: -559030611 size: DWORD inlinedY: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 497 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 510 block B40 null  <||@
  Comment 510 892 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 510 894 NOP  <||@
  Comment 511 896 NOP  <||@
  Comment 512 898 NOP  <||@
  Comment 513 900 JUMP ~outgoingValues: [] destination: B40 -> B41  <||@
  Comment 515 block B42 null  <||@
  Comment 515 948 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 515 950 stack:28|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 519 952 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 524 954 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 529 956 NOP  <||@
  Comment 530 958 NOP  <||@
  Comment 531 960 NOP  <||@
  Comment 532 962 NOP  <||@
  Comment 533 964 NOP  <||@
  Comment 534 966 NOP  <||@
  Comment 535 968 NOP  <||@
  Comment 536 970 NOP  <||@
  Comment 537 972 NOP  <||@
  Comment 538 974 NOP  <||@
  Comment 539 976 NOP  <||@
  Comment 540 978 NOP  <||@
  Comment 541 980 NOP  <||@
  Comment 542 982 NOP  <||@
  Comment 543 984 NOP  <||@
  Comment 544 986 NOP  <||@
  Comment 545 988 NOP  <||@
  Comment 546 990 NOP  <||@
  Comment 547 992 NOP  <||@
  Comment 548 994 NOP  <||@
  Comment 549 996 NOP  <||@
  Comment 550 998 NOP  <||@
  Comment 551 1000 NOP  <||@
  Comment 552 1002 rdi|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 562 1004 r8|QWORD = UNCOMPRESSPOINTER (input: r8|DWORD, ~baseRegister: rdi|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 566 1006 r8|QWORD = MOV input: [r8|QWORD + 208] size: QWORD  <||@
  Comment 573 1008 rcx|QWORD = MOVSXD input: [r8|QWORD + 20] size: QWORD  <||@
  Comment 577 1010 rdi|QWORD[*] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 580 1012 rdx|QWORD[*] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 585 1014 rdi|QWORD = LEA address: [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 589 1016 rsi|QWORD = LEA address: [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 593 1018 rdx|QWORD = MOVE input: r9|QWORD moveKind: QWORD  <||@
  Comment 596 1020 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 601 1022 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD] temps: [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: HotSpotForeignCallDescriptor{ObjectCheckcastArraycopy(Word,Word,Word,Word,Word)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=false, isGuaranteedSafepoint=false, killedLocations=[ANY_LOCATION], transition=LEAF_NO_VZERO}@0x7f789976a880:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD, rcx|QWORD, r8|QWORD -> rax|DWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 601 {Field[name=StubRoutines::_checkcast_arraycopy, type=address, offset=0, address=0x7f78b2050448, value=140155947493504]:0x7f789976a880}  <||@
  Comment 606 1024 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.99 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 size: DWORD  <||@
  Comment 614 block B43 null  <||@
  Comment 614 1026 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 614 1028 NOP  <||@
  Comment 615 1030 NOP  <||@
  Comment 616 1032 NOP  <||@
  Comment 617 1034 JUMP ~outgoingValues: [] destination: B43 -> B45  <||@
  Comment 622 block B36 null  <||@
  Comment 622 838 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 622 840 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 627 842 NOP  <||@
  Comment 628 844 NOP  <||@
  Comment 629 846 NOP  <||@
  Comment 630 848 JUMP ~outgoingValues: [] destination: B36 -> B45  <||@
  Comment 635 block B10 null  <||@
  Comment 635 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 635 264 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 640 266 NOP  <||@
  Comment 641 268 NOP  <||@
  Comment 642 270 NOP  <||@
  Comment 643 272 NOP  <||@
  Comment 644 274 NOP  <||@
  Comment 645 276 NOP  <||@
  Comment 646 278 NOP  <||@
  Comment 647 280 NOP  <||@
  Comment 648 282 NOP  <||@
  Comment 649 284 NOP  <||@
  Comment 650 286 NOP  <||@
  Comment 651 288 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 661 290 rsi|QWORD = UNCOMPRESSPOINTER (input: r11|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 665 292 rcx|QWORD = MOV input: [rsi|QWORD + 112] size: QWORD  <||@
  Comment 669 294 rcx|QWORD[.] = MOV input: [rcx|QWORD] size: QWORD  <||@
  Comment 672 296 rcx|DWORD[_] = MOV input: [rcx|QWORD[.] + 64] size: DWORD  <||@
  Comment 675 298 NULLCHECK address: [rcx|DWORD[_] * 8] state [bci:0]  <||@
  Comment 675 [rcx:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 675 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 682 300 CMPCONSTBRANCH x: rcx|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Class:void]  <||@
  Comment 682 {NarrowOop[Class:void]}  <||@
  Comment 694 block B12 null  <||@
  Comment 694 324 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 694 326 NOP  <||@
  Comment 695 328 NOP  <||@
  Comment 696 330 NOP  <||@
  Comment 697 332 NOP  <||@
  Comment 698 334 NOP  <||@
  Comment 699 336 NOP  <||@
  Comment 700 338 rdi|QWORD = MOV input: [rcx|DWORD[_] * 8 + 24] size: QWORD  <||@
  Comment 708 340 rsi|DWORD = MOV input: [rdi|QWORD + 8] size: DWORD state [bci:0]  <||@
  Comment 708 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 708 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 711 342 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.0 condition: < trueDestination: B12 -> B13 falseDestination: B12 -> B14 size: DWORD  <||@
  Comment 720 block B14 null  <||@
  Comment 720 368 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 720 370 NOP  <||@
  Comment 721 372 NOP  <||@
  Comment 722 374 NOP  <||@
  Comment 723 376 NOP  <||@
  Comment 724 378 NOP  <||@
  Comment 725 380 NOP  <||@
  Comment 726 382 NOP  <||@
  Comment 727 384 NOP  <||@
  Comment 728 386 NOP  <||@
  Comment 729 388 NOP  <||@
  Comment 730 390 NOP  <||@
  Comment 731 392 NOP  <||@
  Comment 732 394 NOP  <||@
  Comment 733 396 NOP  <||@
  Comment 734 398 NOP  <||@
  Comment 735 400 NOP  <||@
  Comment 736 402 NOP  <||@
  Comment 737 404 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 744 406 rcx|DWORD = AND x: rsi|DWORD y: 63 size: DWORD  <||@
  Comment 749 408 rbx|QWORD = SHL (x: rbx|QWORD, ~y: rcx|DWORD) size: QWORD  <||@
  Comment 752 410 rsi|DWORD = SAR x: rsi|DWORD y: 16 size: DWORD  <||@
  Comment 755 412 rsi|DWORD = AND x: rsi|DWORD y: 255 size: DWORD  <||@
  Comment 761 414 rsi|QWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 761 416 rbx|QWORD = ADD (x: rbx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 764 418 rax|QWORD = LEA address: [rbx|QWORD + 7] size: QWORD  <||@
  Comment 768 420 rax|QWORD = AND x: rax|QWORD y: -8 size: QWORD  <||@
  Comment 772 422 rcx|QWORD = ADD (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 778 424 CMPBRANCH (x: rcx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: QWORD  <||@
  Comment 791 block B16 null  <||@
  Comment 791 458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 791 460 NOP  <||@
  Comment 792 462 NOP  <||@
  Comment 793 464 NOP  <||@
  Comment 794 466 NOP  <||@
  Comment 795 468 NOP  <||@
  Comment 796 470 NOP  <||@
  Comment 797 472 NOP  <||@
  Comment 798 474 NOP  <||@
  Comment 799 476 NOP  <||@
  Comment 800 478 NOP  <||@
  Comment 801 480 NOP  <||@
  Comment 802 482 NOP  <||@
  Comment 803 484 NOP  <||@
  Comment 804 486 MOV (x: [r15|QWORD + 440], y: rcx|QWORD) size: QWORD  <||@
  Comment 811 488 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 256] instr: 0  <||@
  Comment 819 490 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 320] instr: 0  <||@
  Comment 827 492 AMD64PREFETCH ~address: [rax|QWORD + rdx|QWORD * 1 + 384] instr: 0  <||@
  Comment 835 494 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 842 496 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 852 498 rdi|DWORD = COMPRESSPOINTER (input: rdi|QWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 855 500 MOV (x: [rdx|QWORD + 8], y: rdi|DWORD) size: DWORD  <||@
  Comment 858 502 MOV (x: [rdx|QWORD + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 862 504 TESTCONSTBRANCH x: rsi|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 7 size: QWORD  <||@
  Comment 875 block B17 null  <||@
  Comment 875 506 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 875 508 NOP  <||@
  Comment 876 510 NOP  <||@
  Comment 877 512 NOP  <||@
  Comment 878 514 JUMP ~outgoingValues: [] destination: B17 -> B19  <||@
  Comment 878 block B19 null  <||@
  Comment 878 540 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 878 542 NOP  <||@
  Comment 879 544 NOP  <||@
  Comment 880 546 NOP  <||@
  Comment 881 548 NOP  <||@
  Comment 882 550 NOP  <||@
  Comment 883 552 rcx|QWORD = SUB (x: rax|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 889 554 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B24 y: 2048 size: QWORD inlinedY: null  <||@
  Comment 902 block B20 null  <||@
  Comment 902 556 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 902 558 NOP  <||@
  Comment 903 560 NOP  <||@
  Comment 904 562 NOP  <||@
  Comment 905 564 JUMP ~outgoingValues: [] destination: B20 -> B21  <||@
  Comment 910 block B22 loop 1 depth 1 header:350|LoopBegin  <||@
  Comment 910 578 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 928 580 NOP  <||@
  Comment 929 582 NOP  <||@
  Comment 930 584 NOP  <||@
  Comment 931 586 NOP  <||@
  Comment 932 588 NOP  <||@
  Comment 933 590 NOP  <||@
  Comment 934 592 NOP  <||@
  Comment 935 594 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: QWORD  <||@
  Comment 943 596 rsi|QWORD = LEA address: [rsi|QWORD + 8] size: QWORD  <||@
  Comment 947 598 JUMP ~outgoingValues: [] destination: B22 -> B21  <||@
  Comment 947 block B21 loop 1 depth 1 header:350|LoopBegin  <||@
  Comment 947 566 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 947 568 NOP  <||@
  Comment 948 570 NOP  <||@
  Comment 949 572 NOP  <||@
  Comment 950 574 NOP  <||@
  Comment 951 576 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99 condition: |>| trueDestination: B21 -> B22 falseDestination: B21 -> B23 size: QWORD  <||@
  Comment 956 block B23 null  <||@
  Comment 956 600 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 956 602 NOP  <||@
  Comment 957 604 NOP  <||@
  Comment 958 606 NOP  <||@
  Comment 959 608 JUMP ~outgoingValues: [] destination: B23 -> B25  <||@
  Comment 959 block B25 null  <||@
  Comment 959 634 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 959 636 NOP  <||@
  Comment 960 638 NOP  <||@
  Comment 961 640 NOP  <||@
  Comment 962 642 NOP  <||@
  Comment 963 644 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 963 646 JUMP ~outgoingValues: [] destination: B25 -> B26  <||@
  Comment 963 block B26 null  <||@
  Comment 963 648 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 963 650 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 963 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 973 652 NOP  <||@
  Comment 974 654 NOP  <||@
  Comment 975 656 NOP  <||@
  Comment 976 658 NOP  <||@
  Comment 977 660 NOP  <||@
  Comment 978 662 NOP  <||@
  Comment 979 664 NOP  <||@
  Comment 980 666 NOP  <||@
  Comment 981 668 rax|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD  <||@
  Comment 984 670 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 994 672 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@ebc781d encoding: base: 140154094223360 shift: 0  <||@
  Comment 998 674 CMPBRANCH (x: rsi|QWORD, y: [rax|QWORD + 56]) trueDestinationProbability: 1.0 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B46 size: QWORD  <||@
  Comment 1008 block B27 null  <||@
  Comment 1008 676 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1008 678 NOP  <||@
  Comment 1009 680 NOP  <||@
  Comment 1010 682 NOP  <||@
  Comment 1011 684 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1016 686 JUMP ~outgoingValues: [] destination: B27 -> B28  <||@
  Comment 1021 block B2 null  <||@
  Comment 1021 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1021 82 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1026 84 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[Ljava/lang/Object;, resolved>}  <||@
  Comment 1026 {meta{HotSpotType<[Ljava/lang/Object;, resolved>}}  <||@
  Comment 1036 86 NOP  <||@
  Comment 1037 88 NOP  <||@
  Comment 1038 90 NOP  <||@
  Comment 1039 92 NOP  <||@
  Comment 1040 94 NOP  <||@
  Comment 1041 96 NOP  <||@
  Comment 1042 98 NOP  <||@
  Comment 1043 100 NOP  <||@
  Comment 1044 102 NOP  <||@
  Comment 1045 104 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1048 106 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1048 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1053 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1061 108 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1061 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1061 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1063 110 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1066 112 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1071 114 JUMP ~outgoingValues: [] destination: B2 -> B28  <||@
  Comment 1076 block B8 null  <||@
  Comment 1076 220 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1076 222 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 224 NOP  <||@
  Comment 1082 226 NOP  <||@
  Comment 1083 228 NOP  <||@
  Comment 1084 230 NOP  <||@
  Comment 1085 232 NOP  <||@
  Comment 1086 234 NOP  <||@
  Comment 1087 236 NOP  <||@
  Comment 1088 238 NOP  <||@
  Comment 1089 240 NOP  <||@
  Comment 1090 242 ZERO_MEMORY (pointer: [rdx|QWORD + 16], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1100 246 JUMP ~outgoingValues: [] destination: B8 -> B9  <||@
  Comment 1105 block B44 null  <||@
  Comment 1105 1036 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1105 1038 rbx|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 1109 1040 NOP  <||@
  Comment 1110 1042 NOP  <||@
  Comment 1111 1044 NOP  <||@
  Comment 1112 1046 NOP  <||@
  Comment 1113 1048 NOP  <||@
  Comment 1114 1050 NOP  <||@
  Comment 1115 1052 NOP  <||@
  Comment 1116 1054 NOP  <||@
  Comment 1117 1056 NOP  <||@
  Comment 1118 1058 NOP  <||@
  Comment 1119 1060 NOP  <||@
  Comment 1120 1062 NOP  <||@
  Comment 1121 1064 NOP  <||@
  Comment 1122 1066 rax|DWORD = NOT value: rax|DWORD size: DWORD  <||@
  Comment 1124 1068 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 1126 1070 rsi|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1131 1072 rdx|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1133 1074 rcx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1138 1076 r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD  <||@
  Comment 1141 1078 r9|DWORD = MOVE input: rbx|DWORD moveKind: DWORD  <||@
  Comment 1144 1080 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.], r8|DWORD, r9|DWORD] temps: [] callTarget: HotSpotMethod<System.arraycopy(Object, int, Object, int, int)> invokeKind: Static config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35, 6, 8]  <||@
  Comment 1147 {HotSpotMethod<System.arraycopy(Object, int, Object, int, int)>}  <||@
  Comment 1147 INVOKESTATIC  <||@
  Comment 1152 [stack:8, stack:24]at java.util.Arrays.copyOf(Arrays.java:3515) [bci: 35, duringCall: true, rethrow: false]
              |0  |1  |2  |3                 
     locals:  |-  |-  |-  |stack:56|QWORD[.] 
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1160 1082 JUMP ~outgoingValues: [] destination: B44 -> B45  <||@
  Comment 1165 block B15 null  <||@
  Comment 1165 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1165 428 NOP  <||@
  Comment 1166 430 NOP  <||@
  Comment 1167 432 NOP  <||@
  Comment 1168 434 NOP  <||@
  Comment 1169 436 NOP  <||@
  Comment 1170 438 NOP  <||@
  Comment 1171 440 NOP  <||@
  Comment 1172 442 NOP  <||@
  Comment 1173 444 NOP  <||@
  Comment 1174 446 rsi|QWORD = MOVE input: rdi|QWORD moveKind: QWORD  <||@
  Comment 1177 448 rdx|DWORD = MOVE input: r9|DWORD moveKind: DWORD  <||@
  Comment 1180 450 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD, rdx|DWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 1180 {Stub<new_array_or_null(KlassPointer,int)Object>@0x7f78998cec00:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1185 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1193 452 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 1193 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1193 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1195 454 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1198 456 JUMP ~outgoingValues: [] destination: B15 -> B26  <||@
  Comment 1203 block B18 null  <||@
  Comment 1203 516 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1203 518 NOP  <||@
  Comment 1204 520 NOP  <||@
  Comment 1205 522 NOP  <||@
  Comment 1206 524 NOP  <||@
  Comment 1207 526 NOP  <||@
  Comment 1208 528 NOP  <||@
  Comment 1209 530 NOP  <||@
  Comment 1210 532 MOV x: [rdx|QWORD + rsi|QWORD * 1] y: 0 size: DWORD  <||@
  Comment 1217 534 rcx|QWORD = LEA address: [rsi|QWORD + 4] size: QWORD  <||@
  Comment 1221 536 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1224 538 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 1229 block B24 null  <||@
  Comment 1229 610 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1229 612 NOP  <||@
  Comment 1230 614 NOP  <||@
  Comment 1231 616 NOP  <||@
  Comment 1232 618 NOP  <||@
  Comment 1233 620 NOP  <||@
  Comment 1234 622 NOP  <||@
  Comment 1235 624 NOP  <||@
  Comment 1236 626 NOP  <||@
  Comment 1237 628 NOP  <||@
  Comment 1238 630 ZERO_MEMORY (pointer: [rsi|QWORD + rdx|QWORD * 1], length: rcx|QWORD) {pointerTemp: rdi|QWORD, valueTemp: rax|QWORD, lengthTemp: rcx|QWORD}  <||@
  Comment 1248 632 JUMP ~outgoingValues: [] destination: B24 -> B25  <||@
  Comment 1253 block B11 null  <||@
  Comment 1253 302 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1253 304 NOP  <||@
  Comment 1254 306 NOP  <||@
  Comment 1255 308 NOP  <||@
  Comment 1256 310 NOP  <||@
  Comment 1257 312 NOP  <||@
  Comment 1258 314 NOP  <||@
  Comment 1259 316 NOP  <||@
  Comment 1260 318 MOV x: [r15|QWORD + 1156] y: -103025 size: DWORD  <||@
  Comment 1271 320 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1282 322 DEOPT info [bci:0]  <||@
  Comment 1282 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1287 [stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1295 block B33 null  <||@
  Comment 1295 782 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1295 784 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1300 786 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1305 788 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1310 790 NOP  <||@
  Comment 1311 792 NOP  <||@
  Comment 1312 794 NOP  <||@
  Comment 1313 796 r10|DWORD = MOVE input: int[-45593|0xffffffffffff4de7]  <||@
  Comment 1319 802 JUMP ~outgoingValues: [] destination: B33 -> B34  <||@
  Comment 1319 block B34 null  <||@
  Comment 1319 804 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1319 730 r11|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1324 732 rdx|QWORD[.] = MOVE input: stack:56|QWORD[.] moveKind: QWORD  <||@
  Comment 1329 806 NOP  <||@
  Comment 1330 808 NOP  <||@
  Comment 1331 810 NOP  <||@
  Comment 1332 812 NOP  <||@
  Comment 1333 814 NOP  <||@
  Comment 1334 816 NOP  <||@
  Comment 1335 818 NOP  <||@
  Comment 1336 820 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1343 822 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1354 824 DEOPT info [bci:24, 6, 8]  <||@
  Comment 1354 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1359 [rdx:0, r11:0, stack:24]at java.util.Arrays.copyOf(Arrays.java:3514) [bci: 24, duringCall: false, rethrow: false]
              |0             |1         |2  |3 
     locals:  |r11|QWORD[.]  |r9|DWORD  |-  |- 
     stack:   |rdx|QWORD[.]  |          |   |  
  at java.util.Arrays.copyOf(Arrays.java:3482) [bci: 6, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 8, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1367 block B46 null  <||@
  Comment 1367 1106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1367 1108 NOP  <||@
  Comment 1368 1110 NOP  <||@
  Comment 1369 1112 NOP  <||@
  Comment 1370 1114 NOP  <||@
  Comment 1371 1116 NOP  <||@
  Comment 1372 1118 NOP  <||@
  Comment 1373 1120 NOP  <||@
  Comment 1374 1122 MOV x: [r15|QWORD + 1156] y: -26659 size: DWORD  <||@
  Comment 1385 1124 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1396 1126 DEOPT info [bci:0]  <||@
  Comment 1396 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1401 [stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1409 block B29 null  <||@
  Comment 1409 714 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1409 716 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1414 718 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1419 720 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1424 722 NOP  <||@
  Comment 1425 724 NOP  <||@
  Comment 1426 726 NOP  <||@
  Comment 1427 728 r10|DWORD = MOVE input: int[-43545|0xffffffffffff55e7]  <||@
  Comment 1433 734 JUMP ~outgoingValues: [] destination: B29 -> B34  <||@
  Comment 1435 block B31 null  <||@
  Comment 1435 748 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1435 750 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1440 752 stack:56|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1445 754 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1450 756 NOP  <||@
  Comment 1451 758 NOP  <||@
  Comment 1452 760 NOP  <||@
  Comment 1453 762 r10|DWORD = MOVE input: int[-44569|0xffffffffffff51e7]  <||@
  Comment 1459 768 JUMP ~outgoingValues: [] destination: B31 -> B34  <||@
  Comment 1464 block B13 null  <||@
  Comment 1464 344 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1464 346 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1469 348 NOP  <||@
  Comment 1470 350 NOP  <||@
  Comment 1471 352 NOP  <||@
  Comment 1472 354 NOP  <||@
  Comment 1473 356 NOP  <||@
  Comment 1474 358 NOP  <||@
  Comment 1475 360 NOP  <||@
  Comment 1476 362 MOV x: [r15|QWORD + 1156] y: -105073 size: DWORD  <||@
  Comment 1487 364 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 1498 366 DEOPT info [bci:0]  <||@
  Comment 1498 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1503 [rsi:0]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 1516 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 1541 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 1569 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1574 [rsi:0, r10:0]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 1604 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1609 [r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1639 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1644 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1674 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1679 [rax:0, r10:0, stack:24]at java.util.ArrayList.toArray(ArrayList.java:369) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:40|QWORD[.]   <||@
  Comment 1687 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1687 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 1693 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 1693 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
