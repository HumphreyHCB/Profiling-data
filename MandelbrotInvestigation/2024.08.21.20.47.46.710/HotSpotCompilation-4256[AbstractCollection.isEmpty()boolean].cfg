begin_compilation
  name " HotSpotCompilation-4256[java.util.AbstractCollection.isEmpty()]"
  method "HotSpotCompilation-4256[java.util.AbstractCollection.isEmpty()]"
  date 1724269729872
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.AbstractCollection
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v188 v190 v183 v184 v186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
v169 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v170 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i180 a181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i175 i179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractCollection.isEmpty()>
localsSize: 1
locksSize: 0
sourceFile: AbstractCollection.java
sourceLine: 91
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v153 i173 i177 i182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a172 a176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i171 i174 i178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}]
keySuccessors: [I@532651cb
keys: [HotSpotType<Ljava/util/Collections$SingletonList;, resolved>, HotSpotType<Ljava/util/PriorityQueue;, resolved>, HotSpotType<Ljava/util/ArrayList$SubList;, resolved>, HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>, HotSpotType<Ljava/util/LinkedList;, resolved>, HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>]
profileData: PROFILED keyProbabilities: [0.998687940140257, 4.917440596887017E-4, 3.987996812572019E-4, 2.4037851226932607E-4, 1.729715668892927E-4, 8.1660396385503E-6, 0.0]
stamp: void
=== Inputs ===
value: v169 
=== Succesors ===
successors: v16 v21 v26 v31 v36 v41 v44 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v169 #successors: v16 v21 v26 v31 v36 v41 v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i171 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i171 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PriorityQueue.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.PriorityQueue.size(PriorityQueue.java:556) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
i12 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a172 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a172 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.ArrayList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$SubList.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: n# java.util.ArrayList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: i173 
=== Usages ===
v185 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: i173  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a172 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i173 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-21259|0xffffffffffffacf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v185 
lastLocationAccess: - 
=== Succesors ===
next: i174 
=== Usages ===
v61 
=== Predecessor ===
a172 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v185 lastLocationAccess: - #next: i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v61 
=== Predecessor ===
i173 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i174 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i174  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
i174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v140 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1498) [bci: 22]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i175 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$SubList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1238) [bci: 5]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
i12 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: -35603
stableDimension: 0
stamp: i32 [-35603]
stampKind: i32
value: int[-35603|0xffffffffffff74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a176 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.AbstractList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList$SubList.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 1]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: n java.util.AbstractList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: i177 
=== Usages ===
v187 
=== Predecessor ===
v31 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a176 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-24587|0xffffffffffff9ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 4]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: i178 
=== Usages ===
v68 
=== Predecessor ===
a176 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v187 lastLocationAccess: - #next: i178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 8]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v146 
=== Usages ===
v68 
=== Predecessor ===
i177 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 11]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i177 
y: i178 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i177 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 11]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
i178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v144 #falseSuccessor: v145  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:907) [bci: 22]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList$SubList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.size(AbstractList.java:793) [bci: 5]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
i12 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 11]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: -36627
stableDimension: 0
stamp: i32 [-36627]
stampKind: i32
value: int[-36627|0xffffffffffff70ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i180 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i180 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.size(LinkedList.java:337) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
i12 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a181 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Arrays$ArrayList.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:4243) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: i182 
=== Usages ===
v189 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - #next: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a181 
=== Succesors ===
=== Usages ===
i182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i182 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-28427|0xffffffffffff90f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:4243) [bci: 4]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v189 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
i12 
=== Predecessor ===
a181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v189 lastLocationAccess: - #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i182 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i8 i171 i175 i179 i180 i182 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i8 i171 i175 i179 i180 i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v17 v22 v27 v32 v37 v42 
=== Succesors ===
next: v10 
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v17 v22 v27 v32 v37 v42 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i6 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i12 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v7 
trueValue: i8 
falseValue: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v7 trueValue: i8 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 12]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1238) [bci: 5]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: -11059
stableDimension: 0
stamp: i32 [-11059]
stampKind: i32
value: int[-11059|0xffffffffffffd4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32 [-36627 - -11059] bits:1...1x1x10x0011x01101
valueDescription: i32
=== Inputs ===
merge: v147 
values: i159 i161 i164 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v147 values: i159 i161 i164  <|@  <|@
f <@~|@floating>@ <|@
tid j152 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i64 [20 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v147 
values: j89 j162 j165 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v147 values: j89 j162 j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v158 v160 v163 
=== Succesors ===
next: v153 
=== Usages ===
i151 j152 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v160 v163 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i151 
speculation: j152 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i151 speculation: j152  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.util.AbstractCollection
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v188 v190 v183 v184 v186 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v170 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
=== Succesors ===
next: v46 
=== Usages ===
v169 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - #next: v46  <|@  <|@
f <@~|@floating>@ <|@
tid v169 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v170 
=== Succesors ===
=== Usages ===
v46 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v170  <|@  <|@
f <@~|@floating>@ <|@
tid i8 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i9 i12 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i180 a181 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i175 i179 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<AbstractCollection.isEmpty()>
localsSize: 1
locksSize: 0
sourceFile: AbstractCollection.java
sourceLine: 91
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v153 i173 i177 i182 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a172 a176 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i171 i174 i178 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}]
keySuccessors: [I@532651cb
keys: [HotSpotType<Ljava/util/Collections$SingletonList;, resolved>, HotSpotType<Ljava/util/PriorityQueue;, resolved>, HotSpotType<Ljava/util/ArrayList$SubList;, resolved>, HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>, HotSpotType<Ljava/util/LinkedList;, resolved>, HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>]
profileData: PROFILED keyProbabilities: [0.998687940140257, 4.917440596887017E-4, 3.987996812572019E-4, 2.4037851226932607E-4, 1.729715668892927E-4, 8.1660396385503E-6, 0.0]
stamp: void
=== Inputs ===
value: v169 
=== Succesors ===
successors: v16 v21 v26 v31 v36 v41 v44 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v169 #successors: v16 v21 v26 v31 v36 v41 v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v17 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v17  <|@  <|@
f <@*|@fixed>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
v16 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i171 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i171 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PriorityQueue.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.PriorityQueue.size(PriorityQueue.java:556) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v22 
=== Usages ===
i12 
=== Predecessor ===
v21 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i171 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a172 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a172 <|@
result v5|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.ArrayList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$SubList.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 1]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: n# java.util.ArrayList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: i173 
=== Usages ===
v185 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: i173  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v5|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a172 
=== Succesors ===
=== Usages ===
i173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i173 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-21259|0xffffffffffffacf5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v185 
lastLocationAccess: - 
=== Succesors ===
next: i174 
=== Usages ===
v61 
=== Predecessor ===
a172 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v185 lastLocationAccess: - #next: i174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 8]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v61 
=== Predecessor ===
i173 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid v61 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i173 
y: i174 
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i173 y: i174  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v61 
=== Succesors ===
trueSuccessor: v140 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
i174 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v61 #trueSuccessor: v140 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1498) [bci: 22]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i175 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i175 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ArrayList$SubList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1238) [bci: 5]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: v27 
=== Usages ===
i12 
=== Predecessor ===
v140 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i175 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 11]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid j162 <|@
result long[1300|0x514] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: 1300
stableDimension: 0
stamp: i64 [1300]
stampKind: i64
value: long[1300|0x514]
=== Inputs ===
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i161 <|@
result int[-35603|0xffffffffffff74ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: -35603
stableDimension: 0
stamp: i32 [-35603]
stampKind: i32
value: int[-35603|0xffffffffffff74ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a176 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a176 <|@
result v8|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.util.AbstractList
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList$SubList.root
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 1]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: n java.util.AbstractList
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
=== Succesors ===
next: i177 
=== Usages ===
v187 
=== Predecessor ===
v31 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - #next: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v8|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a176 
=== Succesors ===
=== Usages ===
i177 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i177 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: int[-24587|0xffffffffffff9ff5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 4]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v187 
lastLocationAccess: - 
=== Succesors ===
next: i178 
=== Usages ===
v68 
=== Predecessor ===
a176 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v187 lastLocationAccess: - #next: i178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 8]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v146 
=== Usages ===
v68 
=== Predecessor ===
i177 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 11]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i177 
y: i178 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i177 y: i178  <|@  <|@
f <@*|@fixed>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 11]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v68 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v145 
=== Usages ===
=== Predecessor ===
i178 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v68 #trueSuccessor: v144 #falseSuccessor: v145  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:907) [bci: 22]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i179 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i179 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: AbstractList$SubList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.AbstractList$SubList.size(AbstractList.java:793) [bci: 5]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
=== Succesors ===
next: v32 
=== Usages ===
i12 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - #next: v32  <|@  <|@
f <@*|@fixed>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i179 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.AbstractList$SubList.checkForComodification(AbstractList.java:905) [bci: 11]
at java.util.AbstractList$SubList.size(AbstractList.java:792) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid j165 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i164 <|@
result int[-36627|0xffffffffffff70ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: -36627
stableDimension: 0
stamp: i32 [-36627]
stampKind: i32
value: int[-36627|0xffffffffffff70ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v145 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: i180 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i180  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i180 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: LinkedList.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.LinkedList.size(LinkedList.java:337) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: v37 
=== Usages ===
i12 
=== Predecessor ===
v36 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i180 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: a181 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a181 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Arrays$ArrayList.a
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:4243) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
=== Succesors ===
next: i182 
=== Usages ===
v189 
=== Predecessor ===
v41 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - #next: i182  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v12|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a181 
=== Succesors ===
=== Usages ===
i182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i182 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-28427|0xffffffffffff90f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Arrays$ArrayList.size(Arrays.java:4243) [bci: 4]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v189 
lastLocationAccess: - 
=== Succesors ===
next: v42 
=== Usages ===
i12 
=== Predecessor ===
a181 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v189 lastLocationAccess: - #next: v42  <|@  <|@
f <@*|@fixed>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v11 
=== Predecessor ===
i182 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i12 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v11 
values: i8 i171 i175 i179 i180 i182 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v11 values: i8 i171 i175 i179 i180 i182  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v17 v22 v27 v32 v37 v42 
=== Succesors ===
next: v10 
=== Usages ===
i12 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v17 v22 v27 v32 v37 v42 #next: v10  <|@  <|@
f <@~|@floating>@ <|@
tid i6 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v7 i9 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i12 
y: i6 
=== Succesors ===
=== Usages ===
i9 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i12 y: i6  <|@  <|@
f <@~|@floating>@ <|@
tid i9 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 4]
stamp: i32 [0 - 1] bits:0...0x
=== Inputs ===
condition: v7 
trueValue: i8 
falseValue: i6 
=== Succesors ===
=== Usages ===
v10 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@jdk.graal.compiler.nodes.calc.ConditionalNode>@ condition: v7 trueValue: i8 falseValue: i6  <|@  <|@
f <@*|@fixed>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 12]
stamp: void
=== Inputs ===
memoryMap: - 
result: i9 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: i9  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v158  <|@  <|@
f <@~|@floating>@ <|@
tid j89 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.size(ArrayList.java:1238) [bci: 5]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j152 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i159 <|@
result int[-11059|0xffffffffffffd4cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
rawvalue: -11059
stableDimension: 0
stamp: i32 [-11059]
stampKind: i32
value: int[-11059|0xffffffffffffd4cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v147 
=== Predecessor ===
v44 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i151 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i32 [-36627 - -11059] bits:1...1x1x10x0011x01101
valueDescription: i32
=== Inputs ===
merge: v147 
values: i159 i161 i164 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v147 values: i159 i161 i164  <|@  <|@
f <@~|@floating>@ <|@
tid j152 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: i64 [20 - 1300] bits:0...0xxxx0010100
valueDescription: i64
=== Inputs ===
merge: v147 
values: j89 j162 j165 
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v147 values: j89 j162 j165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v147 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v158 v160 v163 
=== Succesors ===
next: v153 
=== Usages ===
i151 j152 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v160 v163 #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1496) [bci: 4]
at java.util.ArrayList$SubList.size(ArrayList.java:1237) [bci: 1]
at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 1]
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i151 
speculation: j152 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v147 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i151 speculation: j152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[88, 90[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 40[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [40, 50[[92, 102[[106, 136[[140, 170[[174, 184[[188, 203[[206, 257[40 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 120 MustHaveRegister 124 MustHaveRegister 136 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d -1 [42, 46[42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q v1|d [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [44, 47[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v14|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [120, 122[120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[v6|d]" v6|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[v9|d]" v9|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d -1 [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d -1 [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v4|d [60, 84[84 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d -1 [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[v16|d]" v16|d -1 [236, 252[252 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [236, 254[254 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[88, 90[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 40[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [40, 50[[92, 102[[106, 136[[140, 170[[174, 184[[188, 203[[206, 257[40 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 120 MustHaveRegister 124 MustHaveRegister 136 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [42, 46[42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q v1|d [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q -1 [44, 47[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v14|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [120, 122[120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v4|d [60, 84[84 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d -1 [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [236, 252[252 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [236, 254[254 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[88, 90[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 40[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [40, 50[[92, 102[[106, 136[[140, 170[[174, 184[[188, 203[[206, 257[40 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 120 MustHaveRegister 124 MustHaveRegister 136 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [42, 46[42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q v1|d [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q -1 [44, 47[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v14|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [120, 122[120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v4|d [60, 84[84 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d -1 [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [236, 252[252 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [236, 254[254 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [int[1|0x1]] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [v4|DWORD] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [v7|DWORD] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [v10|DWORD] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [v13|DWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [int[-36627|0xffffffffffff70ed], long[660|0x294]] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [int[-11059|0xffffffffffffd4cd], long[20|0x14]] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [int[-35603|0xffffffffffff74ed], long[1300|0x514]] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|d fixed "[rax|d]" rax|d v15|d [0, 1[[88, 90[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 36[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 40[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [40, 50[[92, 102[[106, 136[[140, 170[[174, 184[[188, 203[[206, 257[40 MustHaveRegister 42 MustHaveRegister 102 MustHaveRegister 120 MustHaveRegister 124 MustHaveRegister 136 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister 170 MustHaveRegister 184 MustHaveRegister 200 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[rax|d]" v1|d -1 [42, 46[42 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q v1|d [46, 49[46 MustHaveRegister 48 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r10|q]" v3|q -1 [44, 47[44 MustHaveRegister 46 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[rax|d]" v4|d v14|d [102, 105[102 MustHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v5|d DWORD "[r10|d]" v5|d -1 [120, 122[120 MustHaveRegister 122 MustHaveRegister  "NoSpillStore"
  v6|d DWORD "[r10|d]" v6|d -1 [122, 124[122 MustHaveRegister 124 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v8|d DWORD "[r10|d]" v8|d -1 [154, 156[154 MustHaveRegister 156 MustHaveRegister  "NoSpillStore"
  v9|d DWORD "[r10|d]" v9|d -1 [156, 158[156 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[r10|d]" v10|d -1 [170, 173[170 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[r10|d]" v11|d -1 [184, 187[184 MustHaveRegister 186 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r10|d]" v12|d -1 [200, 202[200 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[r10|d]" v13|d -1 [202, 205[202 MustHaveRegister 204 ShouldHaveRegister  "NoSpillStore"
  v14|d DWORD "[rax|d]" v14|d v4|d [60, 84[84 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d -1 [86, 88[86 MustHaveRegister 88 ShouldHaveRegister  "NoSpillStore"
  v16|d DWORD "[r10|d]" v16|d -1 [236, 252[252 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[r11|q]" v17|q -1 [236, 254[254 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [v14|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [v16|DWORD, v17|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   40  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v1|DWORD = MOV input: [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction v2|QWORD = UNCOMPRESSPOINTER (input: v1|DWORD, ~baseRegister: v3|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v2|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: v14|DWORD, y: v14|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction v15|DWORD = SETCC condition: = <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: v15|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction v4|DWORD = MOV input: [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction v5|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v6|DWORD = MOV input: [v5|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: v6|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v7|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v7|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction v8|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v9|DWORD = MOV input: [v8|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: v9|DWORD, y: [v0|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction v10|DWORD = MOV input: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction v11|DWORD = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction v12|DWORD[_] = MOV input: [v0|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v13|DWORD = MOV input: [v12|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = MOVE input: v13|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v16|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v17|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" "B3" "B6" "B9" "B10" "B12" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD <|@ <|@
      nr   42  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   44  <|@ instruction r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   46  <|@ instruction rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   48  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4607170600815426555
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   58  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B1" "B2" "B4" "B7" "B9" "B10" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr   86  <|@ instruction rax|DWORD = SETCC condition: = <|@ <|@
      nr   90  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4557674761680993673
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  104  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  124  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B11" 
    xhandlers
    flags 
    probability 4555992179301029507
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  138  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  156  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  158  <|@ instruction CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B11" 
    xhandlers
    flags 
    probability 4553000425810133083
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  172  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4550513548469701095
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  186  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B11" 
    xhandlers
    flags 
    probability 4530938004493207841
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  202  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed] // MoveResolver resolve mapping <|@ <|@
      nr  214  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B5" "B8" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  254  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd] // MoveResolver resolve mapping <|@ <|@
      nr  224  <|@ instruction JUMP ~outgoingValues: [] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B13" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1300|0x514] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed] // MoveResolver resolve mapping <|@ <|@
      nr  234  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B13 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #1          // size:()int
     4: ifne          11
     7: iconst_1      
     8: goto          12
    11: iconst_0      
    12: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f8589010000909090909090909090909090909090909048896c24108b460849ba0000002b787f0000498d0402483b05000000000f8446000000483b05000000000f846b000000483b05000000000f8467000000483b05000000000f8483000000483b05000000000f84a2000000483b05000000000f84a5000000e9eb000000909090b801000000909090909090909090909085c00f94c00fb6c0488b6c24104883c418493ba7500400000f87ee000000c3909090908b460cebcd909090909090448b5618468b14d50c000000443b560c0f85a600000090909090448b5614418bc2eba4909090909090448b5618468b14d50c000000443b560c0f853900000090909090448b5614418bc2e978ffffff90909090448b5610418bc2e968ffffff9090909090448b5610468b14d50c000000418bc2e94fffffff90909049c7c39402000041baed70ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c31400000041bacdd4ffffebcc90909049c7c31405000041baed74ffffebba48896c2410e800000000e968fefffff4488d0dfefeffff49898f68040000e91afefffff441c78784040000f5acffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f59fffff49c7879004000000000000e8000000000f1f84000000000041c78784040000f590ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 80 38 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD  <||@
  Comment 80 42 rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 83 44 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 93 46 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0  <||@
  Comment 97 48 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 97 {DataSection[0x0]}  <||@
  Comment 110 {DataSection[0x8]}  <||@
  Comment 123 {DataSection[0x10]}  <||@
  Comment 136 {DataSection[0x18]}  <||@
  Comment 149 {DataSection[0x20]}  <||@
  Comment 162 {DataSection[0x28]}  <||@
  Comment 180 block B1 null  <||@
  Comment 180 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 180 52 NOP  <||@
  Comment 181 54 NOP  <||@
  Comment 182 56 NOP  <||@
  Comment 183 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 188 58 JUMP ~outgoingValues: [] destination: B1 -> B11  <||@
  Comment 188 block B11 null  <||@
  Comment 188 60 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 188 62 NOP  <||@
  Comment 189 64 NOP  <||@
  Comment 190 66 NOP  <||@
  Comment 191 68 NOP  <||@
  Comment 192 70 NOP  <||@
  Comment 193 72 NOP  <||@
  Comment 194 74 NOP  <||@
  Comment 195 76 NOP  <||@
  Comment 196 78 NOP  <||@
  Comment 197 80 NOP  <||@
  Comment 198 82 NOP  <||@
  Comment 199 84 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 201 86 rax|DWORD = SETCC condition: =  <||@
  Comment 207 90 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 216 POLL_RETURN_FAR  <||@
  Comment 230 block B2 null  <||@
  Comment 230 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 230 94 NOP  <||@
  Comment 231 96 NOP  <||@
  Comment 232 98 NOP  <||@
  Comment 233 100 NOP  <||@
  Comment 234 102 rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 237 104 JUMP ~outgoingValues: [] destination: B2 -> B11  <||@
  Comment 239 block B3 null  <||@
  Comment 239 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 239 108 NOP  <||@
  Comment 240 110 NOP  <||@
  Comment 241 112 NOP  <||@
  Comment 242 114 NOP  <||@
  Comment 243 116 NOP  <||@
  Comment 244 118 NOP  <||@
  Comment 245 120 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 249 122 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 249 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 249 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 257 124 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 267 block B4 null  <||@
  Comment 267 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 128 NOP  <||@
  Comment 268 130 NOP  <||@
  Comment 269 132 NOP  <||@
  Comment 270 134 NOP  <||@
  Comment 271 136 r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 275 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 278 138 JUMP ~outgoingValues: [] destination: B4 -> B11  <||@
  Comment 280 block B6 null  <||@
  Comment 280 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 142 NOP  <||@
  Comment 281 144 NOP  <||@
  Comment 282 146 NOP  <||@
  Comment 283 148 NOP  <||@
  Comment 284 150 NOP  <||@
  Comment 285 152 NOP  <||@
  Comment 286 154 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 290 156 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 290 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 298 158 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 308 block B7 null  <||@
  Comment 308 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 162 NOP  <||@
  Comment 309 164 NOP  <||@
  Comment 310 166 NOP  <||@
  Comment 311 168 NOP  <||@
  Comment 312 170 r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 316 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 319 172 JUMP ~outgoingValues: [] destination: B7 -> B11  <||@
  Comment 324 block B9 null  <||@
  Comment 324 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 176 NOP  <||@
  Comment 325 178 NOP  <||@
  Comment 326 180 NOP  <||@
  Comment 327 182 NOP  <||@
  Comment 328 184 r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 332 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 335 186 JUMP ~outgoingValues: [] destination: B9 -> B11  <||@
  Comment 340 block B10 null  <||@
  Comment 340 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 190 NOP  <||@
  Comment 341 192 NOP  <||@
  Comment 342 194 NOP  <||@
  Comment 343 196 NOP  <||@
  Comment 344 198 NOP  <||@
  Comment 345 200 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 349 202 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 349 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 349 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 357 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 360 204 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 365 block B8 null  <||@
  Comment 365 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 365 208 NOP  <||@
  Comment 366 210 NOP  <||@
  Comment 367 212 NOP  <||@
  Comment 368 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 375 -1 r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed]  <||@
  Comment 381 214 JUMP ~outgoingValues: [] destination: B8 -> B13  <||@
  Comment 381 block B13 null  <||@
  Comment 381 236 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 381 238 NOP  <||@
  Comment 382 240 NOP  <||@
  Comment 383 242 NOP  <||@
  Comment 384 244 NOP  <||@
  Comment 385 246 NOP  <||@
  Comment 386 248 NOP  <||@
  Comment 387 250 NOP  <||@
  Comment 388 252 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 395 254 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 402 256 DEOPT info [bci:0]  <||@
  Comment 402 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 407 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 415 block B12 null  <||@
  Comment 415 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 218 NOP  <||@
  Comment 416 220 NOP  <||@
  Comment 417 222 NOP  <||@
  Comment 418 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 425 -1 r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd]  <||@
  Comment 431 224 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 433 block B5 null  <||@
  Comment 433 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 433 228 NOP  <||@
  Comment 434 230 NOP  <||@
  Comment 435 232 NOP  <||@
  Comment 436 -1 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 443 -1 r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed]  <||@
  Comment 449 234 JUMP ~outgoingValues: [] destination: B5 -> B13  <||@
  Comment 456 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 481 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 509 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 514 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 544 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 549 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 579 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 584 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 592 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 592 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 598 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4256[java.util.AbstractCollection.isEmpty()]"
  method "HotSpotCompilation-4256[java.util.AbstractCollection.isEmpty()]"
  date 1724269730033
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ad84d80 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e302a0fe66669089842400c0feff4883ec189041817f20000000000f8589010000909090909090909090909090909090909048896c24108b460849ba0000002b787f0000498d0402483b0558ffffff0f8446000000483b0553ffffff0f846b000000483b054effffff0f8467000000483b0549ffffff0f8483000000483b0544ffffff0f84a2000000483b053fffffff0f84a5000000e9eb000000909090b801000000909090909090909090909085c00f94c00fb6c0488b6c24104883c418493ba7500400000f87ee000000c3909090908b460cebcd909090909090448b5618468b14d50c000000443b560c0f85a600000090909090448b5614418bc2eba4909090909090448b5618468b14d50c000000443b560c0f853900000090909090448b5614418bc2e978ffffff90909090448b5610418bc2e968ffffff9090909090448b5610468b14d50c000000418bc2e94fffffff90909049c7c39402000041baed70ffff90909090909090458997840400004d899f90040000e86362a0fe0f1f84000000000090909049c7c31400000041bacdd4ffffebcc90909049c7c31405000041baed74ffffebba48896c2410e8d3629efee968fefffff4488d0dfefeffff49898f68040000e99a70a0fef441c78784040000f5acffff49c7879004000000000000e8f861a0fe0f1f84000000000041c78784040000f59fffff49c7879004000000000000e8d561a0fe0f1f84000000000041c78784040000f590ffff49c7879004000000000000e8b261a0fe0f1f840000000000e82b03b4fef4e8455fa0fef4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 NOP  <||@
  Comment 75 36 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 80 38 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@368fed2d slotKind: QWORD  <||@
  Comment 80 42 rax|DWORD = MOV input: [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 83 44 r10|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 93 46 rax|QWORD = UNCOMPRESSPOINTER (input: rax|DWORD, ~baseRegister: r10|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@57d6ca97 encoding: base: 140154094223360 shift: 0  <||@
  Comment 97 48 AMD64HOTSPOTSTRATEGYSWITCH ~key: rax|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljava/util/Collections$SingletonList;, resolved>}, meta{HotSpotType<Ljava/util/PriorityQueue;, resolved>}, meta{HotSpotType<Ljava/util/ArrayList$SubList;, resolved>}, meta{HotSpotType<Ljava/util/AbstractList$RandomAccessSubList;, resolved>}, meta{HotSpotType<Ljava/util/LinkedList;, resolved>}, meta{HotSpotType<Ljava/util/Arrays$ArrayList;, resolved>}] keyTargets: [B0 -> B1, B0 -> B2, B0 -> B3, B0 -> B6, B0 -> B9, B0 -> B10] defaultTarget: B0 -> B12 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 97 {DataSection[0x0]}  <||@
  Comment 110 {DataSection[0x8]}  <||@
  Comment 123 {DataSection[0x10]}  <||@
  Comment 136 {DataSection[0x18]}  <||@
  Comment 149 {DataSection[0x20]}  <||@
  Comment 162 {DataSection[0x28]}  <||@
  Comment 180 block B1 null  <||@
  Comment 180 50 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 180 52 NOP  <||@
  Comment 181 54 NOP  <||@
  Comment 182 56 NOP  <||@
  Comment 183 -1 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 188 58 JUMP ~outgoingValues: [] destination: B1 -> B11  <||@
  Comment 188 block B11 null  <||@
  Comment 188 60 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 188 62 NOP  <||@
  Comment 189 64 NOP  <||@
  Comment 190 66 NOP  <||@
  Comment 191 68 NOP  <||@
  Comment 192 70 NOP  <||@
  Comment 193 72 NOP  <||@
  Comment 194 74 NOP  <||@
  Comment 195 76 NOP  <||@
  Comment 196 78 NOP  <||@
  Comment 197 80 NOP  <||@
  Comment 198 82 NOP  <||@
  Comment 199 84 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 201 86 rax|DWORD = SETCC condition: =  <||@
  Comment 207 90 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 216 POLL_RETURN_FAR  <||@
  Comment 230 block B2 null  <||@
  Comment 230 92 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 230 94 NOP  <||@
  Comment 231 96 NOP  <||@
  Comment 232 98 NOP  <||@
  Comment 233 100 NOP  <||@
  Comment 234 102 rax|DWORD = MOV input: [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 237 104 JUMP ~outgoingValues: [] destination: B2 -> B11  <||@
  Comment 239 block B3 null  <||@
  Comment 239 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 239 108 NOP  <||@
  Comment 240 110 NOP  <||@
  Comment 241 112 NOP  <||@
  Comment 242 114 NOP  <||@
  Comment 243 116 NOP  <||@
  Comment 244 118 NOP  <||@
  Comment 245 120 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 249 122 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 249 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 249 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 257 124 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 267 block B4 null  <||@
  Comment 267 126 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 267 128 NOP  <||@
  Comment 268 130 NOP  <||@
  Comment 269 132 NOP  <||@
  Comment 270 134 NOP  <||@
  Comment 271 136 r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 275 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 278 138 JUMP ~outgoingValues: [] destination: B4 -> B11  <||@
  Comment 280 block B6 null  <||@
  Comment 280 140 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 280 142 NOP  <||@
  Comment 281 144 NOP  <||@
  Comment 282 146 NOP  <||@
  Comment 283 148 NOP  <||@
  Comment 284 150 NOP  <||@
  Comment 285 152 NOP  <||@
  Comment 286 154 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 290 156 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 290 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 298 158 CMPBRANCH (x: r10|DWORD, y: [rsi|QWORD[.] + 12]) trueDestinationProbability: 1.0 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 308 block B7 null  <||@
  Comment 308 160 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 308 162 NOP  <||@
  Comment 309 164 NOP  <||@
  Comment 310 166 NOP  <||@
  Comment 311 168 NOP  <||@
  Comment 312 170 r10|DWORD = MOV input: [rsi|QWORD[.] + 20] size: DWORD  <||@
  Comment 316 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 319 172 JUMP ~outgoingValues: [] destination: B7 -> B11  <||@
  Comment 324 block B9 null  <||@
  Comment 324 174 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 324 176 NOP  <||@
  Comment 325 178 NOP  <||@
  Comment 326 180 NOP  <||@
  Comment 327 182 NOP  <||@
  Comment 328 184 r10|DWORD = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 332 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 335 186 JUMP ~outgoingValues: [] destination: B9 -> B11  <||@
  Comment 340 block B10 null  <||@
  Comment 340 188 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 190 NOP  <||@
  Comment 341 192 NOP  <||@
  Comment 342 194 NOP  <||@
  Comment 343 196 NOP  <||@
  Comment 344 198 NOP  <||@
  Comment 345 200 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 16] size: DWORD  <||@
  Comment 349 202 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 349 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 349 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 357 -1 rax|DWORD = MOVE input: r10|DWORD moveKind: DWORD  <||@
  Comment 360 204 JUMP ~outgoingValues: [] destination: B10 -> B11  <||@
  Comment 365 block B8 null  <||@
  Comment 365 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 365 208 NOP  <||@
  Comment 366 210 NOP  <||@
  Comment 367 212 NOP  <||@
  Comment 368 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 375 -1 r10|DWORD = MOVE input: int[-36627|0xffffffffffff70ed]  <||@
  Comment 381 214 JUMP ~outgoingValues: [] destination: B8 -> B13  <||@
  Comment 381 block B13 null  <||@
  Comment 381 236 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 381 238 NOP  <||@
  Comment 382 240 NOP  <||@
  Comment 383 242 NOP  <||@
  Comment 384 244 NOP  <||@
  Comment 385 246 NOP  <||@
  Comment 386 248 NOP  <||@
  Comment 387 250 NOP  <||@
  Comment 388 252 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 395 254 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 402 256 DEOPT info [bci:0]  <||@
  Comment 402 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 407 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 415 block B12 null  <||@
  Comment 415 216 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 415 218 NOP  <||@
  Comment 416 220 NOP  <||@
  Comment 417 222 NOP  <||@
  Comment 418 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 425 -1 r10|DWORD = MOVE input: int[-11059|0xffffffffffffd4cd]  <||@
  Comment 431 224 JUMP ~outgoingValues: [] destination: B12 -> B13  <||@
  Comment 433 block B5 null  <||@
  Comment 433 226 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 433 228 NOP  <||@
  Comment 434 230 NOP  <||@
  Comment 435 232 NOP  <||@
  Comment 436 -1 r11|QWORD = MOVE input: long[1300|0x514]  <||@
  Comment 443 -1 r10|DWORD = MOVE input: int[-35603|0xffffffffffff74ed]  <||@
  Comment 449 234 JUMP ~outgoingValues: [] destination: B5 -> B13  <||@
  Comment 456 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 481 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 509 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 514 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 544 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 549 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 579 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 584 [rsi:0]at java.util.AbstractCollection.isEmpty(AbstractCollection.java:91) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 592 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 592 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 598 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 598 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
